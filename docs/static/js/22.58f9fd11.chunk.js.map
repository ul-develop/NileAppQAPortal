{"version":3,"sources":["ui-component/extended/AnimateButton.tsx","ui-component/extended/Form/InputLabel.tsx","views/application/property/Validation.ts","views/application/components/PhoneInput/index.tsx","views/application/property/PropertyAdd.tsx","views/pages/property/AddPage.tsx"],"names":["AnimateButton","React","forwardRef","ref","offset1","offset2","children","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","whileHover","hover","whileTap","tap","defaultProps","BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","color","palette","text","primary","fontWeight","marginBottom","InputLabel","others","validationAddNewSchema","yup","shape","email","required","firstName","lastName","phone","test","value","_isEmpty","isValidPhoneNumber","config","locate","countryCode","validationEditSchema","dataTreePropertyId","buyerAgentFeePct","min","max","listingAgentFeePct","yearBuilt","matches","useStyle","makeStyles","phoneInput","display","pointerEvents","outline","border","background","fontSize","grey","fontFamily","typography","PhoneInput","classes","name","onChange","onBlur","className","other","country","defaultCountry","international","withCountryCallingCode","countryCallingCodeEditable","clsx","target","PropertyAdd","history","useHistory","useMutation","gql","createProperty","addNewProperty","showSnackBar","useSnackBar","onSubmitHandler","values","a","setStatus","setSubmitting","variables","SellerInfo","Email","FirstName","LastName","Phone","data","message","alertSeverity","propertyId","_get","propertyLink","generatePath","PATHS","PROPERTY","id","push","success","formik","useFormik","initialValues","validationSchema","onSubmit","touched","errors","handleSubmit","handleChange","handleBlur","isSubmitting","Grid","container","spacing","gridSpacing","item","xs","noValidate","CardContent","alignItems","lg","TextField","defaultValue","fullWidth","placeholder","error","Boolean","helperText","InputProps","inputComponent","Divider","CardActions","Stack","justifyContent","Button","variant","disabled","AddPage","MainCard","title","content"],"mappings":"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","file":"static/js/22.58f9fd11.chunk.js","sourcesContent":["import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\nexport type ScaleProps = {\n\thover: number | string | undefined;\n\ttap: number | string | undefined;\n};\n\nexport interface AnimateButtonProps {\n\tchildren?: React.ReactNode;\n\ttype?: 'slide' | 'scale' | 'rotate';\n\tdirection?: 'up' | 'down' | 'left' | 'right';\n\toffset?: number;\n\tscale?: ScaleProps;\n}\n\n// -----------------------|| ANIMATION BUTTON ||-----------------------//\n\nconst AnimateButton = React.forwardRef(\n\t(\n\t\t{ children, type, direction, offset, scale }: AnimateButtonProps,\n\t\tref: Ref<HTMLDivElement>\n\t) => {\n\t\tlet offset1;\n\t\tlet offset2;\n\t\tswitch (direction) {\n\t\t\tcase 'up':\n\t\t\tcase 'left':\n\t\t\t\toffset1 = offset;\n\t\t\t\toffset2 = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\tcase 'down':\n\t\t\tdefault:\n\t\t\t\toffset1 = 0;\n\t\t\t\toffset2 = offset;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst [x, cycleX] = useCycle(offset1, offset2);\n\t\tconst [y, cycleY] = useCycle(offset1, offset2);\n\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ rotate: 360 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\t\t\trepeatType: 'loop',\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\trepeatDelay: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t\tcase 'slide':\n\t\t\t\tif (direction === 'up' || direction === 'down') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tanimate={{ y: y !== undefined ? y : '' }}\n\t\t\t\t\t\t\tonHoverEnd={() => cycleY()}\n\t\t\t\t\t\t\tonHoverStart={() => cycleY()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ x: x !== undefined ? x : '' }}\n\t\t\t\t\t\tonHoverEnd={() => cycleX()}\n\t\t\t\t\t\tonHoverStart={() => cycleX()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\n\t\t\tcase 'scale':\n\t\t\tdefault:\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\twhileHover={{ scale: scale?.hover }}\n\t\t\t\t\t\twhileTap={{ scale: scale?.tap }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t}\n\t}\n);\n\nAnimateButton.defaultProps = {\n\ttype: 'scale',\n\toffset: 10,\n\tdirection: 'right',\n\tscale: {\n\t\thover: 1,\n\t\ttap: 0.9,\n\t},\n};\n\nexport default AnimateButton;\n","import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n\tInputLabel as MuiInputLabel,\n\tInputLabelProps,\n} from '@material-ui/core';\n\nconst BInputLabel = styled(\n\t(props: MUIInputLabelProps) => <MuiInputLabel {...props} />,\n\t{\n\t\tshouldForwardProp: prop => prop !== 'horizontal',\n\t}\n)(({ theme, horizontal }) => ({\n\tcolor: theme.palette.text.primary,\n\tfontWeight: 500,\n\tmarginBottom: horizontal ? 0 : 8,\n}));\n\nexport interface MUIInputLabelProps extends InputLabelProps {\n\thorizontal: boolean;\n}\n\nconst InputLabel = ({\n\tchildren,\n\thorizontal,\n\t...others\n}: MUIInputLabelProps) => (\n\t\t<BInputLabel horizontal={horizontal} {...others}>\n\t\t\t{children}\n\t\t</BInputLabel>\n\t);\n\nInputLabel.defaultProps = {\n\thorizontal: false,\n};\n\nexport default InputLabel;\n","import * as yup from 'yup';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport _isEmpty from 'lodash.isempty';\nimport config from '../../../config';\n\nexport const validationAddNewSchema = yup.object().shape({\n\temail: yup\n\t\t.string()\n\t\t.required('Email is required')\n\t\t.email('Please enter a valid email address.'),\n\tfirstName: yup.string().required('First Name is required'),\n\tlastName: yup.string().required('Last Name is required'),\n\tphone: yup\n\t\t.string()\n\t\t.test(\n\t\t\t'Phone Number Test',\n\t\t\t'Please enter a valid phone number',\n\t\t\t(value = '') => {\n\t\t\t\tif (_isEmpty(value)) return true;\n\t\t\t\treturn isValidPhoneNumber(value, config.locate.countryCode);\n\t\t\t}\n\t\t),\n});\n\nexport const validationEditSchema = yup.object().shape({\n\tdataTreePropertyId: yup\n\t\t.string()\n\t\t.required('Please search and select a property'),\n\tbuyerAgentFeePct: yup\n\t\t.number()\n\t\t.min(0.1, 'Buyer Agent Fee must be greater than or equal to 0.1')\n\t\t.max(10, 'Buyer Agent Fee must be less than or equal to 10')\n\t\t.required('Buyer Agent Fee is required'),\n\tlistingAgentFeePct: yup\n\t\t.number()\n\t\t.min(0.1, 'Listing Agent Fee must be greater than or equal to 0.1')\n\t\t.max(10, 'Listing Agent Fee must be less than or equal to 10')\n\t\t.required('Listing Agent Fee is required'),\n\tyearBuilt: yup\n\t\t.string()\n\t\t.required('Year Built is required')\n\t\t.matches(/^\\d{4}$/, 'Year built must be a number and format like 1999')\n});\n","import { Theme } from '@material-ui/core';\nimport PhoneNumberInput from 'react-phone-number-input';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport { forwardRef } from 'react';\nimport config from '../../../../config';\n\nconst useStyle = makeStyles((theme: Theme) => ({\n\tphoneInput: {\n\t\t'& .PhoneInputCountrySelectArrow': {\n\t\t\tdisplay: 'none',\n\t\t},\n\t\t'& .PhoneInputCountry': {\n\t\t\tpointerEvents: 'none',\n\t\t},\n\t\t'& .PhoneInputInput': {\n\t\t\toutline: 'none',\n\t\t\tborder: 0,\n\t\t\tbackground: 'transparent',\n\t\t\tfontSize: '0.875rem',\n\t\t\tcolor: theme.palette.grey['900'],\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: theme.typography.fontFamily,\n\t\t},\n\t},\n}));\n\nexport const PhoneInput = forwardRef((props: any, ref) => {\n\tconst classes = useStyle();\n\n\tconst {\n\t\tname = '',\n\t\tvalue,\n\t\tonChange = () => '',\n\t\tonBlur = () => '',\n\t\tclassName = '',\n\t\t...other\n\t} = props;\n\n\treturn (\n\t\t<PhoneNumberInput\n\t\t\t{...other}\n\t\t\tref={ref}\n\t\t\tcountry={config.locate.countryCode}\n\t\t\tdefaultCountry={config.locate.countryCode}\n\t\t\tinternational\n\t\t\twithCountryCallingCode\n\t\t\tcountryCallingCodeEditable={false}\n\t\t\tclassName={clsx(className, classes.phoneInput)}\n\t\t\tonChange={value =>\n\t\t\t\tonChange({\n\t\t\t\t\ttarget: { name, value },\n\t\t\t\t} as any)\n\t\t\t}\n\t\t\tonBlur={onBlur}\n\t\t\tname={name}\n\t\t\tvalue={value}\n\t\t/>\n\t);\n});\n","import {\n\tButton,\n\tGrid,\n\tStack,\n\tTextField,\n\tDivider,\n\tCardContent,\n\tCardActions,\n} from '@material-ui/core';\nimport { FormikHelpers, useFormik } from 'formik';\nimport _get from 'lodash.get';\nimport { generatePath, useHistory } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\nimport { gridSpacing } from '../../../store/constant';\nimport InputLabel from '../../../ui-component/extended/Form/InputLabel';\nimport { TAddProperty } from '../../../types';\nimport { createProperty } from '../../../graphql/mutations';\nimport { validationAddNewSchema } from './Validation';\nimport { useSnackBar } from '../../../hooks';\nimport { PATHS } from '../../../routes/path';\nimport 'react-phone-number-input/style.css';\nimport { PhoneInput } from '../components/PhoneInput';\n\nconst PropertyAdd = () => {\n\tconst history = useHistory();\n\tconst [addNewProperty] = useMutation<TAddProperty>(gql(createProperty));\n\tconst showSnackBar = useSnackBar();\n\tconst onSubmitHandler = async (\n\t\tvalues: TAddProperty,\n\t\t{ setStatus, setSubmitting }: FormikHelpers<TAddProperty>\n\t) => {\n\t\ttry {\n\t\t\tconst { email, firstName, lastName, phone } = values;\n\t\t\tconst variables = {\n\t\t\t\tSellerInfo: {\n\t\t\t\t\tEmail: email,\n\t\t\t\t\tFirstName: firstName,\n\t\t\t\t\tLastName: lastName,\n\t\t\t\t\tPhone: phone || undefined,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst { data } = await addNewProperty({\n\t\t\t\tvariables,\n\t\t\t});\n\t\t\tshowSnackBar({ message: 'Account created', alertSeverity: 'success' });\n\t\t\tconst propertyId = _get(data, ['createProperty', 'PropertyId']);\n\t\t\tconst propertyLink = generatePath(PATHS.PROPERTY, {\n\t\t\t\tid: propertyId,\n\t\t\t});\n\t\t\thistory.push(propertyLink);\n\t\t} catch (e: any) {\n\t\t\tconst message = _get(e, 'message', 'Something went wrong');\n\t\t\tsetStatus({ success: false });\n\t\t\tsetSubmitting(false);\n\t\t\tshowSnackBar({ message });\n\t\t}\n\t};\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t},\n\t\tvalidationSchema: validationAddNewSchema,\n\t\tonSubmit: onSubmitHandler,\n\t});\n\n\tconst {\n\t\ttouched,\n\t\terrors,\n\t\thandleSubmit,\n\t\tvalues,\n\t\thandleChange,\n\t\thandleBlur,\n\t\tisSubmitting,\n\t} = formik;\n\n\treturn (\n\t\t<Grid container spacing={gridSpacing}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Grid container spacing={2} alignItems='start'>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>First Name</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.firstName}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='First Name'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.firstName && Boolean(errors.firstName)}\n\t\t\t\t\t\t\t\t\thelperText={touched.firstName && errors.firstName}\n\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>Last Name</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.lastName}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Last Name'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.lastName && Boolean(errors.lastName)}\n\t\t\t\t\t\t\t\t\thelperText={touched.lastName && errors.lastName}\n\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>Email</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.email}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>Phone</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\tinputComponent: PhoneInput as any,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\terror={touched.phone && Boolean(errors.phone)}\n\t\t\t\t\t\t\t\t\thelperText={touched.phone && errors.phone}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Stack direction='row' justifyContent='flex-end'>\n\t\t\t\t\t\t\t\t<AnimateButton>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</AnimateButton>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</form>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default PropertyAdd;\n","import MainCard from '../../../ui-component/cards/MainCard';\nimport PropertyAdd from '../../application/property/PropertyAdd';\n\nconst AddPage = () => (\n\t<MainCard title='Add Seller Information' content={false}>\n\t\t<PropertyAdd />\n\t</MainCard>\n);\n\nexport default AddPage;\n"],"sourceRoot":""}