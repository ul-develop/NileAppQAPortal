{"version":3,"sources":["views/application/form/helpers.ts","views/application/form/ListHeader.tsx","views/application/form/FormToolbar.tsx","views/application/form/FormList.tsx","views/pages/form/ListPage.tsx","ui-component/extended/Breadcrumbs.tsx","utils/menuItem.tsx","views/application/components/LoadMore/index.tsx"],"names":["headCells","id","numeric","label","align","disablePadding","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","isSorted","headCell","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","sortDirection","undefined","TableSortLabel","active","direction","ORDER","ASC","onClick","className","DESC","pr","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","title","flex","FormToolbar","onDelete","onCreate","Toolbar","clsx","Grid","container","justifyContent","alignItems","item","xs","sm","Typography","variant","component","Tooltip","IconButton","Fab","boxShadow","ml","width","height","paper","marginBottom","table","minWidth","FormList","useQuery","gql","graphql","listForms","variables","limit","config","pagination","fetchPolicy","notifyOnNetworkStatusChange","loading","error","data","fetchMore","listFormCategories","useMutation","deleteForm","removeForm","isDeleteLoading","isDeleteError","rows","_get","nextToken","useTheme","defaultOrder","getHeadCellById","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","clearSelected","history","useHistory","Loader","_isEmpty","Alert","severity","onDeleteHandler","a","formId","FormId","update","cache","modify","fields","forms","readField","items","filter","mappedCategoryRows","categories","reorderCategories","form","categoryId","formTypeId","CategoryName","FormTypeName","mapFormsCategory","sortedRows","stableSort","getComparator","length","formAddLink","generatePath","PATHS","FORM_ADD","push","TableContainer","Table","size","event","target","TableBody","row","index","formEditLink","FORM","isItemSelected","labelId","hover","role","tabIndex","Title","CategoryId","FormTypeId","formatDate","CreatedAt","UpdatedAt","to","fontSize","LoadMore","onLoadMore","disabled","ListPage","Breadcrumbs","navigation","getBreadcrumbsNavigation","icon","MainCard","link","display","grey","textDecoration","alignContent","activeLink","marginRight","marginTop","secondary","separator","marginLeft","content","noPadding","card","gridSpacing","border","borderColor","mode","background","default","titleTop","titleBottom","divider","icons","maxItems","rightAlign","others","useState","setMain","setItem","useEffect","type","getCollapse","children","collapse","prevMain","document","location","hash","includes","url","cardClass","itemContent","contentClass","ItemIcon","breadcrumbContent","itemTitle","mainContent","navItem","CollapseIcon","AccountTreeTwoToneIcon","Link","breadcrumbs","fontWeight","stroke","style","generatePropertyOfferMenuItem","property","offer","propertyId","propertyUrl","offerId","offerUrl","generateMenuItem","values","menuItem","LoadMoreButton","withStyles","borderRadius","Button","toolbar"],"mappings":"4aASaA,EAA+B,CAC3C,CACCC,GAAI,QACJC,SAAS,EACTC,MAAO,QACPC,MAAO,OACPC,gBAAgB,GAEjB,CACCJ,GAAI,WACJC,SAAS,EACTC,MAAO,WACPC,MAAO,OACPC,gBAAgB,GAEjB,CACCJ,GAAI,WACJC,SAAS,EACTC,MAAO,YACPC,MAAO,QAER,CACCH,GAAI,YACJC,SAAS,EACTC,MAAO,eACPC,MAAO,QAER,CACCH,GAAI,YACJC,SAAS,EACTC,MAAO,eACPC,MAAO,S,gBCzBHE,EAAYC,aAAW,iBAAO,CACnCC,SAAS,eAAMC,SA4DDC,EAzDI,SAACC,GACnB,IAAMC,EAAUN,IAEfO,EAMGF,EANHE,iBACAC,EAKGH,EALHG,MACAC,EAIGJ,EAJHI,QACAC,EAGGL,EAHHK,YACAC,EAEGN,EAFHM,SALD,EAOIN,EADHO,qBAND,MAMiB,aANjB,EASMC,EAAW,SAACC,GAAD,OAChBL,GAAWA,EAAQd,KAAOmB,EAASnB,IAEpC,OACC,cAACoB,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAWC,GAAI,CAAEC,GAAI,GAAxC,SACC,cAACC,EAAA,EAAD,CACCC,MAAM,UACNC,cAAeb,EAAc,GAAKA,EAAcC,EAChDa,QAASb,EAAW,GAAKD,IAAgBC,EACzCc,SAAUlB,EACVmB,WAAY,CACX,aAAc,2BAIhBhC,EAAUiC,KAAI,SAACb,GAAD,OACd,cAACG,EAAA,EAAD,CAECnB,MAAOgB,EAASlB,QAAU,QAAU,OACpCsB,QAASJ,EAASf,eAAiB,OAAS,SAC5C6B,cAAef,EAASC,GAAYN,OAAQqB,EAJ7C,SAMC,eAACC,EAAA,EAAD,CACCC,OAAQlB,EAASC,GACjBkB,UAAWnB,EAASC,GAAYN,EAAQyB,IAAMC,IAC9CC,QAAS,kBAAMvB,EAAcE,IAH9B,UAKEA,EAASjB,MACTgB,EAASC,GACT,sBAAMsB,UAAW9B,EAAQJ,SAAzB,SACEM,IAAUyB,IAAMI,KAAO,oBAAsB,qBAE5C,SAfAvB,EAASnB,OAmBhB,cAACsB,EAAA,EAAD,CAAWW,eAAe,EAAO9B,MAAM,SAASqB,GAAI,CAAEmB,GAAI,GAA1D,0B,wICtDEC,GAAmBtC,aAAW,SAAAuC,GAAK,MAAK,CAC7CC,KAAM,CACLC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAE7BE,UAAW,CACVC,gBAAiBC,YAChBP,EAAMQ,QAAQC,QAAQC,KACtBV,EAAMQ,QAAQG,OAAOC,mBAGvBC,MAAO,CACNC,KAAM,gBAgEOC,GA5DK,SAAClD,GACpB,IAAMC,EAAUiC,KACR7B,EAAoCL,EAApCK,YAAa8C,EAAuBnD,EAAvBmD,SAAUC,EAAapD,EAAboD,SAE/B,OACC,cAACC,EAAA,EAAD,CACCtB,UAAWuB,YAAKrD,EAAQmC,KAAT,eACbnC,EAAQuC,UAAYnC,EAAc,IAFrC,SAKC,eAACkD,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,gBACfC,WAAW,SACXpB,QAAS,EAJV,UAMC,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACExD,EAAc,GACd,eAACyD,EAAA,EAAD,CACC/B,UAAW9B,EAAQ+C,MACnB/B,MAAM,UACN8C,QAAQ,YACRC,UAAU,MAJX,UAME3D,EANF,iBAUF,cAACkD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAAWC,WAAW,SAArD,SACErD,EAAc,EACd,cAAC4D,EAAA,EAAD,CAASjB,MAAM,SAAf,SACC,cAACkB,EAAA,EAAD,CAAYpC,QAASqB,EAArB,SACC,cAAC,KAAD,QAIF,cAACc,EAAA,EAAD,CAASjB,MAAM,SAAf,SACC,cAACmB,EAAA,EAAD,CACClD,MAAM,UACN,aAAW,MACXH,GAAI,CACHsD,UAAW,OACXC,GAAI,EACJC,MAAO,OACPC,OAAQ,QAETzC,QAASsB,EATV,SAWC,cAAC,KAAD,kB,w1BCzCT,IAAMzD,GAAYC,aAAW,SAACuC,GAAD,MAAmB,CAC/CC,KAAM,CACLkC,MAAO,QAERE,MAAO,CACNF,MAAO,OACPG,aAActC,EAAMG,QAAQ,IAE7BoC,MAAO,CACNC,SAAU,KAEX9E,SAAS,eAAMC,SA+JD8E,GA5JE,WAChB,MAA4CC,YAASC,YAAIC,IAAQC,WAAY,CAC5EC,UAAW,CAAEC,MAAOC,IAAOC,WAAWF,OACtCG,YAAa,cACbC,6BAA6B,IAHtBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UAMhBC,EAAuBd,YAASC,YAAIC,IAAQY,qBAAlDF,KAER,EACCG,YAAYd,YAAIe,cAAa,IAD9B,mBAAOC,EAAP,YAA8BC,EAA9B,EAAqBR,QAAiCS,EAAtD,EAA+CR,MAGzCS,EAAgBC,IAAKT,EAAM,CAAC,YAAa,SAAU,IACnDU,EAAuCD,IAC5CT,EACA,2BACAjE,GAEKW,EAAQiE,cACRnG,EAAUN,KACV0G,EAAeC,YAAgB,YAAajH,GAClD,EAA8CkH,YAAgBF,GAAtDlG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASoG,EAAxB,EAAwBA,kBACxB,EACCC,YAAa,UADNC,GAAR,EAAQA,SAAUC,GAAlB,EAAkBA,WAAYC,GAA9B,EAA8BA,aAAcC,GAA5C,EAA4CA,gBAAiBC,GAA7D,EAA6DA,cAGvDC,GAAUC,cAEhB,IAAKzB,GAAWQ,KAAqBN,EAAM,OAAO,cAACwB,EAAA,EAAD,IAClD,GAAIzB,GAAS0B,IAASzB,IAASO,EAC9B,OACC,cAACmB,EAAA,EAAD,CAAOC,SAAS,QAAQtG,GAAI,CAAEG,MAAOkB,EAAMQ,QAAQ6C,MAAM3C,MAAzD,mCAMF,IAaMwE,GAAe,uCAAG,sCAAAC,EAAA,yDAClBZ,GADkB,wEAAAY,EAAA,kCAAAA,EAAA,6DAGNC,EAHM,iBAIhBzB,EAAW,CAChBb,UAAW,CAAEuC,OAAQD,GACrBE,OAAQ,SAAAC,GACPA,EAAMC,OAAO,CACZC,OAAQ,CACP5C,UADO,SACG6C,EADH,GAC0B,IAAdC,EAAa,EAAbA,UACZC,EAAQF,EAAME,MAAMC,QACzB,SAACrE,GAAD,OAAiB4D,IAAWO,EAAU,SAAUnE,MAEjD,OAAO,2BAAKkE,GAAZ,IAAmBE,iBAbF,+CAGIrB,IAHJ,uaAoBvBI,KApBuB,4EAAH,qDA4BfmB,GHrFyB,SAC/BJ,GAE8B,IAD9BlC,EAC6B,uDADR,GAEfuC,EAAaC,YAAkBxC,GACrC,OAAOkC,EAAMvG,KAAI,SAAC8G,GACjB,IAAMC,EAAanC,IAAKkC,EAAM,cACxBE,EAAapC,IAAKkC,EAAM,cAC9B,OAAO,2BACHA,GADJ,IAECG,aAAcrC,IAAKgC,EAAY,CAACG,EAAY,iBAC5CG,aAActC,IAAKgC,EAAY,CAACG,EAAY,YAAaC,SG0EPG,CACnDxC,EACAC,IAAKP,EAAoB,CAAC,sBAAuB,KAE5C+C,GAAaC,YAClBV,GACAW,YAAczI,EAAOC,IAGtB,OACC,qCACC,cAAC,GAAD,CACCC,YAAaqG,GAASmC,OACtB1F,SAAUkE,GACVjE,SAnBqB,WACvB,IAAM0F,EAAcC,YAAaC,KAAMC,UACvClC,GAAQmC,KAAKJ,MAmBZ,cAACK,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAOrH,UAAW9B,EAAQyE,MAAO,kBAAgB,aAAa2E,KAAK,QAAnE,UACC,cAAC,EAAD,CACChJ,YAAaqG,GAASmC,OACtB1I,MAAOA,EACPC,QAASA,EACTF,iBAtDwB,SAACoJ,GAC7BzC,GAAgByC,EAAMC,OAAOpI,QAAS8E,IAsDlC1F,cAAeiG,EACflG,SAAU2F,EAAK4C,SAEhB,cAACW,EAAA,EAAD,UACEd,GAAWpH,KAAI,SAACmI,EAAKC,GACrB,GAAmB,kBAARD,EAAkB,OAAO,KACpC,IAAME,EAAeZ,YAAaC,KAAMY,KAAM,CAC7CtK,GAAImK,EAAIjC,SAEHqC,EAAiBlD,GAAW8C,EAAIjC,QAChCsC,EAAO,kCAA8BJ,GAC3C,OACC,eAAC/I,EAAA,EAAD,CACCoJ,OAAK,EACLjI,QAAS,kBAAM8E,GAAa6C,EAAIjC,SAChCwC,KAAK,WACL,eAAcH,EACdI,UAAW,EAEXvD,SAAUmD,EAPX,UASC,cAACjJ,EAAA,EAAD,CAAWE,GAAI,CAAEC,GAAI,GAAKF,QAAQ,WAAlC,SACC,cAACG,EAAA,EAAD,CACCC,MAAM,UACNE,QAAS0I,EACTxI,WAAY,CACX,kBAAmByI,OAItB,cAAClJ,EAAA,EAAD,CAAWnB,MAAM,OAAjB,SAAyBgK,EAAIS,QAC7B,eAACtJ,EAAA,EAAD,CAAWnB,MAAM,OAAjB,UACEgK,EAAIlB,cAAgBkB,EAAIU,WAAY,OAEtC,cAACvJ,EAAA,EAAD,CAAWnB,MAAM,OAAjB,SACEgK,EAAIjB,cAAgBiB,EAAIW,aAE1B,cAACxJ,EAAA,EAAD,CAAWnB,MAAM,OAAjB,SAAyB4K,YAAWZ,EAAIa,aACxC,cAAC1J,EAAA,EAAD,CAAWnB,MAAM,OAAjB,SAAyB4K,YAAWZ,EAAIc,aACxC,cAAC3J,EAAA,EAAD,CAAWnB,MAAM,OAAOqB,GAAI,CAAEmB,GAAI,GAAlC,SACC,cAAC,IAAD,CAAMuI,GAAIb,EAAV,SACC,cAACzF,EAAA,EAAD,CAAYjD,MAAM,UAAlB,SACC,cAAC,IAAD,CAAiBH,GAAI,CAAE2J,SAAU,oBAxB/BhB,EAAIjC,kBAkCf,cAACkD,EAAA,EAAD,CAAUC,WApHK,WAChBjF,EAAU,CACTT,UAAW,CACVC,MAAOC,IAAOC,WAAWF,MACzBiB,gBAgH+ByE,UAAWzE,EAAWZ,QAASA,Q,8BC1LnDsF,UATE,kBAChB,qCACC,cAACC,GAAA,EAAD,CAAaC,WAAYC,aAAyBnD,MAAQoD,MAAI,IAC9D,cAACC,EAAA,EAAD,CAAUlI,MAAM,aAAhB,SACC,cAAC,GAAD,W,gUCYGrD,EAAYC,aAAW,SAAAuC,GAAK,MAAK,CACtCgJ,KAAM,CACLC,QAAS,OACTnK,MAAOkB,EAAMQ,QAAQ0I,KAAK,KAC1BC,eAAgB,OAChBC,aAAc,SACd7H,WAAY,UAEb8H,WAAY,CACXJ,QAAS,OACTE,eAAgB,OAChBC,aAAc,SACd7H,WAAY,SACZzC,MAAOkB,EAAMQ,QAAQ0I,KAAK,MAE3BJ,KAAM,CACLQ,YAAatJ,EAAMG,QAAQ,KAC3BoJ,UAAU,IAAD,OAAMvJ,EAAMG,QAAQ,MAC7BgC,MAAO,OACPC,OAAQ,OACRtD,MAAOkB,EAAMQ,QAAQgJ,UAAU9I,MAEhC+I,UAAW,CACVtH,MAAO,GACPuH,WAAY,EACZJ,YAAa,GAEdK,QAAS,CACRjL,QAAS,mBAEVkL,UAAW,CACVlL,QAAS,kBACTwB,YAAa,gBAEd2J,KAAM,CACLvH,aAActC,EAAMG,QAAQ2J,KAC5BC,OAAQ,YACRC,YACwB,SAAvBhK,EAAMQ,QAAQyJ,KACXjK,EAAMQ,QAAQ0J,WAAWC,QACzBnK,EAAMQ,QAAQC,QAAQ,KAAO,IAElCR,KAAM,CACLiK,WAAY,cACZjI,UAAW,OACX8H,OAAQ,QAETK,SAAU,CACT9H,aAActC,EAAMG,QAAQ,IAE7BkK,YAAa,CACZd,UAAWvJ,EAAMG,QAAQ,IAE1BmK,QAAS,CACRN,YAAahK,EAAMQ,QAAQC,QAAQC,KACnC4B,aAActC,EAAMG,QAAQ2J,UAyLfnB,IAhKK,SAAC,GAWI,IAVxBkB,EAUuB,EAVvBA,KACAS,EASuB,EATvBA,QACAxB,EAQuB,EARvBA,KACAyB,EAOuB,EAPvBA,MACAC,EAMuB,EANvBA,SACA5B,EAKuB,EALvBA,WACA6B,EAIuB,EAJvBA,WACA5J,EAGuB,EAHvBA,MACAwJ,EAEuB,EAFvBA,YACGK,EACoB,iBACjB5M,EAAUN,IAChB,EAAwBmN,mBAAwB,IAAhD,mBAAOjK,EAAP,KAAakK,EAAb,KACA,EAAwBD,qBAAxB,mBAAOnJ,EAAP,KAAaqJ,EAAb,KAEAC,qBAAU,WAAO,IAAD,EACZpK,EAAKgG,QACE,OAAVkC,QAAU,IAAVA,GAAA,UAAAA,EAAYhD,aAAZ,SAAmBzG,KAElB,SAACqC,EAAuC+F,GAIvC,OAHI/F,EAAKuJ,MAAsB,UAAdvJ,EAAKuJ,MACrBC,EAAYxJ,EAAoD+F,IAE1D,OAGP,IAKH,IAAMyD,EAAc,SAAdA,EAAexJ,EAAyB+F,GACzC/F,EAAKyJ,UACRzJ,EAAKyJ,SAASpF,QAAO,SAACqF,GASrB,OARIA,EAASH,MAA0B,aAAlBG,EAASH,MAC7BH,GAAQ,SAAAO,GAAQ,4BAAQA,GAAR,CAAkBD,OAClCF,EAAYE,IACFA,EAASH,MAA0B,SAAlBG,EAASH,MAChCK,SAASC,SAASC,KAAKC,SAAvB,WAAoCL,EAASM,OAChDX,EAAQK,IAGH,MAMNO,EAAY3N,EAAQ+L,MACX,IAATA,IACH4B,EAAY3N,EAAQmC,MAIrB,IAKIyL,EALAC,EAAe7N,EAAQ6L,SACd,IAATE,IACH8B,EAAe7N,EAAQ8L,WAIxB,IAEIgC,EAFAC,EAAwC,cAAC,IAAD,IACxCC,EAAkC,GAIhCC,EAAcrL,EAAKvB,KAAI,SAAA6M,GAC5B,GAAqB,aAAjBA,EAAQjB,KAAqB,OAAO,6BACxC,IAAMkB,EAAeD,EAAQlD,KAAOkD,EAAQlD,KAAOoD,IACnD,OACC,eAAC,IAAD,CAECrK,UAAWsK,IACX9D,GAAI2D,EAAQR,KAAO,IACnB5J,QAAQ,YACRhC,UAAW9B,EAAQkL,KALpB,UAOEuB,GAAS,cAAC0B,EAAD,CAAcrM,UAAW9B,EAAQgL,OAC1CkD,EAAQnL,QAPJmL,EAAQ7O,OAsFhB,OAzEIqE,GAAsB,SAAdA,EAAKuJ,OAChBe,EAAYtK,EAAKX,MAEjB+K,EAAWpK,EAAKsH,KAAOtH,EAAKsH,KAAOoD,IACnCR,EACC,eAAC,IAAD,CAAY9J,QAAQ,YAAYhC,UAAW9B,EAAQuL,WAAnD,UACEkB,GAAS,cAACqB,EAAD,CAAUhM,UAAW9B,EAAQgL,OACtCgD,MAKsB,IAArBtK,EAAK4K,cACRP,EACC,eAAC,IAAD,yBAAMjM,UAAW6L,GAAef,GAAhC,cACC,cAAC,IAAD,CAAa9K,UAAW+L,EAAxB,SACC,eAAC,IAAD,CACCtK,WAAS,EACT7B,UAAWiL,EAAa,MAAQ,SAChCnJ,eAAgBmJ,EAAa,gBAAkB,aAC/ClJ,WAAYkJ,EAAa,SAAW,aACpCtK,QAAS,EALV,UAOEU,IAAUwJ,GACV,cAAC,IAAD,CAAM7I,MAAI,EAAV,SACC,eAAC,IAAD,CAAYI,QAAQ,KAAKjD,GAAI,CAAE0N,WAAY,KAA3C,UACE,IACA7K,EAAKX,MAAO,SAIhB,cAAC,IAAD,CAAMW,MAAI,EAAV,SACC,eAAC,IAAD,CACC1D,QAAS,CAAE2L,UAAW3L,EAAQ2L,WAC9B,aAAW,aACXe,SAAUA,GAAY,EACtBf,UAAW,cAAC,IAAD,CAAkB6C,OAAQ,IAAKpF,KAAK,SAJhD,UAMC,eAAC,IAAD,CACCrF,UAAWsK,IACX9D,GAAG,IACHvJ,MAAM,UACN8C,QAAQ,YACRhC,UAAW9B,EAAQkL,KALpB,UAOEuB,GAAS,cAAC,IAAD,CAAiB3K,UAAW9B,EAAQgL,OAC7CA,GACA,cAAC,IAAD,CAAUlJ,UAAW9B,EAAQgL,KAAMyD,MAAO,CAAEjD,YAAa,MAExDR,GAAQ,eAEViD,EACAL,OAGF7K,GAASwJ,GACT,cAAC,IAAD,CAAM7I,MAAI,EAAV,SACC,eAAC,IAAD,CAAYI,QAAQ,KAAKjD,GAAI,CAAE0N,WAAY,KAA3C,UACE,IACA7K,EAAKX,MAAO,eAMR,IAATgJ,IAA8B,IAAZS,GAClB,cAAC,IAAD,CAAS1K,UAAW9B,EAAQwM,gBAO1BuB,I,kKCnQKW,EAAgC,SAC5CC,EACAC,GAEA,IAAYC,EAAiCF,EAArCtP,GAAqByP,EAAgBH,EAArBjB,IACZqB,EAA2BH,EAA/BvP,GAAkB2P,EAAaJ,EAAlBlB,IACrB,OAAO,2BACHuB,EAAiB,CAAElM,MAAO,WAAY1D,GAAIwP,EAAYnB,IAAKoB,KAD/D,IAEC7B,KAAM,WACNE,SAAU,CAAC8B,EAAiB,CAAElM,MAAO,QAAS1D,GAAI0P,EAASrB,IAAKsB,QAIrDC,EAAmB,SAACvL,GAChC,IAAQgK,EAAmBhK,EAAnBgK,IAAKrO,EAAcqE,EAAdrE,GAAI0D,EAAUW,EAAVX,MACjB,MAAO,CACN1D,KACA0D,MAAO,cAAC,IAAD,CAAkB1D,GAAI0D,EAAOmM,OAAQ,CAAE7P,QAC9CqO,MACAT,KAAM,SAIKlC,EAA2B,SACvCoE,EACAzL,GAOA,MAAO,CACNoE,MAAO,CACN,CACCmF,KAAM,QACNE,SAAU,CATG,2BACZgC,GADY,IAEfhC,SAAUzJ,EAAO,CAACA,GAAQyL,EAAShC,iB,iCChCrC,gEAIMiC,EAAiBC,YAAW,CACjClN,KAAM,CACLmN,aAAc,MACd5K,SAAU,IACV9D,QAAS,SAJYyO,CAMpBE,KAQG7P,EAAYC,aAAW,iBAAO,CACnC6P,QAAS,CACR5O,QAAS,qBAoBI6J,IAhBE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,SAAUrF,EAAqB,EAArBA,QACnCtF,EAAUN,IAEhB,OACC,cAAC,IAAD,CAAM6D,WAAS,EAACzB,UAAW9B,EAAQwP,QAAShM,eAAe,SAA3D,SACC,cAAC4L,EAAD,CACCnC,KAAK,SACLpL,QAAS,kBAAM6I,KACfC,SAAUA,GAAYrF,EAHvB,SAKEA,EAAU,cAAC,IAAD,CAAkB8D,KAAM,KAAS,cAAC,IAAD","file":"static/js/32.ae7fea97.chunk.js","sourcesContent":["import _get from 'lodash.get';\nimport { TForm, HeadCell } from '../../../types';\nimport { reorderCategories } from '../../../helpers';\n\nexport type NewTForm = TForm & {\n\tCategoryName?: string;\n\tFormTypeName?: string;\n};\n\nexport const headCells: HeadCell<TForm>[] = [\n\t{\n\t\tid: 'Title',\n\t\tnumeric: false,\n\t\tlabel: 'Title',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'Category',\n\t\tnumeric: false,\n\t\tlabel: 'Category',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'FormType',\n\t\tnumeric: false,\n\t\tlabel: 'Form Type',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'CreatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Created Date',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'UpdatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Updated Date',\n\t\talign: 'left',\n\t},\n];\n\nexport const mapFormsCategory = (\n\tforms: Array<TForm>,\n\tlistFormCategories = []\n): Array<NewTForm | TForm> => {\n\tconst categories = reorderCategories(listFormCategories);\n\treturn forms.map((form: TForm) => {\n\t\tconst categoryId = _get(form, 'CategoryId');\n\t\tconst formTypeId = _get(form, 'FormTypeId');\n\t\treturn {\n\t\t\t...form,\n\t\t\tCategoryName: _get(categories, [categoryId, 'categoryName']),\n\t\t\tFormTypeName: _get(categories, [categoryId, 'formTypes', formTypeId]),\n\t\t};\n\t});\n};\n","import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\n\nimport { EnhancedTableHeadProps, HeadCell, TForm } from '../../../types';\nimport { headCells } from './helpers';\nimport { ORDER } from '../../../utils/table';\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps<TForm>) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort = () => {},\n\t} = props;\n\n\tconst isSorted = (headCell: HeadCell<TForm>): undefined | boolean =>\n\t\torderBy && orderBy.id === headCell.id;\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map((headCell: HeadCell<TForm>) => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={isSorted(headCell) ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={isSorted(headCell)}\n\t\t\t\t\t\t\tdirection={isSorted(headCell) ? order : ORDER.ASC}\n\t\t\t\t\t\t\tonClick={() => onRequestSort(headCell)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{isSorted(headCell) ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === ORDER.DESC ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {\n\tToolbar,\n\tTypography,\n\tTooltip,\n\tIconButton,\n\tGrid,\n\tFab,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { EnhancedTableToolbarWithMassActionProps } from '../../../types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t},\n\thighlight: {\n\t\tbackgroundColor: alpha(\n\t\t\ttheme.palette.primary.main,\n\t\t\ttheme.palette.action.activatedOpacity\n\t\t),\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst FormToolbar = (props: EnhancedTableToolbarWithMassActionProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected, onDelete, onCreate } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t{numSelected > 0 && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{numSelected} selected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<Grid container justifyContent='flex-end' alignItems='center'>\n\t\t\t\t\t\t{numSelected > 0 ? (\n\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t<IconButton onClick={onDelete}>\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Tooltip title='Create'>\n\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\taria-label='add'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t\t\t\t\t\tml: 1,\n\t\t\t\t\t\t\t\t\t\twidth: '48px',\n\t\t\t\t\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={onCreate}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Toolbar>\n\t);\n};\n\nexport default FormToolbar;\n","import { useQuery, gql, useMutation } from '@apollo/client';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n\tIconButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tuseTheme,\n\tAlert,\n\tCheckbox,\n} from '@material-ui/core';\nimport { visuallyHidden } from '@material-ui/utils';\nimport _isEmpty from 'lodash.isempty';\nimport _get from 'lodash.get';\nimport { Link, generatePath, useHistory } from 'react-router-dom';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport React from 'react';\nimport { TForm } from '../../../types';\nimport config from '../../../config';\nimport Loader from '../../../ui-component/Loader';\nimport graphql from '../../../graphql';\nimport Header from './ListHeader';\nimport {\n\tgetComparator,\n\tstableSort,\n\tgetHeadCellById,\n} from '../../../utils/table';\nimport LoadMore from '../components/LoadMore';\nimport { deleteForm } from '../../../graphql/mutations';\nimport { formatDate } from '../../../helpers';\nimport { useOrder, useSelectRow } from '../../../hooks';\nimport FormToolbar from './FormToolbar';\nimport { mapFormsCategory, NewTForm, headCells } from './helpers';\nimport { PATHS } from '../../../routes/path';\n\n// style constant\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst FormList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(graphql.listForms), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\n\tconst { data: listFormCategories } = useQuery(gql(graphql.listFormCategories));\n\n\tconst [removeForm, { loading: isDeleteLoading, error: isDeleteError }] =\n\t\tuseMutation(gql(deleteForm), {});\n\n\tconst rows: TForm[] = _get(data, ['listForms', 'items'], []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listForms.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst defaultOrder = getHeadCellById('CreatedAt', headCells);\n\tconst { order, orderBy, handleRequestSort } = useOrder<TForm>(defaultOrder);\n\tconst { selected, isSelected, handleSelect, handleSelectAll, clearSelected } =\n\t\tuseSelectRow('FormId');\n\n\tconst history = useHistory();\n\n\tif ((loading || isDeleteLoading) && !data) return <Loader />;\n\tif (error || _isEmpty(data) || isDeleteError) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: {\n\t\t\t\tlimit: config.pagination.limit,\n\t\t\t\tnextToken,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\tconst onDeleteHandler = async () => {\n\t\tif (!selected) return;\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor await (const formId of selected) {\n\t\t\tawait removeForm({\n\t\t\t\tvariables: { FormId: formId },\n\t\t\t\tupdate: cache => {\n\t\t\t\t\tcache.modify({\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tlistForms(forms, { readField }) {\n\t\t\t\t\t\t\t\tconst items = forms.items.filter(\n\t\t\t\t\t\t\t\t\t(item: TForm) => formId !== readField('FormId', item)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn { ...forms, items };\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tclearSelected();\n\t};\n\n\tconst onCreateHandler = () => {\n\t\tconst formAddLink = generatePath(PATHS.FORM_ADD);\n\t\thistory.push(formAddLink);\n\t};\n\n\tconst mappedCategoryRows: Array<NewTForm | TForm> = mapFormsCategory(\n\t\trows,\n\t\t_get(listFormCategories, ['listFormCategories'], [])\n\t);\n\tconst sortedRows = stableSort<NewTForm>(\n\t\tmappedCategoryRows,\n\t\tgetComparator(order, orderBy)\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<FormToolbar\n\t\t\t\tnumSelected={selected.length}\n\t\t\t\tonDelete={onDeleteHandler}\n\t\t\t\tonCreate={onCreateHandler}\n\t\t\t/>\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{sortedRows.map((row, index) => {\n\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\tconst formEditLink = generatePath(PATHS.FORM, {\n\t\t\t\t\t\t\t\tid: row.FormId,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.FormId);\n\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.FormId)}\n\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\tkey={row.FormId}\n\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.Title}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align='left'>\n\t\t\t\t\t\t\t\t\t\t{row.CategoryName || row.CategoryId}{' '}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align='left'>\n\t\t\t\t\t\t\t\t\t\t{row.FormTypeName || row.FormTypeId}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.CreatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.UpdatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell align='left' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t<Link to={formEditLink}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton color='primary'>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} loading={loading} />\n\t\t</>\n\t);\n};\nexport default FormList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport FormList from '../../application/form/FormList';\nimport Breadcrumbs from '../../../ui-component/extended/Breadcrumbs';\nimport { forms } from '../../../menu-items/forms';\nimport { getBreadcrumbsNavigation } from '../../../utils/menuItem';\n\nconst ListPage = () => (\n\t<>\n\t\t<Breadcrumbs navigation={getBreadcrumbsNavigation(forms)} icon />\n\t\t<MainCard title='Forms List'>\n\t\t\t<FormList />\n\t\t</MainCard>\n\t</>\n);\n\nexport default ListPage;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport {\n\tCard,\n\tCardContent,\n\tDivider,\n\tGrid,\n\tTypography,\n\tmakeStyles,\n} from '@material-ui/core';\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\n\n// project imports\n\n// assets\nimport AccountTreeTwoToneIcon from '@material-ui/icons/AccountTreeTwoTone';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HomeTwoToneIcon from '@material-ui/icons/HomeTwoTone';\nimport { IconChevronRight } from '@tabler/icons';\nimport { gridSpacing } from '../../store/constant';\nimport { NavItemType, NavItemTypeObject, OverrideIcon } from '../../types';\n\n// style constant\nconst useStyles = makeStyles(theme => ({\n\tlink: {\n\t\tdisplay: 'flex',\n\t\tcolor: theme.palette.grey[900],\n\t\ttextDecoration: 'none',\n\t\talignContent: 'center',\n\t\talignItems: 'center',\n\t},\n\tactiveLink: {\n\t\tdisplay: 'flex',\n\t\ttextDecoration: 'none',\n\t\talignContent: 'center',\n\t\talignItems: 'center',\n\t\tcolor: theme.palette.grey[500],\n\t},\n\ticon: {\n\t\tmarginRight: theme.spacing(0.75),\n\t\tmarginTop: `-${theme.spacing(0.25)}`,\n\t\twidth: '1rem',\n\t\theight: '1rem',\n\t\tcolor: theme.palette.secondary.main,\n\t},\n\tseparator: {\n\t\twidth: 16,\n\t\tmarginLeft: 8,\n\t\tmarginRight: 8,\n\t},\n\tcontent: {\n\t\tpadding: '16px !important',\n\t},\n\tnoPadding: {\n\t\tpadding: '16px !important',\n\t\tpaddingLeft: '0 !important',\n\t},\n\tcard: {\n\t\tmarginBottom: theme.spacing(gridSpacing),\n\t\tborder: '1px solid',\n\t\tborderColor:\n\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t? theme.palette.background.default\n\t\t\t\t: theme.palette.primary[200] + 75,\n\t},\n\troot: {\n\t\tbackground: 'transparent',\n\t\tboxShadow: 'none',\n\t\tborder: 'none',\n\t},\n\ttitleTop: {\n\t\tmarginBottom: theme.spacing(1),\n\t},\n\ttitleBottom: {\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tdivider: {\n\t\tborderColor: theme.palette.primary.main,\n\t\tmarginBottom: theme.spacing(gridSpacing),\n\t},\n}));\n\n// -----------------------|| BREADCRUMBS ||-----------------------//\n\nexport interface BreadCrumbSxProps extends React.CSSProperties {\n\tmb?: string;\n\tbgcolor?: string;\n}\n\nexport interface BreadCrumbsProps {\n\tcard?: boolean;\n\tdivider?: boolean;\n\ticon?: boolean;\n\ticons?: boolean;\n\tmaxItems?: number;\n\tnavigation?: NavItemTypeObject;\n\trightAlign?: boolean;\n\tseparator?: OverrideIcon;\n\ttitle?: boolean;\n\ttitleBottom?: boolean;\n\tsx?: BreadCrumbSxProps;\n}\n\nconst Breadcrumbs = ({\n\tcard,\n\tdivider,\n\ticon,\n\ticons,\n\tmaxItems,\n\tnavigation,\n\trightAlign,\n\ttitle,\n\ttitleBottom,\n\t...others\n}: BreadCrumbsProps) => {\n\tconst classes = useStyles();\n\tconst [main, setMain] = useState<NavItemType[]>([]);\n\tconst [item, setItem] = useState<NavItemType>();\n\n\tuseEffect(() => {\n\t\tif(main.length) return;\n\t\tnavigation?.items?.map(\n\t\t\t// eslint-disable-next-line no-shadow\n\t\t\t(item: NavItemType | NavItemTypeObject, index: number) => {\n\t\t\t\tif (item.type && item.type === 'group') {\n\t\t\t\t\tgetCollapse(item as { children: NavItemType[]; type?: string }, index);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t);\n\t}, []);\n\n\t// set active item state\n\n\t// eslint-disable-next-line no-shadow,@typescript-eslint/no-unused-vars\n\tconst getCollapse = (item: NavItemTypeObject, index?: number) => {\n\t\tif (item.children) {\n\t\t\titem.children.filter((collapse: NavItemType) => {\n\t\t\t\tif (collapse.type && collapse.type === 'collapse') {\n\t\t\t\t\tsetMain(prevMain => [...prevMain, collapse]);\n\t\t\t\t\tgetCollapse(collapse as { children: NavItemType[]; type?: string });\n\t\t\t\t} else if (collapse.type && collapse.type === 'item') {\n\t\t\t\t\tif (document.location.hash.includes(`#${collapse.url}`)) {\n\t\t\t\t\t\tsetItem(collapse);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t};\n\n\t// card class\n\tlet cardClass = classes.card;\n\tif (card === false) {\n\t\tcardClass = classes.root;\n\t}\n\n\t// card content class\n\tlet contentClass = classes.content;\n\tif (card === false) {\n\t\tcontentClass = classes.noPadding;\n\t}\n\n\tlet itemContent;\n\tlet breadcrumbContent: React.ReactElement = <Typography />;\n\tlet itemTitle: NavItemType['title'] = '';\n\tlet ItemIcon;\n\n\t// collapse item\n\tconst mainContent = main.map(navItem => {\n\t\tif (navItem.type !== 'collapse') return <></>;\n\t\tconst CollapseIcon = navItem.icon ? navItem.icon : AccountTreeTwoToneIcon;\n\t\treturn (\n\t\t\t<Typography\n\t\t\t\tkey={navItem.id}\n\t\t\t\tcomponent={Link}\n\t\t\t\tto={navItem.url || '#'}\n\t\t\t\tvariant='subtitle1'\n\t\t\t\tclassName={classes.link}\n\t\t\t>\n\t\t\t\t{icons && <CollapseIcon className={classes.icon} />}\n\t\t\t\t{navItem.title}\n\t\t\t</Typography>\n\t\t);\n\t});\n\n\t// items\n\tif (item && item.type === 'item') {\n\t\titemTitle = item.title;\n\n\t\tItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon;\n\t\titemContent = (\n\t\t\t<Typography variant='subtitle1' className={classes.activeLink}>\n\t\t\t\t{icons && <ItemIcon className={classes.icon} />}\n\t\t\t\t{itemTitle}\n\t\t\t</Typography>\n\t\t);\n\n\t\t// main\n\t\tif (item.breadcrumbs !== false) {\n\t\t\tbreadcrumbContent = (\n\t\t\t\t<Card className={cardClass} {...others}>\n\t\t\t\t\t<CardContent className={contentClass}>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tdirection={rightAlign ? 'row' : 'column'}\n\t\t\t\t\t\t\tjustifyContent={rightAlign ? 'space-between' : 'flex-start'}\n\t\t\t\t\t\t\talignItems={rightAlign ? 'center' : 'flex-start'}\n\t\t\t\t\t\t\tspacing={1}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{title && !titleBottom && (\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant='h3' sx={{ fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t{item.title}{' '}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<MuiBreadcrumbs\n\t\t\t\t\t\t\t\t\tclasses={{ separator: classes.separator }}\n\t\t\t\t\t\t\t\t\taria-label='breadcrumb'\n\t\t\t\t\t\t\t\t\tmaxItems={maxItems || 8}\n\t\t\t\t\t\t\t\t\tseparator={<IconChevronRight stroke={1.5} size='1rem' />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\t\t\t\tto='/'\n\t\t\t\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\t\t\t\t\t\tclassName={classes.link}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{icons && <HomeTwoToneIcon className={classes.icon} />}\n\t\t\t\t\t\t\t\t\t\t{icon && (\n\t\t\t\t\t\t\t\t\t\t\t<HomeIcon className={classes.icon} style={{ marginRight: 0 }} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{!icon && 'Dashboard'}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t{mainContent}\n\t\t\t\t\t\t\t\t\t{itemContent}\n\t\t\t\t\t\t\t\t</MuiBreadcrumbs>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{title && titleBottom && (\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant='h3' sx={{ fontWeight: 500 }}>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t{item.title}{' '}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t{card === false && divider !== false && (\n\t\t\t\t\t\t<Divider className={classes.divider} />\n\t\t\t\t\t)}\n\t\t\t\t</Card>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn breadcrumbContent;\n};\n\nexport default Breadcrumbs;\n","import { FormattedMessage } from 'react-intl';\nimport { NavItemType, NavItemTypeObject, TMenuItemProp } from '../types';\n\nexport const generatePropertyOfferMenuItem = (\n\tproperty: TMenuItemProp,\n\toffer: TMenuItemProp\n): NavItemTypeObject => {\n\tconst { id: propertyId, url: propertyUrl } = property;\n\tconst { id: offerId, url: offerUrl } = offer;\n\treturn {\n\t\t...generateMenuItem({ title: 'property', id: propertyId, url: propertyUrl }),\n\t\ttype: 'collapse',\n\t\tchildren: [generateMenuItem({ title: 'offer', id: offerId, url: offerUrl })],\n\t};\n};\n\nexport const generateMenuItem = (item: TMenuItemProp): NavItemType => {\n\tconst { url, id, title } = item;\n\treturn {\n\t\tid,\n\t\ttitle: <FormattedMessage id={title} values={{ id }} />,\n\t\turl,\n\t\ttype: 'item',\n\t};\n};\n\nexport const getBreadcrumbsNavigation = (\n\tmenuItem: NavItemTypeObject,\n\titem?: NavItemTypeObject\n) => {\n\tconst navigation = {\n\t\t...menuItem,\n\t\tchildren: item ? [item] : menuItem.children,\n\t};\n\n\treturn {\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: 'group',\n\t\t\t\tchildren: [navigation],\n\t\t\t},\n\t\t],\n\t};\n};\n","import { Grid, Button, CircularProgress } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tloading: boolean;\n\tdisabled?: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled, loading }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled || loading}\n\t\t\t>\n\t\t\t\t{loading ? <CircularProgress size={24} /> : <IconChevronDown />}\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n"],"sourceRoot":""}