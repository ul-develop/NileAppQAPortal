{"version":3,"sources":["views/application/property/PropertyAdd.tsx","views/pages/property/AddPage.tsx","graphql/mutations.ts","ui-component/extended/AnimateButton.tsx","ui-component/extended/Form/InputLabel.tsx","views/application/property/Validation.ts"],"names":["PropertyAdd","history","useHistory","useMutation","gql","createProperty","addNewProperty","showSnackBar","useSnackBar","onSubmitHandler","values","a","setStatus","setSubmitting","email","firstName","lastName","phone","variables","SellerInfo","Email","FirstName","LastName","Phone","data","message","alertSeverity","propertyId","_get","propertyLink","generatePath","id","push","success","formik","useFormik","initialValues","validationSchema","validationAddNewSchema","onSubmit","touched","errors","handleSubmit","handleChange","handleBlur","isSubmitting","Grid","container","spacing","gridSpacing","item","xs","noValidate","CardContent","alignItems","lg","InputLabel","TextField","defaultValue","fullWidth","placeholder","onChange","onBlur","error","Boolean","helperText","name","Divider","CardActions","Stack","direction","justifyContent","AnimateButton","Button","color","variant","type","disabled","AddPage","MainCard","title","content","approveProperty","createForm","deleteForm","deleteProperty","selectDataTreeProperty","updateForm","updateOfferStep","updatePropertyData","updatePropertyReportStatus","React","forwardRef","ref","offset1","offset2","children","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","whileHover","hover","whileTap","tap","defaultProps","BInputLabel","styled","props","shouldForwardProp","prop","theme","horizontal","palette","text","primary","fontWeight","marginBottom","others","yup","shape","required","test","value","_isEmpty","isValidPhoneNumber","config","locate","countryCode","validationEditSchema","dataTreePropertyId","buyerAgentFeePct","min","max","listingAgentFeePct"],"mappings":"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","file":"static/js/20.af28a55b.chunk.js","sourcesContent":["import {\n\tButton,\n\tGrid,\n\tStack,\n\tTextField,\n\tDivider,\n\tCardContent,\n\tCardActions,\n} from '@material-ui/core';\nimport { FormikHelpers, useFormik } from 'formik';\nimport _get from 'lodash.get';\nimport { generatePath, useHistory } from 'react-router-dom';\nimport { useMutation, gql } from '@apollo/client';\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\nimport { gridSpacing } from '../../../store/constant';\nimport InputLabel from '../../../ui-component/extended/Form/InputLabel';\nimport { TAddProperty } from '../../../types';\nimport { createProperty } from '../../../graphql/mutations';\nimport { validationAddNewSchema } from './Validation';\nimport { useSnackBar } from '../../../hooks';\n\nconst PropertyAdd = () => {\n\tconst history = useHistory();\n\tconst [addNewProperty] = useMutation<TAddProperty>(gql(createProperty));\n\tconst showSnackBar = useSnackBar();\n\tconst onSubmitHandler = async (\n\t\tvalues: TAddProperty,\n\t\t{ setStatus, setSubmitting }: FormikHelpers<TAddProperty>\n\t) => {\n\t\ttry {\n\t\t\tconst { email, firstName, lastName, phone } = values;\n\t\t\tconst variables = {\n\t\t\t\tSellerInfo: {\n\t\t\t\t\tEmail: email,\n\t\t\t\t\tFirstName: firstName,\n\t\t\t\t\tLastName: lastName,\n\t\t\t\t\tPhone: phone || null,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst { data } = await addNewProperty({\n\t\t\t\tvariables,\n\t\t\t});\n\t\t\tshowSnackBar({ message: 'Account created', alertSeverity: 'success' });\n\t\t\tconst propertyId = _get(data, ['createProperty', 'PropertyId']);\n\t\t\tconst propertyLink = generatePath('/property/:id', {\n\t\t\t\tid: propertyId,\n\t\t\t});\n\t\t\thistory.push(propertyLink);\n\t\t} catch (e: any) {\n\t\t\tconst message = _get(e, 'message', 'Something went wrong');\n\t\t\tsetStatus({ success: false });\n\t\t\tsetSubmitting(false);\n\t\t\tshowSnackBar({ message });\n\t\t}\n\t};\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: '',\n\t\t\tfirstName: '',\n\t\t\tlastName: '',\n\t\t},\n\t\tvalidationSchema: validationAddNewSchema,\n\t\tonSubmit: onSubmitHandler,\n\t});\n\n\tconst {\n\t\ttouched,\n\t\terrors,\n\t\thandleSubmit,\n\t\tvalues,\n\t\thandleChange,\n\t\thandleBlur,\n\t\tisSubmitting,\n\t} = formik;\n\n\treturn (\n\t\t<Grid container spacing={gridSpacing}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Grid container spacing={2} alignItems='center'>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>First Name</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.firstName}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='First Name'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.firstName && Boolean(errors.firstName)}\n\t\t\t\t\t\t\t\t\thelperText={touched.firstName && errors.firstName}\n\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>Last Name</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.lastName}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Last Name'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.lastName && Boolean(errors.lastName)}\n\t\t\t\t\t\t\t\t\thelperText={touched.lastName && errors.lastName}\n\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>Email</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.email}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t<InputLabel>Phone</InputLabel>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tdefaultValue={values.phone}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tplaceholder='Phone'\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={touched.phone && Boolean(errors.phone)}\n\t\t\t\t\t\t\t\t\thelperText={touched.phone && errors.phone}\n\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardContent>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Stack direction='row' justifyContent='flex-end'>\n\t\t\t\t\t\t\t\t<AnimateButton>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</AnimateButton>\n\t\t\t\t\t\t\t</Stack>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</CardActions>\n\t\t\t\t</form>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default PropertyAdd;\n","import MainCard from '../../../ui-component/cards/MainCard';\nimport PropertyAdd from '../../application/property/PropertyAdd';\n\nconst AddPage = () => (\n\t<MainCard title='Add Seller Information' content={false}>\n\t\t<PropertyAdd />\n\t</MainCard>\n);\n\nexport default AddPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const approveProperty = /* GraphQL */ `\n  mutation ApproveProperty($PropertyId: ID!) {\n    approveProperty(PropertyId: $PropertyId) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createForm = /* GraphQL */ `\n  mutation CreateForm($Form: ModelFormInput!) {\n    createForm(Form: $Form) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createProperty = /* GraphQL */ `\n  mutation CreateProperty($SellerInfo: SellerInfoInput) {\n    createProperty(SellerInfo: $SellerInfo) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteForm = /* GraphQL */ `\n  mutation DeleteForm($FormId: ID!) {\n    deleteForm(FormId: $FormId) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteProperty = /* GraphQL */ `\n  mutation DeleteProperty($PropertyId: ID!) {\n    deleteProperty(PropertyId: $PropertyId) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const selectDataTreeProperty = /* GraphQL */ `\n  mutation SelectDataTreeProperty($DataTreePropertyId: Int!, $PropertyId: ID!) {\n    selectDataTreeProperty(\n      DataTreePropertyId: $DataTreePropertyId\n      PropertyId: $PropertyId\n    ) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateForm = /* GraphQL */ `\n  mutation UpdateForm($Form: ModelFormInput!, $FormId: ID!) {\n    updateForm(Form: $Form, FormId: $FormId) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateOfferStep = /* GraphQL */ `\n  mutation UpdateOfferStep($NewStepId: Int!, $OfferId: ID!) {\n    updateOfferStep(NewStepId: $NewStepId, OfferId: $OfferId) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        BuyerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n        CounterOfferId\n        Forms\n        Position\n        SellerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n      }\n      CreatedAt\n      CreatedBy\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      SCAR {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      SignedPurchaseAgreement {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      Step {\n        allowed_actions {\n          action\n          form_action\n          next_step_id\n        }\n        allowed_upload_file_types {\n          allow_files_count\n          allow_single_file_max_size_mb\n          file_type\n        }\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        messages {\n          advisor\n          buyer\n          seller\n        }\n        name\n        waiting_seller_to_act\n      }\n      StepId\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updatePropertyData = /* GraphQL */ `\n  mutation UpdatePropertyData(\n    $BuyerAgentFeePct: Float\n    $ListPriceRange: ListPriceRangeInput\n    $ListingAgentFeePct: Float\n    $PropertyId: ID!\n    $VestingType: VestingTypeInput\n    $YearBuilt: YearBuiltInput\n  ) {\n    updatePropertyData(\n      BuyerAgentFeePct: $BuyerAgentFeePct\n      ListPriceRange: $ListPriceRange\n      ListingAgentFeePct: $ListingAgentFeePct\n      PropertyId: $PropertyId\n      VestingType: $VestingType\n      YearBuilt: $YearBuilt\n    ) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updatePropertyReportStatus = /* GraphQL */ `\n  mutation UpdatePropertyReportStatus(\n    $ReportStatus: ModelPropertyReportStatusInput!\n  ) {\n    updatePropertyReportStatus(ReportStatus: $ReportStatus) {\n      DTPropertyId\n      PropertyId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\nexport type ScaleProps = {\n\thover: number | string | undefined;\n\ttap: number | string | undefined;\n};\n\nexport interface AnimateButtonProps {\n\tchildren?: React.ReactNode;\n\ttype?: 'slide' | 'scale' | 'rotate';\n\tdirection?: 'up' | 'down' | 'left' | 'right';\n\toffset?: number;\n\tscale?: ScaleProps;\n}\n\n// -----------------------|| ANIMATION BUTTON ||-----------------------//\n\nconst AnimateButton = React.forwardRef(\n\t(\n\t\t{ children, type, direction, offset, scale }: AnimateButtonProps,\n\t\tref: Ref<HTMLDivElement>\n\t) => {\n\t\tlet offset1;\n\t\tlet offset2;\n\t\tswitch (direction) {\n\t\t\tcase 'up':\n\t\t\tcase 'left':\n\t\t\t\toffset1 = offset;\n\t\t\t\toffset2 = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\tcase 'down':\n\t\t\tdefault:\n\t\t\t\toffset1 = 0;\n\t\t\t\toffset2 = offset;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst [x, cycleX] = useCycle(offset1, offset2);\n\t\tconst [y, cycleY] = useCycle(offset1, offset2);\n\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ rotate: 360 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\t\t\trepeatType: 'loop',\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\trepeatDelay: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t\tcase 'slide':\n\t\t\t\tif (direction === 'up' || direction === 'down') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tanimate={{ y: y !== undefined ? y : '' }}\n\t\t\t\t\t\t\tonHoverEnd={() => cycleY()}\n\t\t\t\t\t\t\tonHoverStart={() => cycleY()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ x: x !== undefined ? x : '' }}\n\t\t\t\t\t\tonHoverEnd={() => cycleX()}\n\t\t\t\t\t\tonHoverStart={() => cycleX()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\n\t\t\tcase 'scale':\n\t\t\tdefault:\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\twhileHover={{ scale: scale?.hover }}\n\t\t\t\t\t\twhileTap={{ scale: scale?.tap }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t}\n\t}\n);\n\nAnimateButton.defaultProps = {\n\ttype: 'scale',\n\toffset: 10,\n\tdirection: 'right',\n\tscale: {\n\t\thover: 1,\n\t\ttap: 0.9,\n\t},\n};\n\nexport default AnimateButton;\n","import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n\tInputLabel as MuiInputLabel,\n\tInputLabelProps,\n} from '@material-ui/core';\n\nconst BInputLabel = styled(\n\t(props: MUIInputLabelProps) => <MuiInputLabel {...props} />,\n\t{\n\t\tshouldForwardProp: prop => prop !== 'horizontal',\n\t}\n)(({ theme, horizontal }) => ({\n\tcolor: theme.palette.text.primary,\n\tfontWeight: 500,\n\tmarginBottom: horizontal ? 0 : 8,\n}));\n\nexport interface MUIInputLabelProps extends InputLabelProps {\n\thorizontal: boolean;\n}\n\nconst InputLabel = ({\n\tchildren,\n\thorizontal,\n\t...others\n}: MUIInputLabelProps) => (\n\t\t<BInputLabel horizontal={horizontal} {...others}>\n\t\t\t{children}\n\t\t</BInputLabel>\n\t);\n\nInputLabel.defaultProps = {\n\thorizontal: false,\n};\n\nexport default InputLabel;\n","import * as yup from 'yup';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport _isEmpty from 'lodash.isempty';\nimport config from '../../../config';\n\nexport const validationAddNewSchema = yup.object().shape({\n\temail: yup\n\t\t.string()\n\t\t.required('Email is required')\n\t\t.email('Please enter a valid email address.'),\n\tfirstName: yup.string().required('First Name is required'),\n\tlastName: yup.string().required('Last Name is required'),\n\tphone: yup\n\t\t.string()\n\t\t.test(\n\t\t\t'Phone Number Test',\n\t\t\t'Please enter a valid phone number',\n\t\t\t(value = '') => {\n\t\t\t\tif (_isEmpty(value)) return true;\n\t\t\t\treturn isValidPhoneNumber(value, config.locate.countryCode);\n\t\t\t}\n\t\t),\n});\n\nexport const validationEditSchema = yup.object().shape({\n\tdataTreePropertyId: yup\n\t\t.string()\n\t\t.required('Please search and select a property'),\n\tbuyerAgentFeePct: yup\n\t\t.number()\n\t\t.min(0.1, 'Buyer Agent Fee must be greater than or equal to 0.1')\n\t\t.max(10, 'Buyer Agent Fee must be less than or equal to 10')\n\t\t.required('Buyer Agent Fee is required'),\n\tlistingAgentFeePct: yup\n\t\t.number()\n\t\t.min(0.1, 'Listing Agent Fee must be greater than or equal to 0.1')\n\t\t.max(10, 'Listing Agent Fee must be less than or equal to 10')\n\t\t.required('Listing Agent Fee is required'),\n});\n"],"sourceRoot":""}