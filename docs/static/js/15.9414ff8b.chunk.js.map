{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","views/application/form/ListHeader.tsx","views/application/form/FormToolbar.tsx","views/application/form/FormList.tsx","views/pages/form/ListPage.tsx","graphql/mutations.ts","graphql/subscriptions.ts","dataProvider/customGraphql/queries.ts","graphql/index.ts","utils/table.ts","views/application/components/LoadMore/index.tsx","helpers/date.ts","../../../../src/react/data/MutationData.ts","../../../../src/react/hooks/useMutation.ts","../node_modules/@material-ui/icons/Delete.js"],"names":["_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","headCells","id","numeric","label","align","disablePadding","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","sortDirection","undefined","TableSortLabel","active","direction","onClick","form","event","className","pr","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","title","flex","FormToolbar","onDelete","onCreate","Toolbar","clsx","Grid","container","justifyContent","alignItems","item","xs","sm","Typography","variant","component","Tooltip","IconButton","Fab","boxShadow","ml","width","height","paper","marginBottom","table","minWidth","FormList","useQuery","gql","graphql","listForms","variables","limit","config","pagination","fetchPolicy","notifyOnNetworkStatusChange","loading","error","data","fetchMore","useMutation","deleteForm","removeForm","isDeleteLoading","isDeleteError","rows","_get","nextToken","useTheme","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","clearSelected","history","useHistory","Loader","_isEmpty","Alert","severity","onDeleteHandler","a","formId","FormId","update","cache","modify","fields","forms","readField","items","filter","length","formAddLink","generatePath","push","TableContainer","Table","size","target","TableBody","stableSort","getComparator","row","index","formEditLink","isItemSelected","labelId","hover","role","tabIndex","Title","CategoryId","FormTypeId","formatDate","CreatedAt","UpdatedAt","to","fontSize","LoadMore","onLoadMore","disabled","ListPage","MainCard","approveProperty","createForm","createProperty","deleteProperty","selectDataTreeProperty","updateForm","updateOfferStep","updatePropertyData","updatePropertyReportStatus","onUpdatePropertyReportStatus","listOffers","listProperties","GraphQl","queries","mutations","subscriptions","customs","descendingComparator","b","array","comparator","stabilizedThis","el","sort","LoadMoreButton","withStyles","borderRadius","Button","toolbar","type","date","Intl","DateTimeFormat","locate","country","timeZone","timezone","format","Date","options","context","result","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","catch","onError","getOptions","onMutationError","errors","verifyDocumentType","mutation","Mutation","mostRecentMutationId","execute","this","isMounted","client","refreshClient","afterExecute","unmount","bind","cleanup","ignoreResults","updateResult","called","onCompleted","graphQLErrors","isMostRecentMutation","previousResult","OperationData","updatedOptions","mutationDataRef","mutationData","current","setOptions","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/15.9414ff8b.chunk.js","sourcesContent":["export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\n\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'Title',\n\t\tnumeric: false,\n\t\tlabel: 'Title',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'Category',\n\t\tnumeric: false,\n\t\tlabel: 'Category',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'FormType',\n\t\tnumeric: false,\n\t\tlabel: 'Form Type',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'CreatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Created Date',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'UpdatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Updated Date',\n\t\talign: 'left',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler = (form: string) => (event: React.SyntheticEvent) => {\n\t\tonRequestSort(event, form);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {\n\tToolbar,\n\tTypography,\n\tTooltip,\n\tIconButton,\n\tGrid,\n\tFab,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { EnhancedTableToolbarWithMassActionProps } from '../../../types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t},\n\thighlight: {\n\t\tbackgroundColor: alpha(\n\t\t\ttheme.palette.primary.main,\n\t\t\ttheme.palette.action.activatedOpacity\n\t\t),\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst FormToolbar = (props: EnhancedTableToolbarWithMassActionProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected, onDelete, onCreate } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t{numSelected > 0 && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{numSelected} selected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<Grid container justifyContent='flex-end' alignItems='center'>\n\t\t\t\t\t\t{numSelected > 0 ? (\n\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t<IconButton onClick={onDelete}>\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Tooltip title='Create'>\n\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\taria-label='add'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t\t\t\t\t\tml: 1,\n\t\t\t\t\t\t\t\t\t\twidth: '48px',\n\t\t\t\t\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={onCreate}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Toolbar>\n\t);\n};\n\nexport default FormToolbar;\n","import { useQuery, gql, useMutation } from '@apollo/client';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n\tIconButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tuseTheme,\n\tAlert,\n\tCheckbox,\n} from '@material-ui/core';\nimport { visuallyHidden } from '@material-ui/utils';\nimport _isEmpty from 'lodash.isempty';\nimport _get from 'lodash.get';\nimport { Link, generatePath, useHistory } from 'react-router-dom';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport React from 'react';\nimport { TForm } from '../../../types';\nimport config from '../../../config';\nimport Loader from '../../../ui-component/Loader';\nimport graphql from '../../../graphql';\nimport Header from './ListHeader';\nimport { getComparator, stableSort } from '../../../utils/table';\nimport LoadMore from '../components/LoadMore';\nimport { deleteForm } from '../../../graphql/mutations';\nimport { formatDate } from '../../../helpers/date';\nimport { useOrder, useSelectRow } from '../../../hooks';\nimport FormToolbar from './FormToolbar';\n\n// style constant\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst FormList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(graphql.listForms), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\n\tconst [removeForm, { loading: isDeleteLoading, error: isDeleteError }] =\n\t\tuseMutation(gql(deleteForm), {});\n\n\tconst rows: TForm[] = _get(data, ['listForms', 'items'], []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listForms.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst { order, orderBy, handleRequestSort } = useOrder('CreatedAt');\n\tconst { selected, isSelected, handleSelect, handleSelectAll, clearSelected } =\n\t\tuseSelectRow('FormId');\n\n\tconst history = useHistory();\n\n\tif ((loading || isDeleteLoading) && !data) return <Loader />;\n\tif (error || _isEmpty(data) || isDeleteError) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: {\n\t\t\t\tlimit: config.pagination.limit,\n\t\t\t\tnextToken,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\tconst onDeleteHandler = async () => {\n\t\tif (!selected) return;\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor await (const formId of selected) {\n\t\t\tawait removeForm({\n\t\t\t\tvariables: { FormId: formId },\n\t\t\t\tupdate: cache => {\n\t\t\t\t\tcache.modify({\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tlistForms(forms, { readField }) {\n\t\t\t\t\t\t\t\tconst items = forms.items.filter(\n\t\t\t\t\t\t\t\t\t(item: TForm) => formId !== readField('FormId', item)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn { ...forms, items };\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tclearSelected();\n\t};\n\n\tconst onCreateHandler = () => {\n\t\tconst formAddLink = generatePath('/form-add');\n\t\thistory.push(formAddLink);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<FormToolbar\n\t\t\t\tnumSelected={selected.length}\n\t\t\t\tonDelete={onDeleteHandler}\n\t\t\t\tonCreate={onCreateHandler}\n\t\t\t/>\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TForm>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst formEditLink = generatePath('/form/:id', {\n\t\t\t\t\t\t\t\t\tid: row.FormId,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.FormId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.FormId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.FormId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.Title}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.CategoryId} </TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.FormTypeId}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.CreatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.UpdatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={formEditLink}>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton color='primary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} loading={loading} />\n\t\t</>\n\t);\n};\nexport default FormList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport FormList from '../../application/form/FormList';\n\nconst ListPage = () => (\n\t<MainCard title='Forms List'>\n\t\t<FormList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const approveProperty = /* GraphQL */ `\n  mutation ApproveProperty($PropertyId: ID!) {\n    approveProperty(PropertyId: $PropertyId) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createForm = /* GraphQL */ `\n  mutation CreateForm($Form: ModelFormInput!) {\n    createForm(Form: $Form) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createProperty = /* GraphQL */ `\n  mutation CreateProperty($SellerInfo: SellerInfoInput) {\n    createProperty(SellerInfo: $SellerInfo) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteForm = /* GraphQL */ `\n  mutation DeleteForm($FormId: ID!) {\n    deleteForm(FormId: $FormId) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteProperty = /* GraphQL */ `\n  mutation DeleteProperty($PropertyId: ID!) {\n    deleteProperty(PropertyId: $PropertyId) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const selectDataTreeProperty = /* GraphQL */ `\n  mutation SelectDataTreeProperty($DataTreePropertyId: Int!, $PropertyId: ID!) {\n    selectDataTreeProperty(\n      DataTreePropertyId: $DataTreePropertyId\n      PropertyId: $PropertyId\n    ) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateForm = /* GraphQL */ `\n  mutation UpdateForm($Form: ModelFormInput!, $FormId: ID!) {\n    updateForm(Form: $Form, FormId: $FormId) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateOfferStep = /* GraphQL */ `\n  mutation UpdateOfferStep($NewStepId: Int!, $OfferId: ID!) {\n    updateOfferStep(NewStepId: $NewStepId, OfferId: $OfferId) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        BuyerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n        CounterOfferId\n        Forms\n        Position\n        SellerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n      }\n      CreatedAt\n      CreatedBy\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      SCAR {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      SignedPurchaseAgreement {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      Step {\n        allowed_actions {\n          action\n          form_action\n          next_step_id\n        }\n        allowed_upload_file_types {\n          allow_files_count\n          allow_single_file_max_size_mb\n          file_type\n        }\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        messages {\n          advisor\n          buyer\n          seller\n        }\n        name\n        waiting_seller_to_act\n      }\n      StepId\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updatePropertyData = /* GraphQL */ `\n  mutation UpdatePropertyData(\n    $BuyerAgentFeePct: Float\n    $ListPriceRange: ListPriceRangeInput\n    $ListingAgentFeePct: Float\n    $PropertyId: ID!\n    $VestingType: VestingTypeInput\n    $YearBuilt: YearBuiltInput\n  ) {\n    updatePropertyData(\n      BuyerAgentFeePct: $BuyerAgentFeePct\n      ListPriceRange: $ListPriceRange\n      ListingAgentFeePct: $ListingAgentFeePct\n      PropertyId: $PropertyId\n      VestingType: $VestingType\n      YearBuilt: $YearBuilt\n    ) {\n      BuyerAgentFeePct\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      ListingAgentFeePct\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updatePropertyReportStatus = /* GraphQL */ `\n  mutation UpdatePropertyReportStatus(\n    $ReportStatus: ModelPropertyReportStatusInput!\n  ) {\n    updatePropertyReportStatus(ReportStatus: $ReportStatus) {\n      DTPropertyId\n      PropertyId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const onUpdatePropertyReportStatus = /* GraphQL */ `\n  subscription OnUpdatePropertyReportStatus($PropertyId: ID!) {\n    onUpdatePropertyReportStatus(PropertyId: $PropertyId) {\n      DTPropertyId\n      PropertyId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","export const listOffers =`\n  query ListOffers($limit: Int, $nextToken: String) {\n    listOffers(limit: $limit, nextToken: $nextToken) {\n      items {\n        Funding {\n          PurchaseType\n          LoanType\n          DownPayment\n        }\n        OfferNo\n        OfferId\n        PropertyData {\n          FullAddress\n          OwnerNames\n        }\n        CounterOffer {\n          SellerCounter {\n            OfferPrice\n          }\n          BuyerCounter {\n            OfferPrice\n          }\n        }\n        Step {\n          messages {\n            advisor\n            buyer\n            seller\n          },\n          id\n          name\n        }\n        CreatedAt\n        UpdatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const listProperties =`\n  query ListProperties($limit: Int, $nextToken: String) {\n    listProperties(limit: $limit, nextToken: $nextToken) {\n      items {\n        CreatedAt\n        DTPropertyId\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          Zip\n        }\n        PropertyId\n        PropertyNo\n      }\n      nextToken\n    }\n  }\n`;\nexport const listForms =`\n  query ListForms($limit: Int, $nextToken: String) {\n    listForms(limit: $limit, nextToken: $nextToken) {\n      items {\n        CategoryId\n        CreatedAt\n        FormId\n        FormStatus\n        FormTypeId\n        Template\n        Title\n        UpdatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","import * as queries from './queries';\nimport * as mutations from './mutations';\nimport * as subscriptions from './subscriptions';\nimport * as customs from '../dataProvider/customGraphql';\n\nconst GraphQl = {\n\t...queries,\n\t...mutations,\n\t...subscriptions,\n\t...customs,\n};\n\nexport default GraphQl;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button, CircularProgress } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tloading: boolean;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled, loading }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled || loading}\n\t\t\t>\n\t\t\t\t{loading ? <CircularProgress size={24}/> : <IconChevronDown />}\t\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n","import config from '../config';\n\nexport const formatDate = (date: string | null): string =>\n\t`${\n\t\tdate\n\t\t\t? new Intl.DateTimeFormat(config.locate.country, {\n\t\t\t\t\ttimeZone: config.locate.timezone,\n\t\t\t  }).format(new Date(date))\n\t\t\t: ''\n\t}`;\n","import { equal } from '@wry/equality';\n\nimport { DocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport {\n  MutationDataOptions,\n  MutationTuple,\n  MutationFunctionOptions,\n  MutationResult,\n} from '../types/types';\nimport { OperationData } from './OperationData';\nimport { OperationVariables, MutationOptions, mergeOptions } from '../../core';\nimport { FetchResult } from '../../link/core';\n\ntype MutationResultWithoutClient<TData = any> = Omit<MutationResult<TData>, 'client'>;\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables\n> extends OperationData<MutationDataOptions<TData, TVariables>> {\n  private mostRecentMutationId: number;\n  private result: MutationResultWithoutClient<TData>;\n  private previousResult?: MutationResultWithoutClient<TData>;\n  private setResult: (result: MutationResultWithoutClient<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationDataOptions<TData, TVariables>;\n    context: any;\n    result: MutationResultWithoutClient<TData>;\n    setResult: (result: MutationResultWithoutClient<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResultWithoutClient<TData>): MutationTuple<TData, TVariables> {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    return [\n      this.runMutation,\n      { ...result, client: this.refreshClient().client }\n    ] as MutationTuple<TData, TVariables>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables\n    > = {} as MutationFunctionOptions<TData, TVariables>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: FetchResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        const { onError } = this.getOptions();\n        this.onMutationError(error, mutationId);\n        if (onError) {\n          onError(error);\n          return {\n            data: undefined,\n            errors: error,\n          };\n        } else {\n          throw error;\n        }\n      });\n  };\n\n  private mutate(\n    options: MutationFunctionOptions<TData, TVariables>\n  ) {\n    return this.refreshClient().client.mutate(\n      mergeOptions(\n        this.getOptions(),\n        options as MutationOptions<TData, TVariables>,\n      ),\n    );\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: FetchResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResultWithoutClient<TData>): MutationResultWithoutClient<TData> | undefined {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !equal(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n      return result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { MutationHookOptions, MutationTuple } from '../types/types';\nimport { MutationData } from '../data';\nimport { OperationVariables } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useMutation<TData = any, TVariables = OperationVariables>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables>\n): MutationTuple<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;"],"sourceRoot":""}