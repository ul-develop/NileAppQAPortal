{"version":3,"sources":["utils/table.ts","views/application/components/LoadMore/index.tsx","helpers/date.ts","views/application/form/ListHeader.tsx","views/application/form/FormToolbar.tsx","views/application/form/helpers.ts","views/application/form/FormList.tsx","views/pages/form/ListPage.tsx"],"names":["descendingComparator","a","b","orderBy","_get","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","LoadMoreButton","withStyles","root","borderRadius","minWidth","padding","Button","useStyles","makeStyles","toolbar","LoadMore","onLoadMore","disabled","loading","classes","container","className","justifyContent","type","onClick","size","formatDate","date","Intl","DateTimeFormat","config","locate","country","timeZone","timezone","format","Date","headCells","id","numeric","label","align","disablePadding","sortSpan","visuallyHidden","ListHeader","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","headCell","sortDirection","undefined","TableSortLabel","active","direction","form","event","pr","useToolbarStyles","theme","paddingLeft","spacing","paddingRight","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","title","flex","FormToolbar","onDelete","onCreate","Toolbar","clsx","Grid","alignItems","item","xs","sm","Typography","variant","component","Tooltip","IconButton","Fab","boxShadow","ml","width","height","reorderFormTypes","formTypes","reduce","lastType","formType","formTypeId","formTypeName","reorderCategories","listFormCategories","lastCategories","category","categoryId","categoryName","paper","marginBottom","table","FormList","useQuery","gql","graphql","listForms","variables","limit","pagination","fetchPolicy","notifyOnNetworkStatusChange","error","data","fetchMore","useMutation","deleteForm","removeForm","isDeleteLoading","isDeleteError","rows","nextToken","useTheme","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","clearSelected","history","useHistory","Loader","_isEmpty","Alert","severity","onDeleteHandler","formId","FormId","update","cache","modify","fields","forms","readField","items","filter","mappedCategoryRows","categories","CategoryName","FormTypeName","mapFormsCategory","sortedRows","length","formAddLink","generatePath","push","TableContainer","Table","target","TableBody","row","formEditLink","isItemSelected","labelId","hover","role","tabIndex","Title","CategoryId","FormTypeId","CreatedAt","UpdatedAt","to","fontSize","ListPage","MainCard"],"mappings":"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","file":"static/js/21.1fe1825d.chunk.js","sourcesContent":["import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button, CircularProgress } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tloading: boolean;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled, loading }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled || loading}\n\t\t\t>\n\t\t\t\t{loading ? <CircularProgress size={24}/> : <IconChevronDown />}\t\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n","import config from '../config';\n\nexport const formatDate = (date: string | null): string =>\n\t`${\n\t\tdate\n\t\t\t? new Intl.DateTimeFormat(config.locate.country, {\n\t\t\t\t\ttimeZone: config.locate.timezone,\n\t\t\t  }).format(new Date(date))\n\t\t\t: ''\n\t}`;\n","import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\n\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'Title',\n\t\tnumeric: false,\n\t\tlabel: 'Title',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'Category',\n\t\tnumeric: false,\n\t\tlabel: 'Category',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'FormType',\n\t\tnumeric: false,\n\t\tlabel: 'Form Type',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'CreatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Created Date',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'UpdatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Updated Date',\n\t\talign: 'left',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler = (form: string) => (event: React.SyntheticEvent) => {\n\t\tonRequestSort(event, form);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport {\n\tToolbar,\n\tTypography,\n\tTooltip,\n\tIconButton,\n\tGrid,\n\tFab,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { EnhancedTableToolbarWithMassActionProps } from '../../../types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t},\n\thighlight: {\n\t\tbackgroundColor: alpha(\n\t\t\ttheme.palette.primary.main,\n\t\t\ttheme.palette.action.activatedOpacity\n\t\t),\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst FormToolbar = (props: EnhancedTableToolbarWithMassActionProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected, onDelete, onCreate } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t{numSelected > 0 && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{numSelected} selected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<Grid container justifyContent='flex-end' alignItems='center'>\n\t\t\t\t\t\t{numSelected > 0 ? (\n\t\t\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t\t\t<IconButton onClick={onDelete}>\n\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Tooltip title='Create'>\n\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\taria-label='add'\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t\t\t\t\t\tml: 1,\n\t\t\t\t\t\t\t\t\t\twidth: '48px',\n\t\t\t\t\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={onCreate}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Toolbar>\n\t);\n};\n\nexport default FormToolbar;\n","import _get from 'lodash.get';\nimport { TForm } from '../../../types';\n\nexport type NewTForm = TForm & {\n\tCategoryName?: string;\n\tFormTypeName?: string;\n};\n\nconst reorderFormTypes = (formTypes = []) =>\n\tformTypes.reduce((lastType, formType) => {\n\t\tconst formTypeId = _get(formType, 'id');\n\t\tconst formTypeName = _get(formType, 'Name', formTypeId);\n\t\treturn { ...lastType, [formTypeId]: formTypeName };\n\t}, {});\n\nconst reorderCategories = (listFormCategories = []) =>\n\tlistFormCategories.reduce((lastCategories, category) => {\n\t\tconst categoryId = _get(category, 'id');\n\t\tconst categoryName = _get(category, 'Title', categoryId);\n\t\treturn {\n\t\t\t...lastCategories,\n\t\t\t[categoryId]: {\n\t\t\t\tcategoryName,\n\t\t\t\tformTypes: reorderFormTypes(_get(category, 'FormTypes', [])),\n\t\t\t},\n\t\t};\n\t}, {});\n\nexport const mapFormsCategory = (\n\tforms: Array<TForm>,\n\tlistFormCategories = []\n): Array<NewTForm | TForm> => {\n\tconst categories = reorderCategories(listFormCategories);\n\treturn forms.map((form: TForm) => {\n\t\tconst categoryId = _get(form, 'CategoryId');\n\t\tconst formTypeId = _get(form, 'FormTypeId');\n\t\treturn {\n\t\t\t...form,\n\t\t\tCategoryName: _get(categories, [categoryId, 'categoryName']),\n\t\t\tFormTypeName: _get(categories, [categoryId, 'formTypes', formTypeId]),\n\t\t};\n\t});\n};\n","import { useQuery, gql, useMutation } from '@apollo/client';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n\tIconButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tuseTheme,\n\tAlert,\n\tCheckbox,\n} from '@material-ui/core';\nimport { visuallyHidden } from '@material-ui/utils';\nimport _isEmpty from 'lodash.isempty';\nimport _get from 'lodash.get';\nimport { Link, generatePath, useHistory } from 'react-router-dom';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport React from 'react';\nimport { TForm } from '../../../types';\nimport config from '../../../config';\nimport Loader from '../../../ui-component/Loader';\nimport graphql from '../../../graphql';\nimport Header from './ListHeader';\nimport { getComparator, stableSort } from '../../../utils/table';\nimport LoadMore from '../components/LoadMore';\nimport { deleteForm } from '../../../graphql/mutations';\nimport { formatDate } from '../../../helpers/date';\nimport { useOrder, useSelectRow } from '../../../hooks';\nimport FormToolbar from './FormToolbar';\nimport { mapFormsCategory, NewTForm } from './helpers'\n\n// style constant\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst FormList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(graphql.listForms), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\t\n\tconst { data: listFormCategories } = useQuery(gql(graphql.listFormCategories));\n\n\tconst [removeForm, { loading: isDeleteLoading, error: isDeleteError }] =\n\t\tuseMutation(gql(deleteForm), {});\n\n\tconst rows: TForm[] = _get(data, ['listForms', 'items'], []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listForms.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst { order, orderBy, handleRequestSort } = useOrder('CreatedAt');\n\tconst { selected, isSelected, handleSelect, handleSelectAll, clearSelected } =\n\t\tuseSelectRow('FormId');\n\n\tconst history = useHistory();\n\n\tif ((loading || isDeleteLoading) && !data) return <Loader />;\n\tif (error || _isEmpty(data) || isDeleteError) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: {\n\t\t\t\tlimit: config.pagination.limit,\n\t\t\t\tnextToken,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\tconst onDeleteHandler = async () => {\n\t\tif (!selected) return;\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor await (const formId of selected) {\n\t\t\tawait removeForm({\n\t\t\t\tvariables: { FormId: formId },\n\t\t\t\tupdate: cache => {\n\t\t\t\t\tcache.modify({\n\t\t\t\t\t\tfields: {\n\t\t\t\t\t\t\tlistForms(forms, { readField }) {\n\t\t\t\t\t\t\t\tconst items = forms.items.filter(\n\t\t\t\t\t\t\t\t\t(item: TForm) => formId !== readField('FormId', item)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn { ...forms, items };\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tclearSelected();\n\t};\n\n\tconst onCreateHandler = () => {\n\t\tconst formAddLink = generatePath('/form-add');\n\t\thistory.push(formAddLink);\n\t};\n\n\tconst mappedCategoryRows: Array<NewTForm|TForm> = mapFormsCategory(rows, _get(listFormCategories, ['listFormCategories'], []));\n\tconst sortedRows = stableSort<NewTForm>(mappedCategoryRows, getComparator(order, orderBy));\n\n\treturn (\n\t\t<>\n\t\t\t<FormToolbar\n\t\t\t\tnumSelected={selected.length}\n\t\t\t\tonDelete={onDeleteHandler}\n\t\t\t\tonCreate={onCreateHandler}\n\t\t\t/>\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{sortedRows.map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst formEditLink = generatePath('/form/:id', {\n\t\t\t\t\t\t\t\t\tid: row.FormId,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.FormId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.FormId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.FormId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.Title}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.CategoryName || row.CategoryId} </TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.FormTypeName || row.FormTypeId}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.CreatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.UpdatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={formEditLink}>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton color='primary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} loading={loading} />\n\t\t</>\n\t);\n};\nexport default FormList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport FormList from '../../application/form/FormList';\n\nconst ListPage = () => (\n\t<MainCard title='Forms List'>\n\t\t<FormList />\n\t</MainCard>\n);\n\nexport default ListPage;\n"],"sourceRoot":""}