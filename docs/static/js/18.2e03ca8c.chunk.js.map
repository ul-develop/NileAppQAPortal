{"version":3,"sources":["views/application/sell-request/SearchPropertyList.tsx","views/application/sell-request/SearchProperty.tsx","views/application/sell-request/ApproveAction.tsx","views/application/sell-request/SellRequestEdit.tsx","views/pages/sell-request/EditPage.tsx","graphql/queries.ts","graphql/mutations.ts","ui-component/extended/Form/InputLabel.tsx","ui-component/cards/SubCard.tsx"],"names":["columns","id","label","align","useStyles","makeStyles","root","width","overflow","container","maxHeight","SearchPropertyList","props","properties","loading","onSelect","classes","Loader","_isEmpty","TableContainer","className","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","sx","py","TableBody","row","address","StreetAddress","City","State","Zip","hover","role","tabIndex","Owner","Button","variant","onClick","PropertyId","SearchProperty","dispatch","useDispatch","useState","search","setSearch","debouncedSearchTerm","useDebounce","wait","useLazyQuery","gql","searchDataTree","searchProperty","error","data","useEffect","variables","RequestId","SearchText","message","_get","type","SNACKBAR_OPEN","open","alertSeverity","anchorOrigin","vertical","horizontal","handleSearch","event","a","newString","target","value","searchProperties","Grid","item","xs","lg","InputLabel","TextField","onChange","ApproveAction","useMutation","approveSellRequest","approveAction","approveHandler","color","Row","sellerInformation","source","SellRequestEdit","useQuery","listSupportedVestingTypes","isLoadingVestingTypes","errorVestingTypes","vestingTypesData","getSellRequest","refetch","updateSellRequestProperty","updateSellRequestPropertyAction","updateSellRequest","updateSellRequestAction","sellRequest","propertyListPriceRange","propertyData","yearBuilt","YearBuilt","ownerNames","OwnerNames","streetAddress","state","city","zip","fullAddress","priceMax","Max","priceMin","Min","vestingType","listSupportedVestingTypesOptions","isOpen","onSubmitHandler","values","setStatus","setSubmitting","VestingType","ListPriceRange","success","onSelectPropertyHandler","property","DataTreePropertyId","spacing","gridSpacing","MainCard","title","secondary","initialValues","validationSchema","yup","shape","required","onSubmit","errors","handleChange","handleBlur","handleSubmit","touched","isSubmitting","noValidate","alignItems","SubCard","borderBottom","size","defaultValue","fullWidth","placeholder","onBlur","Boolean","helperText","name","Select","labelId","MenuItem","Typography","gutterBottom","Divider","disabled","ListPage","useParams","getForm","getOffer","getProperty","listFormCategories","listForms","listOffers","listProperties","listSellRequests","createForm","deleteForm","updateForm","BInputLabel","styled","shouldForwardProp","prop","theme","palette","text","primary","fontWeight","marginBottom","children","others","defaultProps","content","contentClass","darkTitle","useTheme","border","borderColor","mode","dark","light","boxShadow","p","action","opacity"],"mappings":"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","file":"static/js/18.2e03ca8c.chunk.js","sourcesContent":["import {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tButton,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _isEmpty from 'lodash.isempty';\nimport { PropertyData } from '../../../types';\nimport Loader from '../../../ui-component/Loader';\n\ntype Props = {\n\tproperties: PropertyData[];\n\tloading: boolean;\n\tonSelect: (property: PropertyData) => void;\n};\n\nexport interface ColumnProps {\n\tid: string;\n\tlabel: string;\n\talign?: 'right' | 'left' | 'inherit' | 'center' | 'justify' | undefined;\n\tformat?: (value: Date | number) => string | boolean;\n}\nconst columns: ColumnProps[] = [\n\t{\n\t\tid: 'Address',\n\t\tlabel: 'Address',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'Owner',\n\t\tlabel: 'Owner',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'Action',\n\t\tlabel: 'Action',\n\t\talign: 'left',\n\t},\n];\n\n// style constant\nconst useStyles = makeStyles({\n\troot: {\n\t\twidth: '100%',\n\t\toverflow: 'hidden',\n\t},\n\tcontainer: {\n\t\tmaxHeight: 440,\n\t},\n});\n\nconst SearchPropertyList = (props: Props) => {\n\tconst { properties, loading, onSelect } = props;\n\tconst classes = useStyles();\n\n\tif (loading) return <Loader />;\n\tif (_isEmpty(properties)) return <></>;\n\n\treturn (\n\t\t<TableContainer className={classes.container}>\n\t\t\t<Table stickyHeader aria-label='sticky table'>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t{columns.map(column => (\n\t\t\t\t\t\t\t<TableCell sx={{ py: 3 }} key={column.id} align={column.align}>\n\t\t\t\t\t\t\t\t{column.label}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{properties.map((row: PropertyData) => {\n\t\t\t\t\t\tconst address = `${row.StreetAddress}, ${row.City}, ${row.State} ${row.Zip}`;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\tsx={{ py: 3 }}\n\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\tkey={row.PropertyId}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableCell>{address}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>{row.Owner}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t<Button variant='text' onClick={() => onSelect(row)}>\n\t\t\t\t\t\t\t\t\t\tSelect\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n\nexport default SearchPropertyList;\n","import { useDispatch } from 'react-redux';\nimport { Grid, TextField } from '@material-ui/core';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport _get from 'lodash.get';\nimport { useEffect, useState, ChangeEvent } from 'react';\n\nimport { useDebounce } from 'ahooks';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport { searchDataTree } from '../../../graphql/queries';\nimport InputLabel from '../../../ui-component/extended/Form/InputLabel';\nimport SearchPropertyList from './SearchPropertyList';\nimport { PropertyData } from '../../../types';\n\ntype Props = {\n\tid: string;\n\tonSelect: (property: PropertyData) => void;\n};\n\nconst SearchProperty = (props: Props) => {\n\tconst { id, onSelect } = props;\n\tconst dispatch = useDispatch();\n\tconst [search, setSearch] = useState<string>('');\n\tconst debouncedSearchTerm = useDebounce(search, { wait: 500 });\n\n\tconst [searchProperty, { loading, error, data: properties }] = useLazyQuery(\n\t\tgql(searchDataTree)\n\t);\n\n\tuseEffect(() => {\n\t\tif (!debouncedSearchTerm) return;\n\t\tsearchProperty({\n\t\t\tvariables: {\n\t\t\t\tRequestId: id,\n\t\t\t\tSearchText: search,\n\t\t\t},\n\t\t});\n\t}, [debouncedSearchTerm]);\n\n\tuseEffect(() => {\n\t\tif (!error) return;\n\t\tconst message = _get(error, 'message', 'Something went wrong');\n\t\tdispatch({\n\t\t\ttype: SNACKBAR_OPEN,\n\t\t\topen: true,\n\t\t\tmessage,\n\t\t\tvariant: 'alert',\n\t\t\talertSeverity: 'error',\n\t\t\tanchorOrigin: { vertical: 'top', horizontal: 'center' },\n\t\t});\n\t}, [error]);\n\n\tconst handleSearch = async (\n\t\tevent: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | undefined\n\t) => {\n\t\tconst newString = event?.target.value;\n\t\tsetSearch(newString || '');\n\t};\n\tconst searchProperties = _get(\n\t\tproperties,\n\t\t['getSellRequest', 'DataTreeProperties', 'Properties'],\n\t\t{}\n\t);\n\n\t// @ts-ignore\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={12} lg={12}>\n\t\t\t\t<InputLabel>Search Property</InputLabel>\n\t\t\t\t<TextField variant='outlined' onChange={handleSearch} />\n\t\t\t</Grid>\n\t\t\t<SearchPropertyList\n\t\t\t\tproperties={searchProperties}\n\t\t\t\tloading={loading}\n\t\t\t\tonSelect={onSelect}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default SearchProperty;\n","import { useDispatch } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport _get from 'lodash.get';\nimport { useMutation, gql } from '@apollo/client';\nimport { approveSellRequest } from '../../../graphql/mutations';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\n\ntype Props = {\n\tid: string;\n};\nconst ApproveAction = (props: Props) => {\n\tconst { id } = props;\n\tconst dispatch = useDispatch();\n\tconst [approveAction] = useMutation(gql(approveSellRequest));\n\tconst approveHandler = async () => {\n\t\ttry {\n\t\t\tawait approveAction({\n\t\t\t\tvariables: {\n\t\t\t\t\tRequestId: id,\n\t\t\t\t},\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: SNACKBAR_OPEN,\n\t\t\t\topen: true,\n\t\t\t\tmessage: 'Sell Request has approved',\n\t\t\t\tvariant: 'alert',\n\t\t\t\talertSeverity: 'success',\n\t\t\t\tanchorOrigin: { vertical: 'top', horizontal: 'center' },\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconst message = _get(e, 'message', 'Something went wrong');\n\t\t\tdispatch({\n\t\t\t\ttype: SNACKBAR_OPEN,\n\t\t\t\topen: true,\n\t\t\t\tmessage,\n\t\t\t\tvariant: 'alert',\n\t\t\t\talertSeverity: 'error',\n\t\t\t\tanchorOrigin: { vertical: 'top', horizontal: 'center' },\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\tonClick={approveHandler}\n\t\t\ttype='button'\n\t\t\tvariant='contained'\n\t\t\tcolor='secondary'\n\t\t>\n\t\t\tApprove\n\t\t</Button>\n\t);\n};\n\nexport default ApproveAction;\n","import { useDispatch } from 'react-redux';\nimport {\n\tGrid,\n\tTableRow,\n\tTableCell,\n\tTableContainer,\n\tTable,\n\tTableBody,\n\tTextField,\n\tTypography,\n\tSelect,\n\tMenuItem,\n\tDivider,\n\tButton,\n} from '@material-ui/core';\nimport { Formik, FormikHelpers } from 'formik';\nimport * as yup from 'yup';\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport _isEmpty from 'lodash.isempty';\nimport _get from 'lodash.get';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport { SNACKBAR_OPEN } from '../../../store/actions';\nimport Loader from '../../../ui-component/Loader';\nimport {\n\tgetSellRequest,\n\tlistSupportedVestingTypes,\n} from '../../../graphql/queries';\nimport { gridSpacing } from '../../../store/constant';\nimport {\n\tTSellRequest,\n\tTSellRequestVariable,\n\tSellerInformation,\n\tPropertyData,\n\tSellRequestType,\n} from '../../../types';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport InputLabel from '../../../ui-component/extended/Form/InputLabel';\nimport SearchProperty from './SearchProperty';\nimport ApproveAction from './ApproveAction';\nimport {\n\tupdateSellRequestProperty,\n\tupdateSellRequest,\n} from '../../../graphql/mutations';\n\ntype Props = {\n\tid: string;\n};\n\ntype TRowProps = {\n\tsellerInformation: SellerInformation;\n\tsource: string;\n\tlabel: string;\n};\n\nconst Row = ({ sellerInformation, source, label }: TRowProps) => (\n\t<TableRow>\n\t\t<TableCell variant='head'>{label}</TableCell>\n\t\t<TableCell>{_get(sellerInformation, source, '')}</TableCell>\n\t</TableRow>\n);\n\nconst SellRequestEdit = (props: Props) => {\n\tconst { id } = props;\n\tconst dispatch = useDispatch();\n\tconst {\n\t\tloading: isLoadingVestingTypes,\n\t\terror: errorVestingTypes,\n\t\tdata: vestingTypesData,\n\t} = useQuery(gql(listSupportedVestingTypes));\n\tconst { loading, error, data, refetch } = useQuery<\n\t\tTSellRequest,\n\t\tTSellRequestVariable\n\t>(gql(getSellRequest), {\n\t\tvariables: {\n\t\t\tRequestId: id,\n\t\t},\n\t});\n\tconst [updateSellRequestPropertyAction] = useMutation(\n\t\tgql(updateSellRequestProperty)\n\t);\n\tconst [updateSellRequestAction] = useMutation(gql(updateSellRequest));\n\tif (loading || isLoadingVestingTypes) return <Loader />;\n\tif (error || errorVestingTypes) {\n\t\tdispatch({\n\t\t\ttype: SNACKBAR_OPEN,\n\t\t\topen: true,\n\t\t\tmessage: 'Something went wrong',\n\t\t\tvariant: 'alert',\n\t\t\talertSeverity: 'error',\n\t\t\tanchorOrigin: { vertical: 'top', horizontal: 'center' },\n\t\t});\n\t\treturn <></>;\n\t}\n\n\tif (_isEmpty(data)) return <></>;\n\n\tconst sellRequest = _get(data, ['getSellRequest'], {}) || {};\n\tconst sellerInformation = _get(sellRequest, 'SellerInfo', {}) || {};\n\tconst propertyListPriceRange =\n\t\t_get(sellRequest, 'PropertyListPriceRange', {}) || {};\n\tconst propertyData = _get(sellRequest, 'PropertyData', {}) || {};\n\tconst {\n\t\tYearBuilt: yearBuilt,\n\t\tOwnerNames: ownerNames,\n\t\tStreetAddress: streetAddress,\n\t\tState: state,\n\t\tCity: city,\n\t} = propertyData;\n\tconst zip = _get(propertyData, 'Zip') ?? '';\n\tconst fullAddress = `${streetAddress}, ${city}, ${state} ${zip}`;\n\tconst { Max: priceMax, Min: priceMin } = propertyListPriceRange;\n\tconst { RequestId } = sellRequest;\n\tconst vestingType = _get(propertyData, 'VestingTypeOverride', '') || 'Unknown';\n\n\tconst listSupportedVestingTypesOptions = _get(\n\t\tvestingTypesData,\n\t\t'listSupportedVestingTypes',\n\t\t[]\n\t);\n\n\tconst isOpen = _isEmpty(_get(sellRequest, 'ApprovedByAdvisor'));\n\n\tconst onSubmitHandler = async (\n\t\tvalues: SellRequestType,\n\t\t{ setStatus, setSubmitting }: FormikHelpers<SellRequestType>\n\t) => {\n\t\ttry {\n\t\t\tconst variables = {\n\t\t\t\tRequestId: id,\n\t\t\t\tVestingType: { VestingType: values.vestingType },\n\t\t\t\tYearBuilt: { YearBuilt: values.yearBuilt },\n\t\t\t\tListPriceRange: { Max: values.priceMax, Min: values.priceMin },\n\t\t\t};\n\t\t\tawait updateSellRequestAction({\n\t\t\t\tvariables,\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: SNACKBAR_OPEN,\n\t\t\t\topen: true,\n\t\t\t\tmessage: 'Sell Request has Updated',\n\t\t\t\tvariant: 'alert',\n\t\t\t\talertSeverity: 'success',\n\t\t\t\tanchorOrigin: { vertical: 'top', horizontal: 'center' },\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tconst message = _get(e, 'message', 'Something went wrong');\n\t\t\tsetStatus({ success: false });\n\t\t\tsetSubmitting(false);\n\n\t\t\tdispatch({\n\t\t\t\ttype: SNACKBAR_OPEN,\n\t\t\t\topen: true,\n\t\t\t\tmessage,\n\t\t\t\tvariant: 'alert',\n\t\t\t\talertSeverity: 'error',\n\t\t\t\tanchorOrigin: { vertical: 'top', horizontal: 'center' },\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onSelectPropertyHandler = async (property: PropertyData) => {\n\t\tconst { PropertyId } = property;\n\t\tawait updateSellRequestPropertyAction({\n\t\t\tvariables: {\n\t\t\t\tRequestId: id,\n\t\t\t\tDataTreePropertyId: PropertyId,\n\t\t\t},\n\t\t});\n\t\trefetch();\n\t};\n\n\treturn (\n\t\t<Grid container spacing={gridSpacing}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<MainCard\n\t\t\t\t\ttitle={RequestId}\n\t\t\t\t\tsecondary={isOpen && <ApproveAction id={RequestId} />}\n\t\t\t\t>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\tpriceMin,\n\t\t\t\t\t\t\tpriceMax,\n\t\t\t\t\t\t\tyearBuilt,\n\t\t\t\t\t\t\townerNames,\n\t\t\t\t\t\t\tvestingType,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalidationSchema={yup.object().shape({\n\t\t\t\t\t\t\tpriceMax: yup.number().required('Price max is require'),\n\t\t\t\t\t\t\tpriceMin: yup.number().required('Price min require'),\n\t\t\t\t\t\t\tyearBuilt: yup.number().required('Year Built is require'),\n\t\t\t\t\t\t\tvestingType: yup.string().required('Vesting Type is require'),\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonSubmit={onSubmitHandler}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center'>\n\t\t\t\t\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<SubCard title='Seller Request Information'>\n\t\t\t\t\t\t\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'& td': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderBottom: 'none',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsellerInformation={sellerInformation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource='Email'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsellerInformation={sellerInformation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource='FirstName'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsellerInformation={sellerInformation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource='LastName'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsellerInformation={sellerInformation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsource='Phone'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t<SubCard title='Property Information'>\n\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>List Price Min</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.priceMin}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='List Price Min'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={touched.priceMin && Boolean(errors.priceMin)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.priceMin && errors.priceMin}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='priceMin'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>List Price Max</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.priceMax}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='List Price Max'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={touched.priceMax && Boolean(errors.priceMax)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.priceMax && errors.priceMax}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='priceMax'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>Vesting Type</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelId='vesting-select'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid='vesting-type'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='vestingType'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.vestingType}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Vesting Type'\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value='Unknown'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<em>Unknown</em>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!_isEmpty(listSupportedVestingTypesOptions) &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlistSupportedVestingTypesOptions.map((type: string) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={type} value={type}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>Built Year</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.yearBuilt}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Built Year'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={touched.priceMin && Boolean(errors.yearBuilt)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={touched.priceMin && errors.yearBuilt}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='yearBuilt'\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>Address</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='h6' gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{fullAddress}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={2} alignItems='center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel>Owner</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='h6' gutterBottom>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ownerNames}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t{isOpen && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<SearchProperty id={id} onSelect={onSelectPropertyHandler} />\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} lg={6}>\n\t\t\t\t\t\t\t\t\t\t<Grid container alignItems='left' spacing={2}>\n\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</MainCard>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default SellRequestEdit;\n","import { useParams } from 'react-router-dom';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport SellRequestEdit from '../../application/sell-request/SellRequestEdit';\n\nconst ListPage = () => {\n\tconst { id } = useParams<{ id: string }>();\n\treturn (\n\t\t<MainCard title='Sell Request Edit'>\n\t\t\t<SellRequestEdit id={id} />\n\t\t</MainCard>\n\t);\n};\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n\tquery GetForm($FormId: ID!) {\n\t\tgetForm(FormId: $FormId) {\n\t\t\tCategoryId\n\t\t\tCreatedBy\n\t\t\tCreatedDT\n\t\t\tFormId\n\t\t\tFormStatus\n\t\t\tFormTypeId\n\t\t\tTemplate\n\t\t\tTitle\n\t\t\tUpdatedBy\n\t\t\tUpdatedDT\n\t\t}\n\t}\n`;\nexport const getFormCategory = /* GraphQL */ `\n\tquery GetFormCategory($CategoryId: ID!) {\n\t\tgetFormCategory(CategoryId: $CategoryId) {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const getOffer = /* GraphQL */ `\n\tquery GetOffer($OfferId: ID!) {\n\t\tgetOffer(OfferId: $OfferId) {\n\t\t\tAgentInfo {\n\t\t\t\tAssistantEmail\n\t\t\t\tDreNumber\n\t\t\t\tEmail\n\t\t\t\tFirstname\n\t\t\t\tLastname\n\t\t\t\tMiddlename\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tBuyerInfo {\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tMiddleName\n\t\t\t\tTitleName\n\t\t\t}\n\t\t\tBuyerType\n\t\t\tContingencies {\n\t\t\t\tAllRemoved\n\t\t\t\tAnyAndAll\n\t\t\t\tFinanceContingency\n\t\t\t\tFinanceContingencyDueDate\n\t\t\t\tFinanceContingencyRemoved\n\t\t\t\tFinanceContingencyRemovedAt\n\t\t\t\tInspectionContingency\n\t\t\t\tInspectionContingencyDueDate\n\t\t\t\tInspectionContingencyRemoved\n\t\t\t\tInspectionContingencyRemovedAt\n\t\t\t\tSaleOfHomeContingency\n\t\t\t\tSaleOfHomeContingencyDueDate\n\t\t\t\tSaleOfHomeContingencyRemoved\n\t\t\t\tSaleOfHomeContingencyRemovedAt\n\t\t\t}\n\t\t\tCounterOffer {\n\t\t\t\tCounterOfferId\n\t\t\t\tForms\n\t\t\t\tPosition\n\t\t\t}\n\t\t\tFirmInfo {\n\t\t\t\tCompanyEmail\n\t\t\t\tCompanyPhone\n\t\t\t\tCompanyname\n\t\t\t\tDreNumber\n\t\t\t}\n\t\t\tFunding {\n\t\t\t\tDownPayment\n\t\t\t\tFicoScore\n\t\t\t\tLoanType\n\t\t\t\tPreapprovedForLoan\n\t\t\t\tPurchaseType\n\t\t\t}\n\t\t\tOffer {\n\t\t\t\tClosingPeriod\n\t\t\t\tFinanceContingency\n\t\t\t\tFurniture\n\t\t\t\tInspectionContingency\n\t\t\t\tOfferPrice\n\t\t\t\tSaleOfHomeContingency\n\t\t\t}\n\t\t\tOfferId\n\t\t\tOfferNo\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tStep {\n\t\t\t\tbuyer_can_submit_offer\n\t\t\t\tdisplay_on_advisor_portal\n\t\t\t\tdisplay_on_seller_dashboard\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\twaiting_seller_to_act\n\t\t\t}\n\t\t\tStepId\n\t\t}\n\t}\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n\tquery GetOfferDocPutUrls(\n\t\t$DocumentType: String!\n\t\t$Documents: [FileItemInput]!\n\t\t$OfferId: ID!\n\t) {\n\t\tgetOfferDocPutUrls(\n\t\t\tDocumentType: $DocumentType\n\t\t\tDocuments: $Documents\n\t\t\tOfferId: $OfferId\n\t\t) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getOfferStep = /* GraphQL */ `\n\tquery GetOfferStep($StepId: ID!) {\n\t\tgetOfferStep(StepId: $StepId) {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const getProperty = /* GraphQL */ `\n\tquery GetProperty($PropertyId: ID!) {\n\t\tgetProperty(PropertyId: $PropertyId) {\n\t\t\tCreatedAt\n\t\t\tListed\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tThumbnail {\n\t\t\t\tid\n\t\t\t\tkey\n\t\t\t\tname\n\t\t\t\tpresignedUrl\n\t\t\t\tsize\n\t\t\t\ttype\n\t\t\t}\n\t\t\tUpdatedAt\n\t\t}\n\t}\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n\tquery GetPropertyThumbnailPutUrl($Photos: [FileItemInput]!, $PropertyId: ID!) {\n\t\tgetPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getSellRequest = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tApprovedBy\n\t\t\tApprovedByAdvisor\n\t\t\tCreatedAt\n\t\t\tCreatedBy\n\t\t\tDTPropertyId\n\t\t\tPropertyData {\n\t\t\t\tBedrooms\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tFullBath\n\t\t\t\tLandUse\n\t\t\t\tLivingArea\n\t\t\t\tLotArea\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingOwnershipRight\n\t\t\t\tVestingTypeMapped\n\t\t\t\tVestingTypeOverride\n\t\t\t\tYearBuilt\n\t\t\t\tYearBuiltOverride\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyListPriceRange {\n\t\t\t\tMax\n\t\t\t\tMaxFormatted\n\t\t\t\tMin\n\t\t\t\tMinFormatted\n\t\t\t}\n\t\t\tRequestId\n\t\t\tSellerInfo {\n\t\t\t\tEmail\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tTaxReportTaxResourceMessage\n\t\t\tTaxReportTaxResourceStatus\n\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\tTaxReportTotalViewMessage\n\t\t\tTaxReportTotalViewStatus\n\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\tUpdatedAt\n\t\t\tUpdatedBy\n\t\t}\n\t}\n`;\nexport const searchDataTree = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!, $SearchText: String!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tDataTreeProperties(SearchText: $SearchText) {\n\t\t\t\tCount\n\t\t\t\tProperties {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tOwner\n\t\t\t\t\tPropertyId\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const listFormCategories = /* GraphQL */ `\n\tquery ListFormCategories {\n\t\tlistFormCategories {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const listForms = /* GraphQL */ `\n\tquery ListForms($limit: Int, $nextToken: String) {\n\t\tlistForms(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listOfferSteps = /* GraphQL */ `\n\tquery ListOfferSteps {\n\t\tlistOfferSteps {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const listOffers = /* GraphQL */ `\n\tquery ListOffers($limit: Int, $nextToken: String) {\n\t\tlistOffers(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tFunding {\n\t\t\t\t\tPurchaseType\n\t\t\t\t\tLoanType\n\t\t\t\t\tDownPayment\n\t\t\t\t}\n\t\t\t\tOfferNo\n\t\t\t\tOfferId\n\t\t\t\tPropertyData {\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t}\n\t\t\t\tCounterOffer {\n\t\t\t\t\tSellerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t\tBuyerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tStep {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listProperties = /* GraphQL */ `\n\tquery ListProperties($limit: Int, $nextToken: String) {\n\t\tlistProperties(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCreatedAt\n\t\t\t\tListed\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tUpdatedAt\n\t\t\t\tPropertyData {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSellRequests = /* GraphQL */ `\n\tquery ListSellRequests($limit: Int, $nextToken: String) {\n\t\tlistSellRequests(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tApprovedBy\n\t\t\t\tApprovedByAdvisor\n\t\t\t\tCreatedAt\n\t\t\t\tCreatedBy\n\t\t\t\tDTPropertyId\n\t\t\t\tPropertyId\n\t\t\t\tRequestId\n\t\t\t\tTaxReportTaxResourceMessage\n\t\t\t\tTaxReportTaxResourceStatus\n\t\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\t\tTaxReportTotalViewMessage\n\t\t\t\tTaxReportTotalViewStatus\n\t\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\t\tUpdatedAt\n\t\t\t\tUpdatedBy\n\t\t\t\tSellerInfo {\n\t\t\t\t\tEmail\n\t\t\t\t\tFirstName\n\t\t\t\t\tLastName\n\t\t\t\t\tPhone\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n\tquery ListSupportedVestingTypes {\n\t\tlistSupportedVestingTypes\n\t}\n`;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const approveSellRequest = /* GraphQL */ `\n  mutation ApproveSellRequest($RequestId: ID!) {\n    approveSellRequest(RequestId: $RequestId) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      Property {\n        CreatedAt\n        Listed\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          VestingType\n          YearBuilt\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        Thumbnail {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        UpdatedAt\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createForm = /* GraphQL */ `\n  mutation CreateForm($Form: ModelFormInput!) {\n    createForm(Form: $Form) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const createSellRequest = /* GraphQL */ `\n  mutation CreateSellRequest($SellerInfo: SellerInfoInput) {\n    createSellRequest(SellerInfo: $SellerInfo) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      Property {\n        CreatedAt\n        Listed\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          VestingType\n          YearBuilt\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        Thumbnail {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        UpdatedAt\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteForm = /* GraphQL */ `\n  mutation DeleteForm($FormId: ID!) {\n    deleteForm(FormId: $FormId) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const deleteSellRequest = /* GraphQL */ `\n  mutation DeleteSellRequest($RequestId: ID!) {\n    deleteSellRequest(RequestId: $RequestId) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      Property {\n        CreatedAt\n        Listed\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          VestingType\n          YearBuilt\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        Thumbnail {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        UpdatedAt\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateForm = /* GraphQL */ `\n  mutation UpdateForm($Form: ModelFormInput!, $FormId: ID!) {\n    updateForm(Form: $Form, FormId: $FormId) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const updateOfferStep = /* GraphQL */ `\n  mutation UpdateOfferStep($OfferId: ID!, $StepId: ID!) {\n    updateOfferStep(OfferId: $OfferId, StepId: $StepId) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        BuyerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n        CounterOfferId\n        Forms\n        Position\n        SellerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n      }\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      Step {\n        allowed_actions {\n          action\n          form_action\n          next_step_id\n        }\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        messages {\n          advisor\n          buyer\n          seller\n        }\n        name\n        waiting_seller_to_act\n      }\n      StepId\n    }\n  }\n`;\nexport const updateSellRequest = /* GraphQL */ `\n  mutation UpdateSellRequest(\n    $ListPriceRange: ListPriceRangeInput\n    $RequestId: ID!\n    $VestingType: VestingTypeInput\n    $YearBuilt: YearBuiltInput\n  ) {\n    updateSellRequest(\n      ListPriceRange: $ListPriceRange\n      RequestId: $RequestId\n      VestingType: $VestingType\n      YearBuilt: $YearBuilt\n    ) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      Property {\n        CreatedAt\n        Listed\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          VestingType\n          YearBuilt\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        Thumbnail {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        UpdatedAt\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateSellRequestProperty = /* GraphQL */ `\n  mutation UpdateSellRequestProperty(\n    $DataTreePropertyId: Int!\n    $RequestId: ID!\n  ) {\n    updateSellRequestProperty(\n      DataTreePropertyId: $DataTreePropertyId\n      RequestId: $RequestId\n    ) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      Property {\n        CreatedAt\n        Listed\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          VestingType\n          YearBuilt\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        Thumbnail {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        UpdatedAt\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateSellRequestReportStatus = /* GraphQL */ `\n  mutation UpdateSellRequestReportStatus(\n    $ReportStatus: ModelSellRequestReportStatusInput!\n  ) {\n    updateSellRequestReportStatus(ReportStatus: $ReportStatus) {\n      DTPropertyId\n      PropertyId\n      RequestId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n\tInputLabel as MuiInputLabel,\n\tInputLabelProps,\n} from '@material-ui/core';\n\nconst BInputLabel = styled(\n\t(props: MUIInputLabelProps) => <MuiInputLabel {...props} />,\n\t{\n\t\tshouldForwardProp: prop => prop !== 'horizontal',\n\t}\n)(({ theme, horizontal }) => ({\n\tcolor: theme.palette.text.primary,\n\tfontWeight: 500,\n\tmarginBottom: horizontal ? 0 : 8,\n}));\n\nexport interface MUIInputLabelProps extends InputLabelProps {\n\thorizontal: boolean;\n}\n\nconst InputLabel = ({\n\tchildren,\n\thorizontal,\n\t...others\n}: MUIInputLabelProps) => (\n\t\t<BInputLabel horizontal={horizontal} {...others}>\n\t\t\t{children}\n\t\t</BInputLabel>\n\t);\n\nInputLabel.defaultProps = {\n\thorizontal: false,\n};\n\nexport default InputLabel;\n","import { ReactNode } from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tDivider,\n\tTypography,\n} from '@material-ui/core';\n\nexport interface SubCardProps {\n\tchildren: ReactNode | string | null;\n\tcontent?: boolean;\n\tclassName?: string;\n\tcontentClass?: string;\n\tdarkTitle?: boolean;\n\tsecondary?: ReactNode | string | {};\n\tsx?: {};\n\ttitle?: ReactNode | string | {};\n}\n\n// -----------------------|| CUSTOM SUB CARD ||-----------------------//\n\nconst SubCard = ({\n\tchildren,\n\tcontent,\n\tcontentClass,\n\tdarkTitle,\n\tsecondary,\n\tsx = {},\n\ttitle,\n\t...others\n}: SubCardProps) => {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tborder: '1px solid',\n\t\t\t\tborderColor:\n\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t':hover': {\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t? '0 2px 14px 0 rgb(33 150 243 / 10%)'\n\t\t\t\t\t\t\t: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n\t\t\t\t},\n\t\t\t\t...sx,\n\t\t\t}}\n\t\t\t{...others}\n\t\t>\n\t\t\t{/* card header and action */}\n\t\t\t{!darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h5'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h4'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* content & header divider */}\n\t\t\t{title && (\n\t\t\t\t<Divider\n\t\t\t\t\tsx={{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* card content */}\n\t\t\t{content && (\n\t\t\t\t<CardContent sx={{ p: 2.5 }} className={contentClass || ''}>\n\t\t\t\t\t{children}\n\t\t\t\t</CardContent>\n\t\t\t)}\n\t\t\t{!content && children}\n\t\t</Card>\n\t);\n};\n\nSubCard.defaultProps = {\n\tcontent: true,\n};\n\nexport default SubCard;\n"],"sourceRoot":""}