{"version":3,"sources":["../node_modules/@material-ui/core/ListSubheader/listSubheaderClasses.js","../node_modules/@material-ui/core/ListSubheader/ListSubheader.js","../node_modules/@material-ui/core/useAutocomplete/useAutocomplete.js","../node_modules/@material-ui/core/Autocomplete/autocompleteClasses.js","../node_modules/@material-ui/core/Autocomplete/Autocomplete.js"],"names":["getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ListSubheaderRoot","experimentalStyled","name","overridesResolver","props","styles","styleProps","_extends","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","ListSubheader","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","stripDiacritics","string","normalize","replace","findIndex","array","comp","i","length","defaultFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","createFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","getOptionSelected","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","useEventCallback","event","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","tagToFocus","current","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getAutocompleteUtilityClass","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","tag","inputRoot","clearIndicator","visibility","width","margin","maxWidth","flexWrap","minWidth","paddingBottom","padding","endAdornment","right","paddingTop","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","focusVisible","alpha","selectedOpacity","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","_ref","ClearIcon","_ref2","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","clearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","map","Chip","children","_jsxs","props2","renderListOption","optionProps","undefined","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/6.90f7caee.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = styleProps;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\n\nconst ListSubheaderRoot = experimentalStyled('li', {}, {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, styles.root, styleProps.color !== 'default' && styles[`color${capitalize(styleProps.color)}`], !styleProps.disableGutters && styles.gutters, styleProps.inset && styles.inset, !styleProps.disableSticky && styles.sticky);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: theme.palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, styleProps.color === 'primary' && {\n  color: theme.palette.primary.main\n}, styleProps.color === 'inherit' && {\n  color: 'inherit'\n}, !styleProps.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, styleProps.inset && {\n  paddingLeft: 72\n}, !styleProps.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: theme.palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  const styleProps = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListSubheader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '../utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    getOptionSelected = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && getOptionSelected(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => getOptionSelected(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => getOptionSelected(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => getOptionSelected(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => getOptionSelected(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`getOptionSelected\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => getOptionSelected(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && getOptionSelected(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '../styles/colorManipulator';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = styleProps;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = styleProps;\n    return _extends({\n      [`& .${autocompleteClasses.tag}`]: _extends({}, styles.tag, styles[`tagSize${capitalize(size)}`]),\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot,\n      [`& .${autocompleteClasses.input}`]: _extends({}, styles.input, inputFocused && styles.inputFocused)\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon);\n  }\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, styleProps.fullWidth && {\n  width: '100%'\n}, {\n  /* Styles applied to the tag elements, e.g. the chips. */\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n\n  /* Styles applied to the Input element. */\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    },\n    '&.MuiInput-root': {\n      paddingBottom: 1,\n      '& .MuiInput-input': {\n        padding: '4px 4px 4px 0px'\n      }\n    },\n    '&.MuiInput-root.MuiInputBase-sizeSmall': {\n      '& .MuiInput-input': {\n        padding: '2px 4px 3px 0'\n      }\n    },\n    '&.MuiOutlinedInput-root': {\n      padding: 9,\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4 + 9\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4 + 9\n      },\n      [`& .${autocompleteClasses.input}`]: {\n        padding: '7.5px 4px 7.5px 6px'\n      },\n      [`& .${autocompleteClasses.endAdornment}`]: {\n        right: 9\n      }\n    },\n    '&.MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n      padding: 6,\n      [`& .${autocompleteClasses.input}`]: {\n        padding: '2.5px 4px 2.5px 6px'\n      }\n    },\n    '&.MuiFilledInput-root': {\n      paddingTop: 19,\n      paddingLeft: 8,\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 26 + 4 + 9\n      },\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n        paddingRight: 52 + 4 + 9\n      },\n      '& .MuiFilledInput-input': {\n        padding: '7px 4px'\n      },\n      [`& .${autocompleteClasses.endAdornment}`]: {\n        right: 9\n      }\n    },\n    '&.MuiFilledInput-root.MuiInputBase-sizeSmall': {\n      paddingBottom: 1,\n      '& .MuiFilledInput-input': {\n        padding: '2.5px 4px'\n      }\n    }\n  },\n\n  /* Styles applied to the input element. */\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  /* Styles applied to the endAdornment element. */\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = experimentalStyled(IconButton, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  /* Styles applied to the clear indicator. */\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = experimentalStyled(IconButton, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    styleProps\n  }, styles) => _extends({}, styles.popupIndicator, styleProps.popupOpen && styles.popupIndicatorOpen)\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the popup indicator. */\n  padding: 2,\n  marginRight: -2\n}, styleProps.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = experimentalStyled(Popper, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, styleProps.disablePortal && styles.popperDisablePortal);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the popper element. */\n  zIndex: theme.zIndex.modal\n}, styleProps.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = experimentalStyled(Paper, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto',\n  margin: '4px 0'\n}));\nconst AutocompleteLoading = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  /* Styles applied to the loading wrapper. */\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  /* Styles applied to the no option wrapper. */\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  /* Styles applied to the listbox component. */\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n\n  /* Styles applied to the option elements. */\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    '&[data-focus=\"true\"]': {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      '&[data-focus=\"true\"]': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = experimentalStyled(ListSubheader, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  /* Styles applied to the group's label elements. */\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = experimentalStyled('ul', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  /* Styles applied to the group's ul elements. */\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\n\nvar _ref = /*#__PURE__*/_jsx(ClearIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(ArrowDropDownIcon, {});\n\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ref,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ref2,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const styleProps = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      styleProps: styleProps,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      styleProps: styleProps,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              className: classes.clearIndicator,\n              styleProps: styleProps,\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value(s).\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}