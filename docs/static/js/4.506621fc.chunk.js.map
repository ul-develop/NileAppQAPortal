{"version":3,"sources":["utils/password-strength.ts","views/pages/authentication/completePassword/Form.tsx","views/pages/authentication/completePassword/index.tsx","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/AuthCardWrapper.tsx","ui-component/extended/AnimateButton.tsx"],"names":["strengthIndicator","value","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","useStyles","makeStyles","theme","loginInput","typography","customInput","notchedOutline","borderRadius","customization","CompletePasswordForm","others","classes","React","useState","showPassword","setShowPassword","strength","setStrength","undefined","level","setLevel","completePassword","useAuth","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","count","temp","label","color","errorMain","warningDark","orangeMain","successMain","successDark","initialValues","password","confirmPassword","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","className","variant","InputLabel","htmlFor","OutlinedInput","id","type","name","onBlur","onChange","e","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","inputProps","FormHelperText","Box","mb","Grid","container","spacing","alignItems","item","width","height","bgcolor","Typography","fontSize","mt","AnimateButton","Button","disableElevation","disabled","size","ForgotPassword","useTheme","matchDownSM","useMediaQuery","breakpoints","down","AuthWrapper","justifyContent","sx","minHeight","xs","AuthCardWrapper","direction","Stack","palette","secondary","main","gutterBottom","sm","to","Logo","Form","styled","backgroundColor","mode","background","default","primary","light","card","maxWidth","flexGrow","flexBasis","margin","content","padding","children","other","contentClass","forwardRef","ref","offset1","offset2","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps"],"mappings":"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","file":"static/js/4.506621fc.chunk.js","sourcesContent":["/**\r\n * Password validator for login pages\r\n */\r\nimport { NumbColorFunc, StringBoolFunc, StringNumFunc } from '../types';\r\nimport value from '../assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber: StringBoolFunc = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed: StringBoolFunc = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial: StringBoolFunc = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor: NumbColorFunc = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator: StringNumFunc = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","import React, { MouseEvent } from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useAuth from '../../../../hooks/useAuth';\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\nimport {\n  strengthColor,\n  strengthIndicator,\n} from '../../../../utils/password-strength';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles(theme => ({\n  loginInput: {\n    ...theme.typography.customInput,\n  },\n  notchedOutline: {\n    borderRadius: theme?.customization?.borderRadius + 'px',\n  },\n}));\n\nconst CompletePasswordForm = ({ ...others }) => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [strength, setStrength] = React.useState(0);\n  const [level, setLevel] = React.useState<\n    { label: string; color: string } | undefined\n  >(undefined);\n\n  const { completePassword } = useAuth();\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event: MouseEvent) => {\n    event.preventDefault();\n  };\n\n  const changePassword = (value: string) => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp) as any);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        confirmPassword: '',\n        submit: null,\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string().max(255).required('Password is required'),\n        confirmPassword: Yup.string()\n          .max(255)\n          .required('Confirm password is required')\n          .oneOf([Yup.ref('password'), null], 'Both passwords must match!'),\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          await completePassword(values.password);\n        } catch (err) {\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => (\n        <form noValidate onSubmit={handleSubmit} {...others}>\n          <FormControl\n            fullWidth\n            error={Boolean(touched.password && errors.password)}\n            className={classes.loginInput}\n            variant=\"outlined\"\n          >\n            <InputLabel htmlFor=\"outlined-adornment-password-reset\">\n              Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password-reset\"\n              type={showPassword ? 'text' : 'password'}\n              value={values.password}\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={e => {\n                handleChange(e);\n                changePassword(e.target.value);\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              inputProps={{\n                classes: {\n                  notchedOutline: classes.notchedOutline,\n                },\n              }}\n            />\n          </FormControl>\n          {touched.password && errors.password && (\n            <FormControl fullWidth>\n              <FormHelperText error id=\"standard-weight-helper-text-reset\">\n                {' '}\n                {errors.password}{' '}\n              </FormHelperText>\n            </FormControl>\n          )}\n          {strength !== 0 && (\n            <FormControl fullWidth>\n              <Box mb={2}>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item>\n                    <Box\n                      width={85}\n                      height={8}\n                      borderRadius={7}\n                      bgcolor={level?.color}\n                    ></Box>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                      {level?.label}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Box>\n            </FormControl>\n          )}\n\n          <FormControl\n            fullWidth\n            error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n            className={classes.loginInput}\n            variant=\"outlined\"\n          >\n            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\n              Confirm Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-confirm-password\"\n              type=\"password\"\n              value={values.confirmPassword}\n              name=\"confirmPassword\"\n              label=\"Confirm Password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              inputProps={{\n                classes: {\n                  notchedOutline: classes.notchedOutline,\n                },\n              }}\n            />\n          </FormControl>\n\n          {touched.confirmPassword && errors.confirmPassword && (\n            <FormControl fullWidth>\n              <FormHelperText\n                error\n                id=\"standard-weight-helper-text-confirm-password\"\n              >\n                {' '}\n                {errors.confirmPassword}{' '}\n              </FormHelperText>\n            </FormControl>\n          )}\n\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>{errors.submit}</FormHelperText>\n            </Box>\n          )}\n          <Box mt={1}>\n            <AnimateButton>\n              <Button\n                disableElevation\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Update Password\n              </Button>\n            </AnimateButton>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CompletePasswordForm;\n","import { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from '../AuthWrapper';\nimport AuthCardWrapper from '../AuthCardWrapper';\nimport Logo from '../../../../ui-component/Logo';\nimport Form from './Form';\n\nconst ForgotPassword = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n    <AuthWrapper1>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        sx={{ minHeight: '100vh' }}\n      >\n        <Grid item container justifyContent=\"center\" xs={12}>\n          <AuthCardWrapper>\n            <Grid container spacing={2} justifyContent=\"center\">\n              <Grid item xs={12}>\n                <Grid\n                  container\n                  direction={matchDownSM ? 'column-reverse' : 'row'}\n                  alignItems=\"center\"\n                  justifyContent={matchDownSM ? 'center' : 'space-between'}\n                >\n                  <Grid item>\n                    <Stack\n                      justifyContent={matchDownSM ? 'center' : 'flex-start'}\n                      alignItems={matchDownSM ? 'center' : 'baseline'}\n                    >\n                      <Typography\n                        color={theme.palette.secondary.main}\n                        gutterBottom\n                        variant={matchDownSM ? 'h3' : 'h2'}\n                      >\n                        Complete Password\n                      </Typography>\n                      <Typography color=\"textPrimary\" gutterBottom variant=\"h4\">\n                        Please choose new password.\n                      </Typography>\n                    </Stack>\n                  </Grid>\n                  <Grid item sx={{ mb: { xs: 3, sm: 0 } }}>\n                    <RouterLink to=\"#\">\n                      <Logo />\n                    </RouterLink>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12}>\n                <Form />\n              </Grid>\n            </Grid>\n          </AuthCardWrapper>\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default ForgotPassword;\n","// material-ui\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// project import\r\nimport MainCard, { MainCardProps } from './../../../ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import React, { Ref } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\nexport type ScaleProps = {\r\n    hover: number | string | undefined;\r\n    tap: number | string | undefined;\r\n};\r\n\r\nexport interface AnimateButtonProps {\r\n    children?: React.ReactNode;\r\n    type?: 'slide' | 'scale' | 'rotate';\r\n    direction?: 'up' | 'down' | 'left' | 'right';\r\n    offset?: number;\r\n    scale?: ScaleProps;\r\n}\r\n\r\n//-----------------------|| ANIMATION BUTTON ||-----------------------//\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ x: x !== undefined ? x : '' }}\r\n                        onHoverEnd={() => cycleX()}\r\n                        onHoverStart={() => cycleX()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n"],"sourceRoot":""}