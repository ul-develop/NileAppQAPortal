{"version":3,"sources":["views/application/offer/ActionButton.tsx","views/application/offer/OfferActions.tsx","views/application/offer/config.ts","views/application/offer/OfferEdit.tsx","views/pages/offer/EditPage.tsx","graphql/mutations.ts","ui-component/extended/AnimateButton.tsx","helpers/offer.ts","helpers/currency.ts","ui-component/cards/SubCard.tsx","views/application/components/TextRow/index.tsx","views/application/components/UploadFile/Preview.tsx","views/application/components/UploadFile/index.tsx"],"names":["buttonStylesByStep","variant","color","ActionButton","action","onClick","disabled","content","nextStepId","next_step_id","buttonStyle","Grid","item","Button","type","offerSteps","config","advisorActions","awaitingAdvisorApproval","paBeingCreated","reviewScarRequest","OfferActions","offer","useQuery","gql","listOfferSteps","fetchPolicy","loadingSteps","loading","data","steps","_get","currentStepId","includes","isOfferStep","stepId","isMissingPADocument","isDocumentExits","isMissingSCARDocument","offerId","currentStep","find","id","actions","useMemo","allowedActions","length","reverse","showSnackBar","useSnackBar","useMutation","updateOfferStep","onCompleted","_isEmpty","window","location","reload","onError","error","message","alertSeverity","updateStep","Loader","container","spacing","map","nextStep","variables","OfferId","NewStepId","FILE_CONFIG","OfferEdit","getOffer","options","name","query","getOfferDocPutUrls","generateVariables","files","Documents","DocumentType","useUploadFiles","PAFiles","onPAChange","onFilesChange","uploadPA","uploadFiles","isPAUploading","isUploadLoading","SCARFiles","onSCARChange","uploadSCAR","isSCARUploading","offerNo","theme","useTheme","useEffect","docPA","docSCAR","convertToFile","Alert","severity","sx","palette","main","isShowPA","isShowSCAR","isUploading","MainCard","title","secondary","CardContent","gridSpacing","lg","xs","SubCard","TableContainer","Table","borderBottom","size","TableBody","TextRow","source","label","getValue","getOfferPrice","direction","UploadFile","onDrop","accept","Divider","CardActions","Stack","justifyContent","AnimateButton","CircularProgress","EditPage","useParams","approveProperty","createForm","createProperty","deleteForm","deleteProperty","selectDataTreeProperty","updateForm","updatePropertyData","updatePropertyReportStatus","React","forwardRef","ref","offset1","offset2","children","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","whileHover","hover","whileTap","tap","defaultProps","price","counteredBySeller","formatCurrency","value","Intl","NumberFormat","locate","country","style","currency","format","contentClass","darkTitle","others","border","borderColor","mode","dark","light","primary","boxShadow","p","opacity","className","useStyles","makeStyles","uploadImage","position","overflow","borderRadius","cursor","width","minHeight","display","alignItems","verticalAlign","marginRight","zIndex","imageHover","left","top","background","height","removeButton","margin","padding","marginBottom","Preview","props","file","onRemove","classes","preview","md","alignContent","CardMedia","component","src","Fab","Typography","fileInput","borderWidth","borderStyle","activeStyle","fileContainer","textAlign","maxFiles","useDropzone","getRootProps","getInputProps","isDragActive","fileRejections","removeAt","index","newFiles","splice","clsx","InputLabel"],"mappings":"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","file":"static/js/16.6724248a.chunk.js","sourcesContent":["/* eslint-disable camelcase */\nimport { Grid, Button } from '@material-ui/core';\n\nconst buttonStylesByStep: { [stepId: number]: TStyle } = {\n\t150: {\n\t\tvariant: 'outlined',\n\t\tcolor: 'secondary',\n\t},\n\t200: {\n\t\tvariant: 'contained',\n\t\tcolor: 'primary',\n\t},\n\t500: {\n\t\tvariant: 'contained',\n\t\tcolor: 'primary',\n\t},\n\t800: {\n\t\tvariant: 'contained',\n\t\tcolor: 'primary',\n\t},\n\t910: {\n\t\tvariant: 'text',\n\t\tcolor: 'error',\n\t},\n};\n\ntype TStyle = {\n\tvariant: string;\n\tcolor: string;\n};\n\nexport type TAction = {\n\taction: string;\n\tform_action: boolean | null;\n\tnext_step_id: number;\n};\n\ntype Props = {\n\taction: TAction;\n\tonClick: () => void;\n\tdisabled?: boolean;\n};\n\nexport const ActionButton = ({ action, onClick, disabled }: Props) => {\n\tconst { action: content, next_step_id: nextStepId } = action;\n\tconst buttonStyle = buttonStylesByStep[nextStepId] as any;\n\treturn (\n\t\t<Grid item>\n\t\t\t<Button type='button' onClick={onClick} disabled={disabled} {...buttonStyle}>\n\t\t\t\t{content}\n\t\t\t</Button>\n\t\t</Grid>\n\t);\n};\n","import { FC, useMemo } from 'react';\nimport { useQuery, gql, ApolloError, useMutation } from '@apollo/client';\nimport { Grid } from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { isDocumentExits } from '../../../helpers/offer';\nimport config from '../../../config';\nimport { TOffer } from '../../../types';\nimport { updateOfferStep } from '../../../graphql/mutations';\nimport { listOfferSteps } from '../../../graphql/queries';\nimport Loader from '../../../ui-component/Loader';\nimport { useSnackBar } from '../../../hooks';\nimport { ActionButton, TAction } from './ActionButton';\n\nconst PA_FIELD = 'SignedPurchaseAgreement';\nconst SCAR_FIELD = 'SCAR';\nconst { offerSteps } = config;\n\nconst advisorActions: number[] = [\n\tofferSteps.awaitingAdvisorApproval,\n\tofferSteps.paBeingCreated,\n\tofferSteps.reviewScarRequest,\n];\n\ntype Props = {\n\toffer: TOffer;\n};\n\nexport const OfferActions: FC<Props> = ({ offer }: Props) => {\n\tconst { loading: loadingSteps, data } = useQuery(gql(listOfferSteps), {\n\t\tfetchPolicy: 'cache-first',\n\t});\n\n\tconst steps = _get(data, 'listOfferSteps', []);\n\tconst currentStepId: number = +_get(offer, 'StepId', 0);\n\n\t// Only show advisor actions\n\tif (!advisorActions.includes(currentStepId)) return <></>;\n\n\tconst isOfferStep = (stepId: number) => currentStepId === stepId;\n\n\tconst isMissingPADocument =\n\t\tisOfferStep(offerSteps.paBeingCreated) && !isDocumentExits(offer, PA_FIELD);\n\n\tconst isMissingSCARDocument =\n\t\tisOfferStep(offerSteps.reviewScarRequest) &&\n\t\t!isDocumentExits(offer, SCAR_FIELD);\n\n\t// No action for missing document offer\n\tif (isMissingPADocument || isMissingSCARDocument) return <></>;\n\n\tconst offerId = _get(offer, 'OfferId');\n\tconst currentStep = steps.find(\n\t\t({ id }: { id: number }) => id === currentStepId\n\t);\n\tconst actions = useMemo(() => {\n\t\tconst allowedActions = _get(currentStep, 'allowed_actions', []);\n\t\tif (allowedActions.length) return [...allowedActions].reverse();\n\t\treturn allowedActions;\n\t}, [currentStep]);\n\n\t// Update step mutation\n\tconst showSnackBar = useSnackBar();\n\tconst [updateStep, { loading }] = useMutation(gql(updateOfferStep), {\n\t\tonCompleted: (data: { updateOfferStep: TOffer | null }) => {\n\t\t\tif (_isEmpty(data) || _isEmpty(data.updateOfferStep)) return;\n\t\t\twindow.location.reload();\n\t\t},\n\t\tonError: (error: ApolloError) => {\n\t\t\tshowSnackBar({\n\t\t\t\tmessage: _get(error, 'message', 'Something went wrong'),\n\t\t\t\tvariant: 'alert',\n\t\t\t\talertSeverity: 'error',\n\t\t\t});\n\t\t},\n\t});\n\n\tconst updateStepById = (nextStep: number) => () =>\n\t\tupdateStep({\n\t\t\tvariables: { OfferId: offerId, NewStepId: nextStep },\n\t\t});\n\n\treturn (\n\t\t<>\n\t\t\t{(loading || loadingSteps) && <Loader />}\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t{actions.map((action: TAction) => (\n\t\t\t\t\t<ActionButton\n\t\t\t\t\t\tkey={`${offerId}-${action.next_step_id}`}\n\t\t\t\t\t\taction={action}\n\t\t\t\t\t\tonClick={updateStepById(action.next_step_id)}\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default OfferActions;\n","export const FILE_CONFIG = {\n\tsize: 5242880,\n\ttype: 'application/pdf',\n};\n","import {\n\tGrid,\n\tTable,\n\tTableBody,\n\tTableContainer,\n\tAlert,\n\tuseTheme,\n\tButton,\n\tStack,\n\tDivider,\n\tCardContent,\n\tCardActions,\n\tCircularProgress,\n} from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useQuery, gql } from '@apollo/client';\nimport { useEffect } from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { gridSpacing } from '../../../store/constant';\nimport { TOffer, TUploadFile } from '../../../types';\nimport { getOffer, getOfferDocPutUrls } from '../../../graphql/queries';\nimport Loader from '../../../ui-component/Loader';\nimport { getOfferPrice } from '../../../helpers/offer';\nimport TextRow from '../components/TextRow';\nimport UploadFile from '../components/UploadFile';\nimport OfferActions from './OfferActions';\nimport { FILE_CONFIG } from './config';\nimport { useUploadFiles } from '../../../hooks';\nimport config from '../../../config';\nimport { convertToFile } from '../../../helpers/file';\n\ntype Props = {\n\tid: string;\n};\n\nconst OfferEdit = ({ id }: Props) => {\n\tconst { loading, error, data } = useQuery(gql(getOffer), {\n\t\tvariables: { OfferId: id },\n\t});\n\n\tconst options = {\n\t\tname: 'getOfferDocPutUrls',\n\t\tquery: getOfferDocPutUrls,\n\t\tgenerateVariables: (files: TUploadFile[]) => ({\n\t\t\tDocuments: files,\n\t\t\tOfferId: id,\n\t\t\tDocumentType: 'SCAR',\n\t\t}),\n\t};\n\n\tconst {\n\t\tfiles: PAFiles,\n\t\tonFilesChange: onPAChange,\n\t\tuploadFiles: uploadPA,\n\t\tisUploadLoading: isPAUploading,\n\t} = useUploadFiles(options);\n\n\tconst {\n\t\tfiles: SCARFiles,\n\t\tonFilesChange: onSCARChange,\n\t\tuploadFiles: uploadSCAR,\n\t\tisUploadLoading: isSCARUploading,\n\t} = useUploadFiles(options);\n\n\tconst offer = _get(data, 'getOffer', {});\n\tconst currentStepId = +_get(offer, 'StepId', 0);\n\tconst offerNo = _get(offer, 'OfferNo', '');\n\tconst theme = useTheme();\n\n\tuseEffect(() => {\n\t\tconst offer = _get(data, 'getOffer', {});\n\t\tconst docPA = _get(offer, 'SignedPurchaseAgreement') || [];\n\t\tconst docSCAR = _get(offer, 'SCAR') || [];\n\t\tif (!_isEmpty(docPA)) onPAChange(docPA.map(convertToFile));\n\t\tif (!_isEmpty(docSCAR)) onPAChange(docSCAR.map(convertToFile));\n\t}, [data]);\n\n\tif (loading) return <Loader />;\n\n\tif (error && _isEmpty(offer)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tOffer not found\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst onUpdate = () => {\n\t\tuploadPA();\n\t\tuploadSCAR();\n\t};\n\n\tconst isShowPA = currentStepId === config.offerSteps.paBeingCreated;\n\tconst isShowSCAR = currentStepId === config.offerSteps.reviewScarRequest;\n\tconst isUploading = isPAUploading || isSCARUploading;\n\n\treturn (\n\t\t<MainCard\n\t\t\ttitle={offerNo}\n\t\t\tcontent={false}\n\t\t\tsecondary={<OfferActions offer={offer} />}\n\t\t>\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={gridSpacing}>\n\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t<SubCard title='Offer Information'>\n\t\t\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t'& td': {\n\t\t\t\t\t\t\t\t\t\t\tborderBottom: 'none',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer> data={offer} source='OfferNo' label='Offer No' />\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='PropertyData.FullAddress'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Property Address'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='PropertyData.OwnerNames'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Sellers'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tgetValue={getOfferPrice}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Offer Price'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.PurchaseType'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Funding'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.LoanType'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Loan Type'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.DownPayment'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Down Payment'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer> data={offer} source='Step.name' label='Status' />\n\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t<Grid container direction='column' spacing={gridSpacing}>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<SubCard title='Signed Purchase Agreement'>\n\t\t\t\t\t\t\t\t\t<UploadFile\n\t\t\t\t\t\t\t\t\t\tname='PA'\n\t\t\t\t\t\t\t\t\t\tfiles={PAFiles}\n\t\t\t\t\t\t\t\t\t\tonDrop={onPAChange}\n\t\t\t\t\t\t\t\t\t\taccept={FILE_CONFIG.type}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isShowPA}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<SubCard title='SCAR'>\n\t\t\t\t\t\t\t\t\t<UploadFile\n\t\t\t\t\t\t\t\t\t\tname='SCAR'\n\t\t\t\t\t\t\t\t\t\tfiles={SCARFiles}\n\t\t\t\t\t\t\t\t\t\tonDrop={onSCARChange}\n\t\t\t\t\t\t\t\t\t\taccept={FILE_CONFIG.type}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isShowSCAR}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Stack direction='row' justifyContent='flex-end'>\n\t\t\t\t\t\t<AnimateButton>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tdisabled={(!isShowPA && !isShowSCAR) || isUploading}\n\t\t\t\t\t\t\t\tonClick={onUpdate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isUploading ? (\n\t\t\t\t\t\t\t\t\t<CircularProgress size='1.5rem' color='secondary' />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t'Update'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</AnimateButton>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</MainCard>\n\t);\n};\n\nexport default OfferEdit;\n","import { useParams } from 'react-router-dom';\nimport OfferEdit from '../../application/offer/OfferEdit';\n\nconst EditPage = () => {\n\tconst { id } = useParams<{ id: string }>();\n\n\treturn <OfferEdit id={id} />;\n};\n\nexport default EditPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const approveProperty = /* GraphQL */ `\n  mutation ApproveProperty($PropertyId: ID!) {\n    approveProperty(PropertyId: $PropertyId) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createForm = /* GraphQL */ `\n  mutation CreateForm($Form: ModelFormInput!) {\n    createForm(Form: $Form) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createProperty = /* GraphQL */ `\n  mutation CreateProperty($SellerInfo: SellerInfoInput) {\n    createProperty(SellerInfo: $SellerInfo) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteForm = /* GraphQL */ `\n  mutation DeleteForm($FormId: ID!) {\n    deleteForm(FormId: $FormId) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteProperty = /* GraphQL */ `\n  mutation DeleteProperty($PropertyId: ID!) {\n    deleteProperty(PropertyId: $PropertyId) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const selectDataTreeProperty = /* GraphQL */ `\n  mutation SelectDataTreeProperty($DataTreePropertyId: Int!, $PropertyId: ID!) {\n    selectDataTreeProperty(\n      DataTreePropertyId: $DataTreePropertyId\n      PropertyId: $PropertyId\n    ) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateForm = /* GraphQL */ `\n  mutation UpdateForm($Form: ModelFormInput!, $FormId: ID!) {\n    updateForm(Form: $Form, FormId: $FormId) {\n      CategoryId\n      CreatedAt\n      CreatedBy\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateOfferStep = /* GraphQL */ `\n  mutation UpdateOfferStep($NewStepId: Int!, $OfferId: ID!) {\n    updateOfferStep(NewStepId: $NewStepId, OfferId: $OfferId) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        CounterOfferId\n        Forms\n        Position\n      }\n      CreatedAt\n      CreatedBy\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      SCAR {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      SignedPurchaseAgreement {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      Step {\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        name\n        waiting_seller_to_act\n      }\n      StepId\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updatePropertyData = /* GraphQL */ `\n  mutation UpdatePropertyData(\n    $ListPriceRange: ListPriceRangeInput\n    $PropertyId: ID!\n    $VestingType: VestingTypeInput\n    $YearBuilt: YearBuiltInput\n  ) {\n    updatePropertyData(\n      ListPriceRange: $ListPriceRange\n      PropertyId: $PropertyId\n      VestingType: $VestingType\n      YearBuilt: $YearBuilt\n    ) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      PropertyReport {\n        ObjectKey\n        PresignedUrl\n        UpdatedAt\n      }\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updatePropertyReportStatus = /* GraphQL */ `\n  mutation UpdatePropertyReportStatus(\n    $ReportStatus: ModelPropertyReportStatusInput!\n  ) {\n    updatePropertyReportStatus(ReportStatus: $ReportStatus) {\n      DTPropertyId\n      PropertyId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\nexport type ScaleProps = {\n\thover: number | string | undefined;\n\ttap: number | string | undefined;\n};\n\nexport interface AnimateButtonProps {\n\tchildren?: React.ReactNode;\n\ttype?: 'slide' | 'scale' | 'rotate';\n\tdirection?: 'up' | 'down' | 'left' | 'right';\n\toffset?: number;\n\tscale?: ScaleProps;\n}\n\n// -----------------------|| ANIMATION BUTTON ||-----------------------//\n\nconst AnimateButton = React.forwardRef(\n\t(\n\t\t{ children, type, direction, offset, scale }: AnimateButtonProps,\n\t\tref: Ref<HTMLDivElement>\n\t) => {\n\t\tlet offset1;\n\t\tlet offset2;\n\t\tswitch (direction) {\n\t\t\tcase 'up':\n\t\t\tcase 'left':\n\t\t\t\toffset1 = offset;\n\t\t\t\toffset2 = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\tcase 'down':\n\t\t\tdefault:\n\t\t\t\toffset1 = 0;\n\t\t\t\toffset2 = offset;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst [x, cycleX] = useCycle(offset1, offset2);\n\t\tconst [y, cycleY] = useCycle(offset1, offset2);\n\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ rotate: 360 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\t\t\trepeatType: 'loop',\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\trepeatDelay: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t\tcase 'slide':\n\t\t\t\tif (direction === 'up' || direction === 'down') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tanimate={{ y: y !== undefined ? y : '' }}\n\t\t\t\t\t\t\tonHoverEnd={() => cycleY()}\n\t\t\t\t\t\t\tonHoverStart={() => cycleY()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ x: x !== undefined ? x : '' }}\n\t\t\t\t\t\tonHoverEnd={() => cycleX()}\n\t\t\t\t\t\tonHoverStart={() => cycleX()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\n\t\t\tcase 'scale':\n\t\t\tdefault:\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\twhileHover={{ scale: scale?.hover }}\n\t\t\t\t\t\twhileTap={{ scale: scale?.tap }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t}\n\t}\n);\n\nAnimateButton.defaultProps = {\n\ttype: 'scale',\n\toffset: 10,\n\tdirection: 'right',\n\tscale: {\n\t\thover: 1,\n\t\ttap: 0.9,\n\t},\n};\n\nexport default AnimateButton;\n","import _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { TOffer } from '../types';\nimport config from '../config';\nimport { formatCurrency } from './currency';\n\nconst { offerSteps } = config;\n\nexport const getOfferPrice = (offer: TOffer): string => {\n\tlet price;\n\n\tif (+_get(offer, ['Step', 'id']) === offerSteps.counteredBySeller)\n\t\tprice = _get(offer, ['CounterOffer', 'SellerCounter', 'OfferPrice']);\n\telse price = _get(offer, ['CounterOffer', 'BuyerCounter', 'OfferPrice']);\n\n\treturn price ? formatCurrency(price) : '';\n};\n\nexport const isOfferActionStep = (offer: TOffer, expectationStep: number) =>\n\t_get(offer, 'step.id') === expectationStep;\n\nexport const isDocumentExits = (offer: TOffer, type: string): boolean =>\n\t!_isEmpty(_get(offer, type));\n","import config from '../config';\n\nexport const formatCurrency = (value: number | bigint): string => `${\n    value\n      ? new Intl.NumberFormat(config.locate.country, {\n          style: 'currency',\n          currency: config.locate.currency,\n        }).format(value)\n      : ''\n  }`;\n","import { ReactNode } from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tDivider,\n\tTypography,\n} from '@material-ui/core';\n\nexport interface SubCardProps {\n\tchildren: ReactNode | string | null;\n\tcontent?: boolean;\n\tclassName?: string;\n\tcontentClass?: string;\n\tdarkTitle?: boolean;\n\tsecondary?: ReactNode | string | {};\n\tsx?: {};\n\ttitle?: ReactNode | string | {};\n}\n\n// -----------------------|| CUSTOM SUB CARD ||-----------------------//\n\nconst SubCard = ({\n\tchildren,\n\tcontent,\n\tcontentClass,\n\tdarkTitle,\n\tsecondary,\n\tsx = {},\n\ttitle,\n\t...others\n}: SubCardProps) => {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tborder: '1px solid',\n\t\t\t\tborderColor:\n\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t':hover': {\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t? '0 2px 14px 0 rgb(33 150 243 / 10%)'\n\t\t\t\t\t\t\t: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n\t\t\t\t},\n\t\t\t\t...sx,\n\t\t\t}}\n\t\t\t{...others}\n\t\t>\n\t\t\t{/* card header and action */}\n\t\t\t{!darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h5'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h4'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* content & header divider */}\n\t\t\t{title && (\n\t\t\t\t<Divider\n\t\t\t\t\tsx={{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* card content */}\n\t\t\t{content && (\n\t\t\t\t<CardContent sx={{ p: 2.5 }} className={contentClass || ''}>\n\t\t\t\t\t{children}\n\t\t\t\t</CardContent>\n\t\t\t)}\n\t\t\t{!content && children}\n\t\t</Card>\n\t);\n};\n\nSubCard.defaultProps = {\n\tcontent: true,\n};\n\nexport default SubCard;\n","import _get from 'lodash.get';\nimport { TableRow, TableCell } from '@material-ui/core';\n\ntype TextRowProps<T> = {\n\tdata: T;\n\tsource?: string;\n\tlabel: string;\n\tgetValue?: (d: T) => string;\n};\n\nfunction TextRow<T>({ data, source = '', label, getValue }: TextRowProps<T>) {\n\treturn (\n\t\t<TableRow>\n\t\t\t<TableCell variant='head'>{label}</TableCell>\n\t\t\t<TableCell>{getValue ? getValue(data) : _get(data, source, '')}</TableCell>\n\t\t</TableRow>\n\t);\n}\n\nexport default TextRow;\n","import { Grid, CardMedia, Fab, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/styles';\nimport { TFile } from '../../../../types';\n\nconst useStyles = makeStyles(() => ({\n\tuploadImage: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\twidth: '100%',\n\t\tminHeight: '100px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n\timageHover: {\n\t\tposition: 'absolute',\n\t\topacity: 0,\n\t\tzIndex: -1,\n\t\tleft: '0',\n\t\ttop: '0',\n\t\tbackground: 'rgba(255, 255, 255, .8)',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tdisplay: 'inline-flex',\n\t\ttransition: 'all 0.3s ease',\n\t},\n\tremoveButton: {\n\t\tmargin: 'auto',\n\t},\n\tname: {\n\t\tpadding: '12px 0',\n\t\tmarginBottom: '12px',\n\t\tposition: 'relative',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n}));\n\ntype Props = {\n\tfile: TFile;\n\tonRemove: Function;\n};\n\nconst Preview = (props: Props) => {\n\tconst { file, onRemove } = props;\n\tconst classes = useStyles();\n\n\treturn file.preview ? (\n\t\t<Grid item xs={12} md={6} lg={4} alignContent='center' alignItems='center'>\n\t\t\t<div className={classes.uploadImage}>\n\t\t\t\t<CardMedia component='img' src={file.preview} title='file' />\n\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tclassName={classes.removeButton}\n\t\t\t\t\t\tonClick={() => onRemove()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</Fab>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Grid>\n\t) : (\n\t\t<Grid item xs={12} alignContent='center' alignItems='center'>\n\t\t\t<div className={classes.name}>\n\t\t\t\t<Typography>{file.name}</Typography>\n\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tclassName={classes.removeButton}\n\t\t\t\t\t\tonClick={() => onRemove()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</Fab>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Grid>\n\t);\n};\n\nexport default Preview;\n","import { Grid, InputLabel, Button } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useEffect } from 'react';\nimport Preview from './Preview';\nimport { useSnackBar } from '../../../../hooks';\nimport { TFile } from '../../../../types';\n\nconst useStyles = makeStyles(() => ({\n\tfileInput: {\n\t\tbackground: '#fcfcfe',\n\t\twidth: '100%',\n\t\tmarginBottom: '12px',\n\t\tborderWidth: 2,\n\t\tborderRadius: 2,\n\t\tborderColor: '#eee',\n\t\tborderStyle: 'dashed',\n\t},\n\tactiveStyle: {\n\t\tborderColor: '#2196f3',\n\t},\n\tfileContainer: {\n\t\tpadding: '30px 0',\n\t\ttextAlign: 'center',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t},\n\tuploadImage: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\twidth: '100%',\n\t\tminHeight: '100px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n\timageHover: {\n\t\tposition: 'absolute',\n\t\topacity: 0,\n\t\tzIndex: -1,\n\t\tleft: '0',\n\t\ttop: '0',\n\t\tbackground: 'rgba(255, 255, 255, .8)',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tdisplay: 'inline-flex',\n\t\ttransition: 'all 0.3s ease',\n\t},\n\tremoveButton: {\n\t\tmargin: 'auto',\n\t},\n}));\n\ntype Props = {\n\tfiles: TFile[];\n\taccept?: string;\n\tmaxFiles?: number;\n\tdisabled?: boolean;\n\tname?: string;\n\tonDrop: (files: TFile[]) => void;\n};\n\nconst UploadFile = (props: Props) => {\n\tconst {\n\t\tfiles,\n\t\taccept = 'image/*',\n\t\tmaxFiles = 10,\n\t\tonDrop,\n\t\tdisabled,\n\t\tname,\n\t} = props;\n\tconst classes = useStyles();\n\tconst { getRootProps, getInputProps, isDragActive, fileRejections } =\n\t\tuseDropzone({\n\t\t\tonDrop,\n\t\t\taccept,\n\t\t\tmaxFiles,\n\t\t});\n\tconst showSnackBar = useSnackBar();\n\n\tuseEffect(() => {\n\t\tif (_isEmpty(fileRejections)) return;\n\t\tconst message = _get(fileRejections, '0.errors.0.message', '');\n\t\tshowSnackBar({\n\t\t\tmessage,\n\t\t\tvariant: 'alert',\n\t\t\talertSeverity: 'error',\n\t\t});\n\t}, [fileRejections]);\n\n\tconst removeAt = (index: number) => () => {\n\t\tconst newFiles = [...files];\n\t\tnewFiles.splice(index, 1);\n\t\tonDrop(newFiles);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\t{...getRootProps({\n\t\t\t\t\tclassName: clsx(classes.fileInput, {\n\t\t\t\t\t\t[classes.activeStyle]: isDragActive,\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t<InputLabel className={classes.fileContainer}>\n\t\t\t\t\t<CloudUploadIcon />\n\t\t\t\t\tDrop file here to upload\n\t\t\t\t</InputLabel>\n\t\t\t</Button>\n\t\t\t<input {...getInputProps()} name={name}/>\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t{files.map((file, index) => (\n\t\t\t\t\t<Preview file={file} key={file.name} onRemove={removeAt(index)} />\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default UploadFile;\n"],"sourceRoot":""}