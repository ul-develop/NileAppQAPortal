{"version":3,"sources":["views/application/property/components/Calendar/Scheduler/IntegratedDates.tsx","views/application/property/components/Calendar/Scheduler/TooltipContent.tsx","views/application/property/components/Calendar/Scheduler/Appointment.tsx","views/application/property/components/Calendar/Scheduler/TimeTableCell.tsx","views/application/property/components/Calendar/Scheduler/SelectedCells.tsx","views/application/property/components/Calendar/Scheduler/DayScaleCell.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/constants.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/helpers.ts","views/application/property/components/Calendar/Scheduler/BookingForm/AppointmentData.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/RepeatSection.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/BookingForm.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/BasicLayout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/Overlay.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/Layout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/CommandLayout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/AppointmentForm.tsx","views/application/property/components/Calendar/Scheduler/AppointmentContainer.tsx","views/application/property/components/Calendar/Scheduler/Scheduler.tsx"],"names":["IntegratedDates","dispatch","useDispatch","name","computed","startViewDate","setStartOfWeek","endViewDate","setEndOfWeek","useStyles","makeStyles","theme","wrapper","padding","spacing","paddingTop","section","marginBottom","TooltipContent","appointmentData","classes","formatTime","displayDate","displayTime","Paper","className","Typography","variant","color","_get","AccessTime","appointment","zIndex","speedDial","backgroundColor","palette","primary","main","busy","Appointment","children","restProps","data","clsx","isBusyAppointment","cell","mobileStepper","disableCell","background","action","disabledBackground","backgroundSize","pointerEvents","TimeTableCell","props","timeConfig","useSelector","state","dateString","startDate","onDoubleClick","id","toString","onMouseDown","event","preventDefault","beginSelectingCell","onMouseEnter","addSelectedCell","onMouseUp","isCellActive","config","CELL_CLASS","memo","cells","width","position","left","light","SelectedCells","selectingCells","slotLengthMinutes","cellsProps","getCellsProp","_isEmpty","target","classList","contains","isElementContains","OVERLAY_ID","DATE_PICKER_ID","startCell","document","getElementById","dispatchEvent","Event","bubbles","React","window","addEventListener","removeEventListener","style","structuredSelector","createStructuredSelector","connect","display","textAlign","today","alpha","DayScaleCell","selectingDate","hasSelectingCells","isSelecting","moment","format","DATE_FORMAT","Box","component","sx","TYPES","DATE_PICKER_FORMAT","defaultValues","REPEAT_TYPE","generateSellerValues","property","questions","times","date","formatCells","start","address","email","Auth","reduce","acc","code","type","appointmentType","undefined","generateInitialValues","FNAME","EMAIL","repeat","repeatType","endDate","prepareQuestionsAnswers","values","map","string","filter","prepareSellerBookings","busyAppointmentType","appointmentTypes","find","toLowerCase","BUSY_APPOINTMENT_NAME","getBusyAppointmentType","bookingRange","endCell","startMinutes","toMinutes","endMinutes","duration","Math","abs","Array","from","_","i","startsAt","add","generateBookingRange","title","tentative","timeZone","tz","guess","cancelled","units","services","answers","mStartDate","diff","module","floor","bookings","day","mDay","bookingsInDay","getErrorMessages","bookingDates","booking","join","message","typography","h4","grey","AppointmentData","end","displayStart","displayEnd","mt","RepeatSection","useFormikContext","handleChange","setFieldValue","handleDateChange","field","FormControlLabel","control","Switch","checked","onChange","label","Collapse","in","RadioGroup","value","Radio","mb","LocalizationProvider","dateAdapter","MomentUtils","Grid","container","justifyContent","item","xs","DesktopDatePicker","inputFormat","Date","renderInput","helperText","TextField","PopperProps","BookingForm","onSave","profileId","isLoading","initialValues","onSubmit","a","setIsLoading","BookingsService","createBookings","errors","setError","addAppointments","flexDirection","Divider","my","Button","disableElevation","fullWidth","disabled","BasicLayout","root","alignItems","content","appBar","Overlay","visible","onHide","Modal","onClose","stopSelectingCell","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","open","Fade","layout","common","white","minWidth","overflow","maxHeight","Layout","basicLayoutComponent","CommandLayout","commandLayoutComponent","RecurrenceLayout","recurrenceLayoutComponent","onCommitButtonClick","isSaving","setIsSaving","useEffect","AppointmentForm","useState","BasicLayoutComponent","connectProps","CommandLayoutComponent","layoutComponent","overlayComponent","AppointmentContainer","Scheduler","appointments","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","DEFAULT_DURATION","onCommitChanges","appointmentComponent","containerComponent","showCloseButton","contentComponent"],"mappings":"gPA4BeA,EAvBS,WACvB,IAAMC,EAAWC,cAEjB,OACC,eAAC,IAAD,CAAQC,KAAK,kBAAb,UACC,cAAC,IAAD,CACCA,KAAK,gBACLC,SAAU,YAAwB,IAArBC,EAAoB,EAApBA,cAEZ,OADAJ,EAASK,YAAeD,IACjBA,KAGT,cAAC,IAAD,CACCF,KAAK,cACLC,SAAU,YAAsB,IAAnBG,EAAkB,EAAlBA,YAEZ,OADAN,EAASO,YAAaD,IACfA,S,+CCTNE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,QAAS,CACRC,QAASF,EAAMG,QAAQ,GACvBC,WAAY,GAEbC,QAAS,CACRC,aAAcN,EAAMG,QAAQ,QA8BfI,EA1BQ,SAAC,GAEgB,IADvCC,EACsC,EADtCA,gBAEMC,EAAUX,IAChB,EAAqCY,YACpCF,GADOG,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAIrB,OACC,eAACC,EAAA,EAAD,CAAOC,UAAWL,EAAQR,QAA1B,UACC,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUH,UAAWL,EAAQJ,QAA5D,SACEa,IAAKV,EAAiB,QAAS,MAEjC,qBAAKM,UAAWL,EAAQJ,QAAxB,SACC,eAACU,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACC,cAAC,IAAD,IADD,IACgBL,OAGjB,8BACC,eAACI,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACC,cAACG,EAAA,EAAD,IADD,IACqBP,W,+CCnCnBd,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCoB,YAAa,CACZC,OAAQrB,EAAMqB,OAAOC,UACrBC,gBAAiBvB,EAAMwB,QAAQC,QAAQC,KACvC,UAAW,CACVH,gBAAiBvB,EAAMwB,QAAQC,QAAQC,OAGzCC,KAAM,CACLJ,gBAAiB,UACjB,UAAW,CACVA,gBAAiB,gBAwBLK,EAnBK,SAAC,GAGiB,IAFrCC,EAEoC,EAFpCA,SACGC,EACiC,iBAC5BC,EAASD,EAATC,KACFtB,EAAUX,IAEhB,OACC,cAAC,IAAa8B,YAAd,2BACKE,GADL,IAEChB,UAAWkB,YAAKvB,EAAQW,YAAT,eACbX,EAAQkB,KAAOM,YAAkBF,KAHpC,SAMEF,M,gCC5BE/B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCkC,KAAM,CACLb,OAAQrB,EAAMqB,OAAOc,eAEtBC,YAAa,CACZC,WAAW,0BAAD,OAA4BrC,EAAMwB,QAAQc,OAAOC,mBAAjD,gDAA2GvC,EAAMwB,QAAQc,OAAOC,mBAAhI,gBAA0JvC,EAAMwB,QAAQc,OAAOC,mBAA/K,qCACVC,eAAgB,UAChBC,cAAe,YAIXC,EAAgB,SAACC,GACtB,IAAMlC,EAAUX,IACV8C,EAAaC,aAAY,SAAAC,GAAK,OAAI5B,IAAK4B,EAAO,CAAC,WAAY,cAC9CC,EAA4CJ,EAAvDK,UAAuBC,EAAgCN,EAAhCM,cAAkBnB,EAAjD,YAA+Da,EAA/D,GACMrD,EAAWC,cAiBjB,OACC,cAAC,IAASmD,cAAV,2BACKZ,GADL,IAECkB,UAAWD,EACXG,IAAc,OAAVH,QAAU,IAAVA,OAAA,EAAAA,EAAYI,aAAc,GAC9BC,YApBkB,SAACC,GACpBA,EAAMC,iBACNhE,EAASiE,YAAmBR,KAmB3BS,aAhBmB,SAACH,GACrBA,EAAMC,iBACNhE,EAASmE,YAAgBV,KAexBW,UAZgB,SAACL,GAClBA,EAAMC,iBACFL,GAAeA,EAAcI,IAWhCvC,UAAWkB,YACVvB,EAAQyB,KADM,eAGZzB,EAAQ2B,aAAeuB,YAAa,CACpCZ,aACAa,OAAQhB,KAGViB,SAMWC,iBAAKpB,G,2CChDd5C,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtC+D,MAAO,CACNC,MAAO,OACPC,SAAU,WACVC,KAAM,EACN7B,WAAYrC,EAAMwB,QAAQC,QAAQ0C,WAS9BC,EAAgB,SAACzB,GACtB,IAAMlC,EAAUX,IACRuE,EAAsC1B,EAAtC0B,eAAgBC,EAAsB3B,EAAtB2B,kBAClBC,EAAaC,YAAaH,EAAgBC,GAE1CZ,EAAY,SAACL,GAElB,GADAA,EAAMC,kBACFmB,IAASJ,GAAb,CAEA,IAAQK,EAAWrB,EAAXqB,OAER,IAAKA,EAAuBC,UAAUC,SAASf,OAC3CgB,YAAkBC,IAAYJ,KAC9BG,YAAkBE,IAAgBL,GAAtC,CAEA,IAAQM,EAAcX,EAAdW,UACF9C,EAAO+C,SAASC,eAAeF,EAAU7B,YAC3CjB,GACHA,EAAKiD,cAAc,IAAIC,MAAM,UAAW,CAAEC,SAAS,QAWrD,OAPAC,aAAgB,WAEf,OADAC,OAAOC,iBAAiB,UAAW9B,GAC5B,WACN6B,OAAOE,oBAAoB,UAAW/B,MAErC,IAEI,qBAAK5C,UAAWL,EAAQsD,MAAO2B,MAAOnB,KAGxCoB,EAAqBC,YAAyB,CACnDvB,eAAgB,SAAAvB,GAAK,OAAI5B,IAAK4B,EAAO,4BACrCwB,kBAAmB,SAAAxB,GAAK,OACvB5B,IAAK4B,EAAO,8CAGC+C,cAAQF,EAARE,CAA4BP,OAAWlB,ICvDhDtE,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCkC,KAAM,CACL,KAAM,CACLhC,QAASF,EAAMG,QAAQ,EAAG,GAC1B6D,MAAO,OACP8B,QAAS,QACTC,UAAW,WAGbC,MAAO,CACNzE,gBAAiB0E,YAAMjG,EAAMwB,QAAQC,QAAQC,KAAM,UAS/CwE,EAAe,SAACvD,GACrB,IAAMlC,EAAUX,IACRkG,EAAiDrD,EAAjDqD,MAAOhD,EAA0CL,EAA1CK,UAAWmD,EAA+BxD,EAA/BwD,cACpBC,EADmDzD,EAAhB0D,aAEzBF,IAAkBG,IAAOtD,GAAWuD,OAAOC,KAE3D,OACC,eAACC,EAAA,EAAD,CACCC,UAAU,KACVC,GAAI,CACHb,QAAS,aACT7B,SAAU,WACVD,MAAO,QALT,UAQC,cAAC,IAASkC,aAAV,2BACKvD,GADL,IAEC7B,UAAWkB,YAAKvB,EAAQyB,KAAT,eACbzB,EAAQuF,MAAQA,OAGlBI,GAAqB,cAAC,EAAD,QAKnBT,EAAqBC,YAAyB,CACnDO,cAAe,SAAArD,GAAK,OAAI5B,IAAK4B,EAAO,iCACpCuD,YAAa,SAAAvD,GAAK,OAAI5B,IAAK4B,EAAO,2BAGpB+C,cAAQF,EAARE,CAA4BP,OAAWY,I,iFC9DzCU,I,OACJ,UADIA,GAEF,WAFEA,GAGI,iBCUJC,GAAqB,aAG5BC,IAAa,mBACjBF,GAAe,IADE,cAEjBA,IAAiB,GAFA,cAGjBA,GAAuB,IAHN,GAMbG,GACE,QADFA,GAEG,SA2BIC,GAAuB,SAAC,GAIjB,IAHnBC,EAGkB,EAHlBA,SACA5C,EAEkB,EAFlBA,eACAT,EACkB,EADlBA,OAGCsD,EAEGtD,EAFHsD,UACS5C,EACNV,EADHuD,MAAS7C,kBAGJ8C,EADYC,YAAYhD,EAAgBC,GAAtCgD,MACWf,OAAOM,IACpBU,EAAUrG,IAAK+F,EAAU,2BAA4B,IACrDO,EAAQtG,IAAKuG,KAAM,CAAC,OAAQ,aAAc,SAAU,IAC1D,OAAO,2BArC6B,SAACP,GAAD,OACpCA,EAAUQ,QACT,SAACC,EAAD,OAAQC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAd,mBAAC,eAA8BF,GAA/B,kBAAqCC,EAAOd,GAAce,OAC1D,CACCC,qBAAiBC,IAkCfC,CAAsBd,IAD1B,IAECe,MAAOV,EACPW,MAAOV,EACPW,QAAQ,EACRC,WAAYrB,GACZ/D,UAAWoE,EACXiB,QAASjB,KAILkB,GAA0B,SAACpB,EAAwBqB,GAAzB,OAC/BrB,EACEsB,KAAI,gBAAGZ,EAAH,EAAGA,KAAH,MAAe,CAAEA,OAAMa,OAAQF,EAAOX,OAC1Cc,QAAO,qBAAGD,WASAE,GAAwB,SAAC,GAIhB,IAHrBtE,EAGoB,EAHpBA,eACAkE,EAEoB,EAFpBA,OACA3E,EACoB,EADpBA,OAGCsD,EAEGtD,EAFHsD,UACS5C,EACNV,EADHuD,MAAS7C,kBAEF6D,EAA2CI,EAA3CJ,OAAQC,EAAmCG,EAAnCH,WAAYpF,EAAuBuF,EAAvBvF,UAAWqF,EAAYE,EAAZF,QAEjCO,EAlB+B,SACrCC,GADqC,OAGrCA,EAAiBC,MAChB,SAAAjB,GAAI,OAAI3G,IAAK2G,EAAM,OAAQ,IAAIkB,gBAAkBC,OActBC,CADH/H,IAAK0C,EAAQ,iBAAkB,KAElDsF,EAhEsB,SAC5B7E,EACAC,GAEA,IAAQU,EAAuBX,EAAvBW,UAAWmE,EAAY9E,EAAZ8E,QACX7B,EAAUD,YAAYhD,EAAgBC,GAAtCgD,MACF8B,EAAeC,YAAUrE,GACzBsE,EAAaD,YAAUF,GACvBI,EAAWC,KAAKC,KAAKL,EAAeE,GAAchF,GAAqB,EAC7E,OAAOoF,MAAMC,KAAKD,MAAMH,IAAW,SAACK,EAAGC,GAAJ,MAAW,CAC7CC,SAAUxD,IAAOgB,GACfyC,IAAIF,EAAIvF,EAAmB,KAC3BiC,OArCmB,2BAyFDyD,CAAqB3F,EAAgBC,GAE1D,IAAK6D,EACJ,OAAOe,EAAaV,KAAI,kBAAmB,CAC1CsB,SADuB,EAAGA,SAE1BG,MAAOjB,IACPkB,UAAW,WACXC,SAAU7D,IAAO8D,GAAGC,QACpBC,WAAW,EACXC,MAAO,EACPC,SAAU,CAAC5B,GACX6B,QAASnC,GAAwBpB,EAAWqB,OAG9C,IAAMmC,EAAapE,IAAOtD,GAEpB2H,EADWrE,IAAO+B,GACFsC,KAAKD,EAAY,OACjCE,EAASxC,IAAerB,GAtGb,EAsG8C,EAwB/D,OAtBa2C,MAAMC,KAClBD,MAAMF,KAAKqB,MAAMF,EAAOC,GAAU,IAClC,SAAChB,EAAGC,GAAJ,OAAUA,EAAIe,KAGUlD,QAAO,SAACoD,EAAiBC,GACjD,IAAMC,EAAO1E,IAAOtD,GAAW+G,IAAIgB,EAAK,OAClCE,EAAgB/B,EAAaV,KAAI,gBAAGsB,EAAH,EAAGA,SAAH,MAAmB,CACzDG,MAAOjB,IACPc,SAAS,GAAD,OAAKkB,EAAKzE,OApHO,cAoHjB,YAAyCD,IAAOwD,GAAUvD,OAnHzC,aAsHzB2D,UAAW,WACXC,SAAU7D,IAAO8D,GAAGC,QACpBC,WAAW,EACXC,MAAO,EACPC,SAAU,CAAC5B,GACX6B,QAASnC,GAAwBpB,EAAWqB,OAG7C,MAAM,GAAN,oBAAWuC,GAAX,aAAwBG,MACtB,KAISC,GAAmB,SAACJ,GAChC,IAAMK,EAAeL,EACnBtC,KAAI,SAAA4C,GAAO,OAAIlK,IAAKkK,EAAS,eAC7BC,KAAK,MACP,MAAO,CAAEC,QAAQ,yBAAD,OAA2BH,KC1ItCrL,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCC,QAAQ,2BACJD,EAAMuL,WAAWC,IADd,IAENtL,QAASF,EAAMG,QAAQ,EAAG,GAC1BoB,gBAAiBvB,EAAMwB,QAAQiK,KAAK,KACpC1F,UAAW,eASP2F,GAAkB,SAAC,GAAkD,IAAhDrH,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,kBACpC7D,EAAUX,KAChB,GAAI2E,IAASJ,GAAiB,OAAO,wBACrC,IAAQ+C,EAAS/C,EAAT+C,KACR,EAAuBC,YAAYhD,EAAgBC,GAA3CgD,EAAR,EAAQA,MAAOqE,EAAf,EAAeA,IACTC,EAAehL,YAAY0G,GAC3BuE,EAAajL,YAAY+K,GAE/B,OACC,sBAAK7K,UAAWL,EAAQR,QAAxB,UACC,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BL,YAAYyG,KACtC,cAACX,EAAA,EAAD,CAAKE,GAAI,CAAEmF,GAAI,GAAf,SACC,eAAC/K,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACE4K,EADF,MACmBC,WAOjBlG,GAAqBC,YAAyB,CACnDvB,eAAgB,SAAAvB,GAAK,OAAI5B,IAAK4B,EAAO,4BACrCwB,kBAAmB,SAAAxB,GAAK,OACvB5B,IAAK4B,EAAO,8CAGC+C,eAAQF,GAARE,CAA4B/B,eAAK4H,K,0JC/BnCK,GAAgB,WAC5B,MAAgDC,eAAxCzD,EAAR,EAAQA,OAAQ0D,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,cAExBC,EAAmB,SAACC,GAAD,OAAmB,SAAChF,GAC5C8E,EAAcE,EAAO9F,IAAOc,GAAMb,OAAOM,OAGpCsB,EAASjH,IAAKqH,EAAQ,UACtBH,EAAalH,IAAKqH,EAAQ,cAC1BvF,EAAY9B,IAAKqH,EAAQ,aACzBF,EAAUnH,IAAKqH,EAAQ,WAE7B,OACC,gCACC,cAAC8D,GAAA,EAAD,CACCC,QACC,cAACC,GAAA,EAAD,CACC/M,KAAK,SACLgN,QAASrE,EACTsE,SAAUR,EACVhL,MAAM,YAGRyL,MAAM,WAGP,eAACC,GAAA,EAAD,CAAUC,GAAIzE,EAAd,UACC,8BACC,eAAC0E,GAAA,EAAD,CAAYrN,KAAK,aAAasN,MAAO1E,EAAYqE,SAAUR,EAA3D,UACC,cAACI,GAAA,EAAD,CACCS,MAAM,QACNR,QAAS,cAACS,GAAA,EAAD,CAAO9L,MAAM,YACtByL,MAAM,UAEP,cAACL,GAAA,EAAD,CACCS,MAAM,SACNR,QAAS,cAACS,GAAA,EAAD,CAAO9L,MAAM,YACtByL,MAAM,gBAIT,cAACjG,EAAA,EAAD,CAAKE,GAAI,CAAEmF,GAAI,EAAGkB,GAAI,GAAtB,SACC,cAACC,GAAA,EAAD,CAAsBC,YAAaC,KAAnC,SACC,eAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,gBAA/B,UACC,cAACF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC,cAACC,GAAA,EAAD,CACCf,MAAM,aACNgB,YAAa7G,GACbiG,MAAO,IAAIa,KAAK3K,GAChByJ,SAAUN,EAAiB,aAE3ByB,YAAa,cAAGC,WAAH,IAAkB/L,EAAlB,yBACZ,cAACgM,GAAA,EAAD,eAAehM,KAEhBiM,YAAa,CAAE7K,GAAI6B,SAGrB,cAACqI,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACC,cAACC,GAAA,EAAD,CACCf,MAAM,WACNgB,YAAa7G,GACbiG,MAAO,IAAIa,KAAKtF,GAChBoE,SAAUN,EAAiB,WAE3ByB,YAAa,cAAGC,WAAH,IAAkB/L,EAAlB,yBACZ,cAACgM,GAAA,EAAD,eAAehM,KAEhBiM,YAAa,CAAE7K,GAAI6B,uBCJbiJ,GA9DK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAChB3O,EAAWC,cACX0H,EAAWpE,aAAY,SAAAC,GAAK,OAAI5B,IAAK4B,EAAO,CAAC,WAAY,gBACzDoL,EAAYhN,IAAK+F,EAAU,gCAC3BrD,EAASf,aAAY,SAAAC,GAAK,OAAI5B,IAAK4B,EAAO,CAAC,WAAY,cACvDqL,EAAYtL,aAAY,SAAAC,GAAK,OAAI5B,IAAK4B,EAAO,CAAC,WAAY,iBAC1DuB,EAAiBxB,aAAY,SAAAC,GAAK,OACvC5B,IAAK4B,EAAO,CAAC,WAAY,sBAE1B,GAAI2B,IAASJ,GAAiB,OAAO,cAACoC,EAAA,EAAD,IAErC,IAAM2H,EAAgBpH,GAAqB,CAC1CC,WACA5C,iBACAT,WAGKyK,EAAQ,uCAAG,WAAO9F,GAAP,qBAAA+F,EAAA,6DAChBhP,EAASiP,aAAa,IADN,SAGTxM,EAAO4G,GAAsB,CAAEtE,iBAAgBkE,SAAQ3E,WAH9C,SAIoB4K,KAAgBC,eAAe,CACjEP,YACAnM,SANc,gBAIP+I,EAJO,EAIPA,SAAU4D,EAJH,EAIGA,OAIbjK,IAASiK,IAASpP,EAASqP,YAASzD,GAAiBwD,KAC1DpP,EAASsP,YAAgB9D,IACzBmD,IAVe,kDAYf3O,EAASqP,YAAS,EAAD,KAZF,QAchBrP,EAASiP,aAAa,IAdN,0DAAH,sDAiBd,OACC,cAAC9H,EAAA,EAAD,CAAKE,GAAI,CAAEb,QAAS,OAAQ+I,cAAe,UAA3C,SACC,cAAC,KAAD,CAAQT,cAAeA,EAAeC,SAAUA,EAAhD,SACC,eAAC,KAAD,WACC,cAAC5H,EAAA,EAAD,CAAKE,GAAI,CAAEqG,GAAI,GAAf,SACC,cAACjM,EAAA,EAAD,CAAYC,QAAQ,KAApB,qCAED,cAAC,GAAD,IACA,cAAC8N,EAAA,EAAD,IACA,cAACrI,EAAA,EAAD,CAAKE,GAAI,CAAEoI,GAAI,GAAf,SACC,cAAC,GAAD,MAED,cAACC,GAAA,EAAD,CACCnH,KAAK,SACL5G,MAAM,UACNgO,kBAAgB,EAChBC,WAAS,EACTlO,QAAQ,YACRmO,SAAUhB,EANX,qCChDUiB,GAVY,SAACzM,GAC3B,IAAQsL,EAAWtL,EAAXsL,OAER,OACC,cAAC,GAAD,CACCA,OAAQA,K,iECFLnO,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCqP,KAAM,CACLvJ,QAAS,OACTwJ,WAAY,SACZhC,eAAgB,UAEjBiC,QAAS,CACRlO,OAAQrB,EAAMqB,OAAOmO,YAIVC,GAAU,SAAC,GAA+E,IAA7E5N,EAA4E,EAA5EA,SAAU6N,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,OAAW7N,EAA8C,kBAC/FrB,EAAUX,KACVR,EAAWC,cAOjB,OACC,cAACqQ,GAAA,EAAD,yBACC1M,GAAI4B,IACJhE,UAAWL,EAAQ4O,KACnBQ,QATc,WACfF,IACArQ,EAASwQ,gBAQRC,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACdC,QAAS,KAEVC,KAAMV,GACF5N,GAVL,aAYC,cAACuO,GAAA,EAAD,CAAMzD,GAAI8C,EAAV,SACC,qBAAK5O,UAAWL,EAAQ8O,QAAxB,SAAkC1N,U,4FCxChC/B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACtCsQ,OAAQ,CACPjO,WAAYrC,EAAMwB,QAAQ+O,OAAOC,OAElCjB,QAAS,CACRrP,QAASF,EAAMG,QAAQ,GACvB6D,MAAO,OACPyM,SAAU,QACVC,SAAU,OACVC,UAAW,YAIAC,GAAS,SAACjO,GACtB,IACuByM,EAKnBzM,EALHkO,qBACwBC,EAIrBnO,EAJHoO,uBAC2BC,EAGxBrO,EAHHsO,0BACApP,EAEGc,EAFHd,SACGC,EALJ,YAMIa,EANJ,IAQMlC,EAAUX,KAEhB,OACC,8CAAKgB,UAAWL,EAAQ6P,QAAYxO,GAApC,cACC,cAACgP,EAAD,IACA,sBAAKhQ,UAAWL,EAAQ8O,QAAxB,UACC,cAACH,EAAD,IACA,cAAC4B,EAAD,OAEAnP,OC3BSiP,GAAgB,SAACnO,GAC7B,IAAQuO,EAA+CvO,EAA/CuO,oBAAqBC,EAA0BxO,EAA1BwO,SAAUC,EAAgBzO,EAAhByO,YASvC,OAPAC,qBAAU,WACLF,IACHD,IACAE,GAAY,MAEX,CAACD,IAEG,yBCPKG,GAAkB,WAC9B,MAAgCC,oBAAS,GAAzC,mBAAOJ,EAAP,KAAiBC,EAAjB,KACM9R,EAAWC,cACX0O,EAAS,WACdmD,GAAY,GACZ9R,EAASwQ,gBAEJ0B,EAAuBC,YAAarC,IAAa,iBAAO,CAC7DnB,aAGKyD,EAAyBD,YAAaX,IAAe,iBAAO,CACjEK,WACAC,kBAGD,OACC,cAAC,IAAD,CACCO,gBAAiBf,GACjBC,qBAAsBW,EACtBT,uBAAwBW,EACxBE,iBAAkBnC,M,wBCzBRoC,GAAuB,SAAC,GAAD,IACnCnM,EADmC,EACnCA,MACA7D,EAFmC,EAEnCA,SACGC,EAHgC,yBAKnC,6CAAK4D,MAAK,2BAAOA,GAAP,IAAcrE,OAAQ,QAAYS,GAA5C,aACED,MCoDYiQ,UArCG,SAAC,GAClB,IAD2C,EAAvB5D,UACJ,OAAO,KAEvB,IAAMtK,EAASf,aAAY,SAAAC,GAAK,OAAI5B,IAAK4B,EAAO,CAAC,WAAY,cACvDiP,EAAelP,aAAY,SAAAC,GAAK,OACrC5B,IAAK4B,EAAO,CAAC,WAAY,oBAK1B,OAAI2B,IAASb,GAAgB,6BAG5B,cAAC/C,EAAA,EAAD,CAAOmR,UAAW,EAAlB,SACC,eAAC,IAAD,CAAoBjQ,KAAMgQ,EAA1B,UACC,cAAC,IAAD,IACA,cAAC,IAAD,CACCE,uBAAwBvP,EACxBwP,sBAAuBhM,EACvBiM,aAAcjR,IAAK0C,EAAQ,sBAAwBwO,MAEpD,cAAC,IAAD,CAAcC,gBAbO,eAcrB,cAAC,EAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACCC,qBAAsB1Q,EACtB2Q,mBAAoBV,KAErB,cAAC,IAAD,CAAoBW,iBAAe,EAACC,iBAAkBlS,IACtD,cAAC,GAAD","file":"static/js/27.828fe17e.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { setEndOfWeek, setStartOfWeek } from '../redux/actions';\n\nconst IntegratedDates = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Plugin name='IntegratedDates'>\n\t\t\t<Getter\n\t\t\t\tname='startViewDate'\n\t\t\t\tcomputed={({ startViewDate }) => {\n\t\t\t\t\tdispatch(setStartOfWeek(startViewDate));\n\t\t\t\t\treturn startViewDate;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Getter\n\t\t\t\tname='endViewDate'\n\t\t\t\tcomputed={({ endViewDate }) => {\n\t\t\t\t\tdispatch(setEndOfWeek(endViewDate));\n\t\t\t\t\treturn endViewDate;\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Plugin>\n\t);\n};\n\nexport default IntegratedDates;\n","import Paper from '@material-ui/core/Paper';\nimport _get from 'lodash.get';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tAccessTime as AccessTimeIcon,\n\tEvent as EventIcon,\n} from '@material-ui/icons';\nimport { AppointmentTooltip } from '@devexpress/dx-react-scheduler-material-ui';\nimport { formatTime } from '../helpers';\nimport type { TAppointment } from '../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\twrapper: {\n\t\tpadding: theme.spacing(2),\n\t\tpaddingTop: 0,\n\t},\n\tsection: {\n\t\tmarginBottom: theme.spacing(1),\n\t},\n}));\n\nconst TooltipContent = ({\n\tappointmentData,\n}: AppointmentTooltip.ContentProps) => {\n\tconst classes = useStyles();\n\tconst { displayDate, displayTime } = formatTime(\n\t\tappointmentData as TAppointment\n\t);\n\n\treturn (\n\t\t<Paper className={classes.wrapper}>\n\t\t\t<Typography variant='h3' color='primary' className={classes.section}>\n\t\t\t\t{_get(appointmentData, 'title', '')}\n\t\t\t</Typography>\n\t\t\t<div className={classes.section}>\n\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t<EventIcon /> {displayDate}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t<AccessTimeIcon /> {displayTime}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</Paper>\n\t);\n};\nexport default TooltipContent;\n","import React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { isBusyAppointment } from '../helpers';\nimport type { TAppointment } from '../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\tappointment: {\n\t\tzIndex: theme.zIndex.speedDial,\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t},\n\t},\n\tbusy: {\n\t\tbackgroundColor: '#9e9e9e',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#9e9e9e',\n\t\t},\n\t},\n}));\n\nconst Appointment = ({\n\tchildren,\n\t...restProps\n}: Appointments.AppointmentProps) => {\n\tconst { data } = restProps;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Appointments.Appointment\n\t\t\t{...restProps}\n\t\t\tclassName={clsx(classes.appointment, {\n\t\t\t\t[classes.busy]: isBusyAppointment(data as TAppointment),\n\t\t\t})}\n\t\t>\n\t\t\t{children}\n\t\t</Appointments.Appointment>\n\t);\n};\n\nexport default Appointment;\n","import { memo } from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _get from 'lodash.get';\nimport { isCellActive, CELL_CLASS } from '../helpers';\nimport { beginSelectingCell, addSelectedCell } from '../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n\tcell: {\n\t\tzIndex: theme.zIndex.mobileStepper,\n\t},\n\tdisableCell: {\n\t\tbackground: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n\t\tbackgroundSize: '8px 8px',\n\t\tpointerEvents: 'none',\n\t},\n}));\n\nconst TimeTableCell = (props: WeekView.TimeTableCellProps) => {\n\tconst classes = useStyles();\n\tconst timeConfig = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst { startDate: dateString, onDoubleClick, ...restProps } = props;\n\tconst dispatch = useDispatch();\n\n\tconst onMouseDown = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tdispatch(beginSelectingCell(dateString));\n\t};\n\n\tconst onMouseEnter = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tdispatch(addSelectedCell(dateString));\n\t};\n\n\tconst onMouseUp = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tif (onDoubleClick) onDoubleClick(event);\n\t};\n\n\treturn (\n\t\t<WeekView.TimeTableCell\n\t\t\t{...restProps}\n\t\t\tstartDate={dateString}\n\t\t\tid={dateString?.toString() || ''}\n\t\t\tonMouseDown={onMouseDown}\n\t\t\tonMouseEnter={onMouseEnter}\n\t\t\tonMouseUp={onMouseUp}\n\t\t\tclassName={clsx(\n\t\t\t\tclasses.cell,\n\t\t\t\t{\n\t\t\t\t\t[classes.disableCell]: !isCellActive({\n\t\t\t\t\t\tdateString,\n\t\t\t\t\t\tconfig: timeConfig,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\tCELL_CLASS\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default memo(TimeTableCell);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCELL_CLASS,\n\tDATE_PICKER_ID,\n\tgetCellsProp,\n\tisElementContains,\n\tOVERLAY_ID,\n} from '../helpers';\nimport { TSelectingCells } from '../../../../../../types';\n\nconst useStyles = makeStyles(theme => ({\n\tcells: {\n\t\twidth: '100%',\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tbackground: theme.palette.primary.light,\n\t},\n}));\n\ntype Props = {\n\tselectingCells: TSelectingCells;\n\tslotLengthMinutes: number;\n};\n\nconst SelectedCells = (props: Props) => {\n\tconst classes = useStyles();\n\tconst { selectingCells, slotLengthMinutes } = props;\n\tconst cellsProps = getCellsProp(selectingCells, slotLengthMinutes);\n\n\tconst onMouseUp = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tif (_isEmpty(selectingCells)) return;\n\n\t\tconst { target } = event;\n\n\t\tif ((target as HTMLElement).classList.contains(CELL_CLASS)) return;\n\t\tif (isElementContains(OVERLAY_ID, target)) return;\n\t\tif (isElementContains(DATE_PICKER_ID, target)) return;\n\n\t\tconst { startCell } = selectingCells;\n\t\tconst cell = document.getElementById(startCell.toString());\n\t\tif (cell) {\n\t\t\tcell.dispatchEvent(new Event('mouseup', { bubbles: true }));\n\t\t}\n\t};\n\n\tReact.useEffect(() => {\n\t\twindow.addEventListener('mouseup', onMouseUp);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\t\t};\n\t}, []);\n\n\treturn <div className={classes.cells} style={cellsProps} />;\n};\n\nconst structuredSelector = createStructuredSelector({\n\tselectingCells: state => _get(state, 'calendar.selectingCells'),\n\tslotLengthMinutes: state =>\n\t\t_get(state, 'calendar.config.times.slotLengthMinutes'),\n});\n\nexport default connect(structuredSelector)(React.memo(SelectedCells));\n","import * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport moment from 'moment';\nimport SelectedCells from './SelectedCells';\nimport { DATE_FORMAT } from '../helpers';\n\nconst useStyles = makeStyles(theme => ({\n\tcell: {\n\t\t'&&': {\n\t\t\tpadding: theme.spacing(1, 0),\n\t\t\twidth: '100%',\n\t\t\tdisplay: 'block',\n\t\t\ttextAlign: 'center',\n\t\t},\n\t},\n\ttoday: {\n\t\tbackgroundColor: alpha(theme.palette.primary.main, 0.16),\n\t},\n}));\n\ntype Props = WeekView.DayScaleCellProps & {\n\tselectingDate: string;\n\tisSelecting: boolean;\n};\n\nconst DayScaleCell = (props: Props) => {\n\tconst classes = useStyles();\n\tconst { today, startDate, selectingDate, isSelecting } = props;\n\tconst hasSelectingCells =\n\t\tisSelecting && selectingDate === moment(startDate).format(DATE_FORMAT);\n\n\treturn (\n\t\t<Box\n\t\t\tcomponent='td'\n\t\t\tsx={{\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tposition: 'relative',\n\t\t\t\twidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\t<WeekView.DayScaleCell\n\t\t\t\t{...props}\n\t\t\t\tclassName={clsx(classes.cell, {\n\t\t\t\t\t[classes.today]: today,\n\t\t\t\t})}\n\t\t\t/>\n\t\t\t{hasSelectingCells && <SelectedCells />}\n\t\t</Box>\n\t);\n};\n\nconst structuredSelector = createStructuredSelector({\n\tselectingDate: state => _get(state, 'calendar.selectingCells.date'),\n\tisSelecting: state => _get(state, 'calendar.isSelecting'),\n});\n\nexport default connect(structuredSelector)(React.memo(DayScaleCell));\n","export const TYPES = {\n\tSIMPLE: 'SIMPLE',\n\tCHECKBOX: 'CHECKBOX',\n\tMULTI_DROPDOWN: 'MULTI_DROPDOWN',\n};\n","import { Auth } from 'aws-amplify';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport _get from 'lodash.get';\nimport { formatCells, toMinutes } from '../../helpers';\nimport type { TQuestion, TAppointmentType } from '../types';\nimport { TYPES } from './constants';\nimport { BUSY_APPOINTMENT_NAME } from '../../constants';\nimport { TSelectingCells } from '../../../../../../../types';\n\nconst BOOKING_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nconst BOOKING_DATE_FORMAT = 'YYYY-MM-DD';\nconst BOOKING_TIME_FORMAT = 'HH:mm:ss';\nexport const DATE_PICKER_FORMAT = 'MM/DD/YYYY';\nconst WEEK_DAYS = 7;\n\nconst defaultValues = {\n\t[TYPES.SIMPLE]: '',\n\t[TYPES.CHECKBOX]: false,\n\t[TYPES.MULTI_DROPDOWN]: '',\n};\n\nconst REPEAT_TYPE = {\n\tdaily: 'daily',\n\tweekly: 'weekly',\n};\n\nexport const generateInitialValues = (questions: TQuestion[]): Object =>\n\tquestions.reduce(\n\t\t(acc, { code, type }) => ({ ...acc, [code]: defaultValues[type] }),\n\t\t{\n\t\t\tappointmentType: undefined,\n\t\t}\n\t);\n\nconst generateBookingRange = (\n\tselectingCells: TSelectingCells,\n\tslotLengthMinutes: number\n) => {\n\tconst { startCell, endCell } = selectingCells;\n\tconst { start } = formatCells(selectingCells, slotLengthMinutes);\n\tconst startMinutes = toMinutes(startCell);\n\tconst endMinutes = toMinutes(endCell);\n\tconst duration = Math.abs((startMinutes - endMinutes) / slotLengthMinutes) + 1;\n\treturn Array.from(Array(duration), (_, i) => ({\n\t\tstartsAt: moment(start)\n\t\t\t.add(i * slotLengthMinutes, 'm')\n\t\t\t.format(BOOKING_FORMAT),\n\t}));\n};\n\nexport const generateSellerValues = ({\n\tproperty,\n\tselectingCells,\n\tconfig,\n}: any): Object => {\n\tconst {\n\t\tquestions,\n\t\ttimes: { slotLengthMinutes },\n\t} = config;\n\tconst { start } = formatCells(selectingCells, slotLengthMinutes);\n\tconst date = start.format(DATE_PICKER_FORMAT);\n\tconst address = _get(property, 'PropertyData.FullAddress', '');\n\tconst email = _get(Auth, ['user', 'attributes', 'email'], '');\n\treturn {\n\t\t...generateInitialValues(questions),\n\t\tFNAME: address,\n\t\tEMAIL: email,\n\t\trepeat: false,\n\t\trepeatType: REPEAT_TYPE.daily,\n\t\tstartDate: date,\n\t\tendDate: date,\n\t};\n};\n\nconst prepareQuestionsAnswers = (questions: TQuestion[], values: any): Object =>\n\tquestions\n\t\t.map(({ code }) => ({ code, string: values[code] }))\n\t\t.filter(({ string }) => string);\n\nexport const getBusyAppointmentType = (\n\tappointmentTypes: Object[]\n): Object | typeof undefined =>\n\tappointmentTypes.find(\n\t\ttype => _get(type, 'name', '').toLowerCase() === BUSY_APPOINTMENT_NAME\n\t);\n\nexport const prepareSellerBookings = ({\n\tselectingCells,\n\tvalues,\n\tconfig,\n}: any): Object[] => {\n\tconst {\n\t\tquestions,\n\t\ttimes: { slotLengthMinutes },\n\t} = config;\n\tconst { repeat, repeatType, startDate, endDate } = values;\n\tconst appointmentTypes = _get(config, 'services.items', []);\n\tconst busyAppointmentType = getBusyAppointmentType(appointmentTypes);\n\tconst bookingRange = generateBookingRange(selectingCells, slotLengthMinutes);\n\n\tif (!repeat)\n\t\treturn bookingRange.map(({ startsAt }) => ({\n\t\t\tstartsAt,\n\t\t\ttitle: BUSY_APPOINTMENT_NAME,\n\t\t\ttentative: 'NOT_USED',\n\t\t\ttimeZone: moment.tz.guess(),\n\t\t\tcancelled: false,\n\t\t\tunits: 1,\n\t\t\tservices: [busyAppointmentType],\n\t\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t\t}));\n\n\tconst mStartDate = moment(startDate);\n\tconst mEndDate = moment(endDate);\n\tconst diff = mEndDate.diff(mStartDate, 'day');\n\tconst module = repeatType === REPEAT_TYPE.weekly ? WEEK_DAYS : 1;\n\n\tconst days = Array.from(\n\t\tArray(Math.floor(diff / module) + 1),\n\t\t(_, i) => i * module\n\t);\n\n\tconst bookingsArr = days.reduce((bookings: any[], day: number) => {\n\t\tconst mDay = moment(startDate).add(day, 'day');\n\t\tconst bookingsInDay = bookingRange.map(({ startsAt }) => ({\n\t\t\ttitle: BUSY_APPOINTMENT_NAME,\n\t\t\tstartsAt: `${mDay.format(BOOKING_DATE_FORMAT)}T${moment(startsAt).format(\n\t\t\t\tBOOKING_TIME_FORMAT\n\t\t\t)}`,\n\t\t\ttentative: 'NOT_USED',\n\t\t\ttimeZone: moment.tz.guess(),\n\t\t\tcancelled: false,\n\t\t\tunits: 1,\n\t\t\tservices: [busyAppointmentType],\n\t\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t\t}));\n\n\t\treturn [...bookings, ...bookingsInDay];\n\t}, []);\n\treturn bookingsArr;\n};\n\nexport const getErrorMessages = (bookings: Object[]): Object => {\n\tconst bookingDates = bookings\n\t\t.map(booking => _get(booking, 'startsAt'))\n\t\t.join(', ');\n\treturn { message: `Cannot book at dates: ${bookingDates}` };\n};\n\nexport const getAppointmentTypeDuration = ({\n\tnumberOfSlots,\n\tslotLengthMinutes,\n}: TAppointmentType): string => `${numberOfSlots * slotLengthMinutes} minutes`;\n","import { memo } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { formatCells, displayTime, displayDate } from '../../helpers';\nimport { TSelectingCells } from '../../../../../../../types';\n\nconst useStyles = makeStyles(theme => ({\n\twrapper: {\n\t\t...theme.typography.h4,\n\t\tpadding: theme.spacing(2, 0),\n\t\tbackgroundColor: theme.palette.grey[100],\n\t\ttextAlign: 'center',\n\t},\n}));\n\ntype Props = {\n\tselectingCells: TSelectingCells;\n\tslotLengthMinutes: number;\n};\n\nconst AppointmentData = ({ selectingCells, slotLengthMinutes }: Props) => {\n\tconst classes = useStyles();\n\tif (_isEmpty(selectingCells)) return <div />;\n\tconst { date } = selectingCells;\n\tconst { start, end } = formatCells(selectingCells, slotLengthMinutes);\n\tconst displayStart = displayTime(start);\n\tconst displayEnd = displayTime(end);\n\n\treturn (\n\t\t<div className={classes.wrapper}>\n\t\t\t<Typography variant='h4'>{displayDate(date)}</Typography>\n\t\t\t<Box sx={{ mt: 1 }}>\n\t\t\t\t<Typography variant='h3'>\n\t\t\t\t\t{displayStart} - {displayEnd}\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nconst structuredSelector = createStructuredSelector({\n\tselectingCells: state => _get(state, 'calendar.selectingCells'),\n\tslotLengthMinutes: state =>\n\t\t_get(state, 'calendar.config.times.slotLengthMinutes'),\n});\n\nexport default connect(structuredSelector)(memo(AppointmentData));\n","import MomentUtils from '@date-io/moment';\nimport { useFormikContext } from 'formik';\nimport {\n\tCollapse,\n\tFormControlLabel,\n\tSwitch,\n\tGrid,\n\tRadioGroup,\n\tRadio,\n\tTextField,\n\tBox,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport _get from 'lodash.get';\nimport { DesktopDatePicker, LocalizationProvider } from '@material-ui/lab';\nimport { DATE_PICKER_FORMAT } from './helpers';\nimport { DATE_PICKER_ID } from '../../helpers';\n\nexport const RepeatSection = () => {\n\tconst { values, handleChange, setFieldValue } = useFormikContext();\n\n\tconst handleDateChange = (field: string) => (date: Date | null) => {\n\t\tsetFieldValue(field, moment(date).format(DATE_PICKER_FORMAT));\n\t};\n\n\tconst repeat = _get(values, 'repeat');\n\tconst repeatType = _get(values, 'repeatType');\n\tconst startDate = _get(values, 'startDate');\n\tconst endDate = _get(values, 'endDate');\n\n\treturn (\n\t\t<div>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tname='repeat'\n\t\t\t\t\t\tchecked={repeat}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel='Repeat'\n\t\t\t/>\n\n\t\t\t<Collapse in={repeat}>\n\t\t\t\t<div>\n\t\t\t\t\t<RadioGroup name='repeatType' value={repeatType} onChange={handleChange}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue='daily'\n\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\tlabel='Daily'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue='weekly'\n\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\tlabel='Weekly'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</div>\n\t\t\t\t<Box sx={{ mt: 2, mb: 1 }}>\n\t\t\t\t\t<LocalizationProvider dateAdapter={MomentUtils}>\n\t\t\t\t\t\t<Grid container justifyContent='space-between'>\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<DesktopDatePicker\n\t\t\t\t\t\t\t\t\tlabel='Start date'\n\t\t\t\t\t\t\t\t\tinputFormat={DATE_PICKER_FORMAT}\n\t\t\t\t\t\t\t\t\tvalue={new Date(startDate)}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange('startDate')}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t\t\t\t\trenderInput={({ helperText, ...restProps }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField {...restProps} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tPopperProps={{ id: DATE_PICKER_ID }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<DesktopDatePicker\n\t\t\t\t\t\t\t\t\tlabel='End date'\n\t\t\t\t\t\t\t\t\tinputFormat={DATE_PICKER_FORMAT}\n\t\t\t\t\t\t\t\t\tvalue={new Date(endDate)}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange('endDate')}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t\t\t\t\trenderInput={({ helperText, ...restProps }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField {...restProps} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tPopperProps={{ id: DATE_PICKER_ID }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</LocalizationProvider>\n\t\t\t\t</Box>\n\t\t\t</Collapse>\n\t\t</div>\n\t);\n};\n","import { Box, Button, Divider, Typography } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tgenerateSellerValues,\n\tgetErrorMessages,\n\tprepareSellerBookings,\n} from './helpers';\nimport AppointmentData from './AppointmentData';\nimport { BookingsService } from '../../../../../../../services/YouCanBook';\nimport { setIsLoading, setError, addAppointments } from '../../redux/actions';\nimport { RepeatSection } from './RepeatSection';\n\ntype Props = {\n\tonSave: Function;\n};\n\nconst BookingForm = ({ onSave }: Props) => {\n\tconst dispatch = useDispatch();\n\tconst property = useSelector(state => _get(state, ['calendar', 'property']));\n\tconst profileId = _get(property, 'HomeViewingCalendarProfileId');\n\tconst config = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst isLoading = useSelector(state => _get(state, ['calendar', 'isLoading']));\n\tconst selectingCells = useSelector(state =>\n\t\t_get(state, ['calendar', 'selectingCells'])\n\t);\n\tif (_isEmpty(selectingCells)) return <Box />;\n\n\tconst initialValues = generateSellerValues({\n\t\tproperty,\n\t\tselectingCells,\n\t\tconfig,\n\t});\n\n\tconst onSubmit = async (values: Object) => {\n\t\tdispatch(setIsLoading(true));\n\t\ttry {\n\t\t\tconst data = prepareSellerBookings({ selectingCells, values, config });\n\t\t\tconst { bookings, errors } = await BookingsService.createBookings({\n\t\t\t\tprofileId,\n\t\t\t\tdata,\n\t\t\t});\n\t\t\tif (!_isEmpty(errors)) dispatch(setError(getErrorMessages(errors)));\n\t\t\tdispatch(addAppointments(bookings));\n\t\t\tonSave();\n\t\t} catch (error) {\n\t\t\tdispatch(setError(error as Error));\n\t\t}\n\t\tdispatch(setIsLoading(false));\n\t};\n\n\treturn (\n\t\t<Box sx={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t<Form>\n\t\t\t\t\t<Box sx={{ mb: 2 }}>\n\t\t\t\t\t\t<Typography variant='h4'>Block available slots</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<AppointmentData />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Box sx={{ my: 2 }}>\n\t\t\t\t\t\t<RepeatSection />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm Booking\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Formik>\n\t\t</Box>\n\t);\n};\n\nexport default BookingForm;\n","import { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { BookingForm } from '../BookingForm';\n\ntype Props = AppointmentForm.BasicLayoutProps & {\n\tonSave: Function;\n};\n\nexport const BasicLayout = (props: Props) => {\n\tconst { onSave } = props;\n\n\treturn (\n\t\t<BookingForm\n\t\t\tonSave={onSave}\n\t\t/>\n\t);\n};\n\nexport default BasicLayout;\n","import * as React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { Fade } from '@material-ui/core';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { stopSelectingCell } from '../../redux/actions';\nimport { OVERLAY_ID } from '../../helpers';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tcontent: {\n\t\tzIndex: theme.zIndex.appBar\n\t}\n}));\n\nexport const Overlay = ({ children, visible, onHide, ...restProps }: AppointmentForm.OverlayProps) => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst onClose = () => {\n\t\tonHide();\n\t\tdispatch(stopSelectingCell());\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tid={OVERLAY_ID}\n\t\t\tclassName={classes.root}\n\t\t\tonClose={onClose}\n\t\t\tcloseAfterTransition\n\t\t\tBackdropComponent={Backdrop}\n\t\t\tBackdropProps={{\n\t\t\t\ttimeout: 500,\n\t\t\t}}\n\t\t\topen={visible}\n\t\t\t{...restProps}\n\t\t>\n\t\t\t<Fade in={visible}>\n\t\t\t\t<div className={classes.content}>{children}</div>\n\t\t\t</Fade>\n\t\t</Modal>\n\t);\n};\n","// @ts-nocheck\nimport { makeStyles } from '@material-ui/core';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\n\nconst useStyles = makeStyles(theme => ({\n\tlayout: {\n\t\tbackground: theme.palette.common.white,\n\t},\n\tcontent: {\n\t\tpadding: theme.spacing(4),\n\t\twidth: '30vw',\n\t\tminWidth: '300px',\n\t\toverflow: 'auto',\n\t\tmaxHeight: '90vh',\n\t},\n}));\n\nexport const Layout = (props: AppointmentForm.LayoutProps) => {\n\tconst {\n\t\tbasicLayoutComponent: BasicLayout,\n\t\tcommandLayoutComponent: CommandLayout,\n\t\trecurrenceLayoutComponent: RecurrenceLayout,\n\t\tchildren,\n\t\t...restProps\n\t} = props;\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.layout} {...restProps}>\n\t\t\t<CommandLayout />\n\t\t\t<div className={classes.content}>\n\t\t\t\t<BasicLayout />\n\t\t\t\t<RecurrenceLayout />\n\t\t\t</div>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import { useEffect } from 'react';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\n\ntype Props = AppointmentForm.CommandLayoutProps & {\n\tisSaving: boolean;\n\tsetIsSaving: (value: boolean) => void;\n};\n\nexport const CommandLayout = (props: Props) => {\n\tconst { onCommitButtonClick, isSaving, setIsSaving } = props;\n\n\tuseEffect(() => {\n\t\tif (isSaving) {\n\t\t\tonCommitButtonClick();\n\t\t\tsetIsSaving(false);\n\t\t}\n\t}, [isSaving]);\n\n\treturn <div />;\n};\n","import React, { useState } from 'react';\n\nimport { AppointmentForm as SchedulerAppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { connectProps } from '@devexpress/dx-react-core';\nimport { useDispatch } from 'react-redux';\nimport BasicLayout from './BasicLayout';\nimport { stopSelectingCell } from '../../redux/actions';\nimport { Overlay } from './Overlay';\nimport { Layout } from './Layout';\nimport { CommandLayout } from './CommandLayout';\n\nexport const AppointmentForm = () => {\n\tconst [isSaving, setIsSaving] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst onSave = () => {\n\t\tsetIsSaving(true);\n\t\tdispatch(stopSelectingCell());\n\t};\n\tconst BasicLayoutComponent = connectProps(BasicLayout, () => ({\n\t\tonSave,\n\t}));\n\n\tconst CommandLayoutComponent = connectProps(CommandLayout, () => ({\n\t\tisSaving,\n\t\tsetIsSaving,\n\t}));\n\n\treturn (\n\t\t<SchedulerAppointmentForm\n\t\t\tlayoutComponent={Layout}\n\t\t\tbasicLayoutComponent={BasicLayoutComponent}\n\t\t\tcommandLayoutComponent={CommandLayoutComponent}\n\t\t\toverlayComponent={Overlay}\n\t\t/>\n\t);\n};\n","import * as React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\n\ntype Props = Appointments.ContainerProps & {\n\tchildren?: React.ReactElement;\n};\n\nexport const AppointmentContainer = ({\n\tstyle,\n\tchildren,\n\t...restProps\n}: Props) => (\n\t<div style={{ ...style, zIndex: 1200 }} {...restProps}>\n\t\t{children}\n\t</div>\n);\n","import Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport {\n\tScheduler as SchedulerComponent,\n\tWeekView,\n\tAppointments,\n\tAppointmentTooltip,\n\tToolbar,\n\tDateNavigator,\n\tTodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useSelector } from 'react-redux';\n\nimport { DEFAULT_DURATION } from '../constants';\nimport IntegratedDates from './IntegratedDates';\nimport TooltipContent from './TooltipContent';\nimport Appointment from './Appointment';\nimport TimeTableCell from './TimeTableCell';\nimport DayScaleCell from './DayScaleCell';\nimport { AppointmentForm } from './AppointmentForm';\nimport { AppointmentContainer } from './AppointmentContainer';\n\ntype Props = {\n\tprofileId: string;\n};\n\nconst Scheduler = ({ profileId }: Props) => {\n\tif (!profileId) return null;\n\n\tconst config = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst appointments = useSelector(state =>\n\t\t_get(state, ['calendar', 'appointments'])\n\t);\n\n\tconst onCommitChanges = () => {};\n\n\tif (_isEmpty(config)) return <></>;\n\n\treturn (\n\t\t<Paper elevation={3}>\n\t\t\t<SchedulerComponent data={appointments}>\n\t\t\t\t<ViewState />\n\t\t\t\t<WeekView\n\t\t\t\t\ttimeTableCellComponent={TimeTableCell}\n\t\t\t\t\tdayScaleCellComponent={DayScaleCell}\n\t\t\t\t\tcellDuration={_get(config, 'slotLengthMinutes') || DEFAULT_DURATION}\n\t\t\t\t/>\n\t\t\t\t<EditingState onCommitChanges={onCommitChanges} />\n\t\t\t\t<IntegratedDates />\n\t\t\t\t<Toolbar />\n\t\t\t\t<DateNavigator />\n\t\t\t\t<TodayButton />\n\t\t\t\t<Appointments\n\t\t\t\t\tappointmentComponent={Appointment}\n\t\t\t\t\tcontainerComponent={AppointmentContainer as any}\n\t\t\t\t/>\n\t\t\t\t<AppointmentTooltip showCloseButton contentComponent={TooltipContent} />\n\t\t\t\t<AppointmentForm />\n\t\t\t</SchedulerComponent>\n\t\t</Paper>\n\t);\n};\n\nexport default Scheduler;\n"],"sourceRoot":""}