{"version":3,"sources":["views/application/form/ListToolbar.tsx","views/application/form/ListHeader.tsx","views/application/form/ListTopPage.tsx","views/application/form/FormList.tsx","views/pages/form/ListPage.tsx","graphql/queries.ts","utils/table.ts","graphql/mutations.ts","views/application/properties/LoadMore.tsx","helpers/date.ts"],"names":["useToolbarStyles","makeStyles","theme","root","padding","paddingLeft","spacing","paddingRight","highlight","color","palette","secondary","main","title","flex","EnhancedTableToolbar","props","classes","numSelected","onDelete","Toolbar","className","clsx","Typography","variant","component","Tooltip","IconButton","sx","p","onClick","fontSize","headCells","id","numeric","label","align","disablePadding","useStyles","sortSpan","visuallyHidden","ListHeader","onSelectAllClick","order","orderBy","rowCount","onRequestSort","TableHead","TableRow","TableCell","pl","Checkbox","indeterminate","checked","onChange","inputProps","colSpan","map","headCell","sortDirection","undefined","TableSortLabel","active","direction","form","event","pr","ListTopPage","formAddLink","generatePath","CardContent","Grid","container","justifyContent","alignItems","item","xs","sm","textAlign","Fab","size","boxShadow","ml","width","height","minHeight","href","paper","marginBottom","table","minWidth","FormList","useQuery","gql","listForms","variables","limit","config","pagination","fetchPolicy","loading","error","data","fetchMore","useMutation","deleteForm","mutate","isDeleteLoading","isDeleteError","rows","_get","nextToken","useTheme","React","useState","setOrder","setOrderBy","selected","setSelected","Loader","_isEmpty","Alert","severity","onDeleteHandler","a","formId","FormId","window","location","reload","TableContainer","Table","length","target","newSelectedId","n","property","TableBody","stableSort","getComparator","row","index","name","formEditLink","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","params","slice","concat","handleClick","role","tabIndex","scope","Title","CategoryId","FormTypeId","formatDate","CreatedDT","UpdatedDT","to","LoadMore","onLoadMore","disabled","ListPage","MainCard","getForm","getProperty","listFormCategories","listProperties","listSellRequests","descendingComparator","b","array","comparator","stabilizedThis","el","sort","createForm","updateForm","LoadMoreButton","withStyles","borderRadius","Button","toolbar","type","date","Intl","DateTimeFormat","locate","country","timeZone","timezone","format","Date"],"mappings":"khBAMMA,EAAmBC,aAAW,SAAAC,GAAK,MAAK,CAC7CC,KAAM,CACLC,QAAS,EACTC,YAAaH,EAAMI,QAAQ,GAC3BC,aAAcL,EAAMI,QAAQ,IAE7BE,UAAW,CACVC,MAAOP,EAAMQ,QAAQC,UAAUC,MAEhCC,MAAO,CACNC,KAAM,gBAIFC,EAAuB,SAC5BC,GAEA,IAAMC,EAAUjB,IACRkB,EAA0BF,EAA1BE,YAAaC,EAAaH,EAAbG,SAErB,OACC,eAACC,EAAA,EAAD,CACCC,UAAWC,YAAKL,EAAQd,KAAT,eACbc,EAAQT,UAAYU,EAAc,IAFrC,UAKEA,EAAc,GACd,eAACK,EAAA,EAAD,CACCF,UAAWJ,EAAQJ,MACnBJ,MAAM,UACNe,QAAQ,KACRC,UAAU,MAJX,UAMEP,EANF,eAUAA,EAAc,GACd,cAACQ,EAAA,EAAD,CAASb,MAAM,SAAf,SACC,cAACc,EAAA,EAAD,CAAYC,GAAI,CAAEC,EAAG,MAAQC,QAASX,EAAtC,SACC,cAAC,IAAD,CAAYY,SAAS,kBChCrBC,EAAY,CACjB,CACCC,GAAI,SACJC,SAAS,EACTC,MAAO,KACPC,MAAO,OACPC,gBAAgB,GAEjB,CACCJ,GAAI,QACJC,SAAS,EACTC,MAAO,QACPC,MAAO,OACPC,gBAAgB,GAEjB,CACCJ,GAAI,WACJC,SAAS,EACTC,MAAO,WACPC,MAAO,OACPC,gBAAgB,GAEjB,CACCJ,GAAI,WACJC,SAAS,EACTC,MAAO,YACPC,MAAO,QAER,CACCH,GAAI,YACJC,SAAS,EACTC,MAAO,eACPC,MAAO,QAER,CACCH,GAAI,YACJC,SAAS,EACTC,MAAO,eACPC,MAAO,SAIHE,EAAYrC,aAAW,iBAAO,CACnCsC,SAAS,eAAMC,SAqEDC,EAlEI,SAACzB,GACnB,IAAMC,EAAUqB,IAEfI,EAOG1B,EAPH0B,iBACAC,EAMG3B,EANH2B,MACAC,EAKG5B,EALH4B,QACA1B,EAIGF,EAJHE,YACA2B,EAGG7B,EAHH6B,SACAC,EAEG9B,EAFH8B,cACA3B,EACGH,EADHG,SAMD,OACC,cAAC4B,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAW7C,QAAQ,WAAWwB,GAAI,CAAEsB,GAAI,GAAxC,SACC,cAACC,EAAA,EAAD,CACC1C,MAAM,UACN2C,cAAelC,EAAc,GAAKA,EAAc2B,EAChDQ,QAASR,EAAW,GAAK3B,IAAgB2B,EACzCS,SAAUZ,EACVa,WAAY,CACX,aAAc,2BAIhBrC,EAAc,GACd,cAAC+B,EAAA,EAAD,CAAW7C,QAAQ,OAAOoD,QAAS,GAAnC,SACC,cAAC,EAAD,CAAsBtC,YAAaA,EAAaC,SAAUA,MAG3DD,GAAe,GACfc,EAAUyB,KAAI,SAAAC,GAAQ,OACrB,cAACT,EAAA,EAAD,CAECb,MAAOsB,EAASxB,QAAU,QAAU,OACpC9B,QAASsD,EAASrB,eAAiB,OAAS,SAC5CsB,cAAef,IAAYc,EAASzB,GAAKU,OAAQiB,EAJlD,SAMC,eAACC,EAAA,EAAD,CACCC,OAAQlB,IAAYc,EAASzB,GAC7B8B,UAAWnB,IAAYc,EAASzB,GAAKU,EAAQ,MAC7Cb,SAlCoBkC,EAkCON,EAASzB,GAlCC,SAACgC,GAC5CnB,EAAcmB,EAAOD,KA8BhB,UAKEN,EAASvB,MACTS,IAAYc,EAASzB,GACrB,sBAAMZ,UAAWJ,EAAQsB,SAAzB,SACY,SAAVI,EAAmB,oBAAsB,qBAExC,SAfAe,EAASzB,IA1BM,IAAC+B,KA6CvB9C,GAAe,GACf,cAAC+B,EAAA,EAAD,CAAWU,eAAe,EAAOvB,MAAM,SAASR,GAAI,CAAEsC,GAAI,GAA1D,0B,iFC9EUC,GAlCK,WACnB,IAAMC,EAAcC,YAAa,aAEjC,OACC,cAACC,GAAA,EAAD,UACC,eAACC,GAAA,EAAD,CACCC,WAAS,EACTC,eAAe,gBACfC,WAAW,SACXpE,QAAS,EAJV,UAMC,cAACiE,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,IACvB,cAACN,GAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGjD,GAAI,CAAEkD,UAAW,SAA3C,SACC,cAACpD,EAAA,EAAD,CAASb,MAAM,WAAf,SACC,cAACkE,GAAA,EAAD,CACCtE,MAAM,UACNuE,KAAK,QACLpD,GAAI,CACHqD,UAAW,OACXC,GAAI,EACJC,MAAO,OACPC,OAAQ,OACRC,UAAW,QAEZC,KAAMlB,EAVP,SAYC,cAAC,KAAD,CAASrC,SAAS,sB,UCAnBO,GAAYrC,aAAW,SAACC,GAAD,MAAmB,CAC/CC,KAAM,CACLgF,MAAO,QAERI,MAAO,CACNJ,MAAO,OACPK,aAActF,EAAMI,QAAQ,IAE7BmF,MAAO,CACNC,SAAU,KAEXnD,SAAS,eAAMC,SAiKDmD,GA9JE,WAChB,MAA4CC,YAASC,YAAIC,KAAY,CACpEC,UAAW,CAAEC,MAAOC,IAAOC,WAAWF,OACtCG,YAAa,gBAFNC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UAK9B,EACCC,YAAYX,YAAIY,MAAa,IAD9B,mBAAOC,EAAP,YAA0BC,EAA1B,EAAiBP,QAAiCQ,EAAlD,EAA2CP,MAGrCQ,EAAgBC,IAAKR,EAAM,CAAC,YAAa,SAAU,IACnDS,EAAuCD,IAC5CR,EACA,2BACA1C,GAEK1D,EAAQ8G,cACR/F,EAAUqB,KAChB,EAA0B2E,IAAMC,SAA2B,OAA3D,mBAAOvE,EAAP,KAAcwE,EAAd,KACA,EAA8BF,IAAMC,SAAiB,UAArD,mBAAOtE,EAAP,KAAgBwE,EAAhB,KACA,EAAgCH,IAAMC,SAAmB,IAAzD,mBAAOG,GAAP,KAAiBC,GAAjB,KAEA,GAAIlB,GAAWO,EAAiB,OAAO,cAACY,EAAA,EAAD,IACvC,GAAIlB,GAASmB,IAASlB,IAASM,EAC9B,OACC,cAACa,EAAA,EAAD,CAAOC,SAAS,QAAQ9F,GAAI,CAAEnB,MAAOP,EAAMQ,QAAQ2F,MAAMzF,MAAzD,mCAMF,IAiDM+G,GAAe,uCAAG,wCAAAC,EAAA,0DACnBP,GADmB,kDAGKA,IAHL,gIAGLQ,EAHK,YAIfnB,EAAO,CAAEX,UAAW,CAAE+B,OAAQD,KAJf,iTAMtBP,GAAY,IACZS,OAAOC,SAASC,SAPM,4EAAH,qDAWrB,OACC,qCACC,cAAC,GAAD,IACA,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAO9G,UAAWJ,EAAQwE,MAAO,kBAAgB,aAAaT,KAAK,QAAnE,UACC,cAAC,EAAD,CACC7D,SAAUwG,GACVzG,YAAamG,GAASe,OACtBzF,MAAOA,EACPC,QAASA,EACTF,iBA1DwB,SAACuB,GAC7B,GAAIA,EAAMoE,OAAOhF,QAAjB,CACC,IAAMiF,EAA0BzB,EAAKpD,KAAI,SAAA8E,GAAC,OAAIA,EAAET,UAChDR,GAAYgB,QAGbhB,GAAY,KAqDRxE,cAjEqB,SAACmB,EAA6BuE,GAEvDrB,EADcvE,IAAY4F,GAAsB,QAAV7F,EACrB,OAAS,OAC1ByE,EAAWoB,IA+DP3F,SAAUgE,EAAKuB,SAEhB,cAACK,EAAA,EAAD,UACEC,YAAkB7B,EAAM8B,YAAchG,EAAOC,IAAUa,KACvD,SAACmF,EAAKC,GACL,GAAmB,kBAARD,EAAkB,OAAO,KACpC,IA/BaE,EA+BPC,EAAe1E,YAAa,YAAa,CAC9CpC,GAAI2G,EAAId,SAEHkB,GAlCOF,EAkCqBF,EAAId,QAlCoB,IAA5BT,GAAS4B,QAAQH,IAmCzCI,EAAO,kCAA8BL,GAC3C,OACC,eAAC7F,EAAA,EAAD,CACCmG,OAAK,EACLrH,QAAS,kBAjEE,SAACgH,GAAkB,IAAD,EAC/BM,EAAgB/B,GAAS4B,QAAQH,GACnCO,EAAwB,GAExBC,EAAS,GACb,OAAQF,GACP,KAAM,EACLE,EAAS,CAACjC,GAAUyB,GACpB,MACD,KAAK,EACJQ,EAAS,CAACjC,GAASkC,MAAM,IACzB,MACD,KAAKlC,GAASe,OAAS,EACtBkB,EAAS,CAACjC,GAASkC,MAAM,GAAI,IAC7B,MACD,QACCD,EAAS,CACRjC,GAASkC,MAAM,EAAGH,GAClB/B,GAASkC,MAAMH,EAAgB,IAIlCC,GAAc,EAAAA,GAAYG,OAAZ,oBAAsBF,IACpChC,GAAY+B,GA0CWI,CAAYb,EAAId,SAC/B4B,KAAK,WACL,eAAcV,EACdW,UAAW,EAEXtC,SAAU2B,EAPX,UASC,cAAC/F,EAAA,EAAD,CAAWrB,GAAI,CAAEsB,GAAI,GAAK9C,QAAQ,WAAlC,SACC,cAAC+C,EAAA,EAAD,CACC1C,MAAM,UACN4C,QAAS2F,EACTzF,WAAY,CACX,kBAAmB2F,OAItB,cAACjG,EAAA,EAAD,CAAWxB,UAAU,KAAKQ,GAAIiH,EAASU,MAAM,MAAMxJ,QAAQ,OAA3D,SACEwI,EAAId,SAEN,cAAC7E,EAAA,EAAD,CAAWb,MAAM,OAAjB,SAAyBwG,EAAIiB,QAC7B,eAAC5G,EAAA,EAAD,CAAWb,MAAM,OAAjB,UAAyBwG,EAAIkB,WAA7B,OACA,cAAC7G,EAAA,EAAD,CAAWb,MAAM,OAAjB,SAAyBwG,EAAImB,aAC7B,cAAC9G,EAAA,EAAD,CAAWb,MAAM,OAAjB,SAAyB4H,aAAWpB,EAAIqB,aACxC,cAAChH,EAAA,EAAD,CAAWb,MAAM,OAAjB,SAAyB4H,aAAWpB,EAAIsB,aACxC,cAACjH,EAAA,EAAD,CAAWb,MAAM,OAAOR,GAAI,CAAEsC,GAAI,GAAlC,SACC,cAAC,IAAD,CAAMiG,GAAIpB,EAAV,SACC,cAACpH,EAAA,EAAD,CAAYlB,MAAM,YAAlB,SACC,cAAC,IAAD,CAAiBmB,GAAI,CAAEG,SAAU,oBAvB/B6G,EAAId,kBAkChB,cAACsC,GAAA,EAAD,CAAUC,WA5HK,WAChB9D,EAAU,CACTR,UAAW,CAAEC,MAAOC,IAAOC,WAAWF,MAAOe,gBA0HbuD,UAAWvD,QC3L/BwD,UANE,kBAChB,cAACC,EAAA,EAAD,CAAU3J,MAAM,YAAhB,SACC,cAAC,GAAD,Q,iCCRF,4MAIO,IAAM4J,EAAO,uPA0KPC,EAAW,gfA6FXC,EAAkB,oaA4BlB7E,EAAS,gWAwDT8E,EAAc,0bAuBdC,EAAgB,0rB,iCCtX7B,0FAGMC,EAAuB,SAC5BlD,EACAmD,EACAnI,GAEA,OAAIkE,IAAKiE,EAAGnI,GAAWkE,IAAKc,EAAGhF,IACtB,EAELkE,IAAKiE,EAAGnI,GAAWkE,IAAKc,EAAGhF,GACvB,EAED,GAGF+F,EAAgB,SAAChG,EAAyBC,GAA1B,MACX,SAAVD,EACG,SAACiF,EAAgBmD,GAAjB,OAAoCD,EAAqBlD,EAAGmD,EAAGnI,IAC/D,SAACgF,EAAgBmD,GAAjB,OAAqCD,EAAqBlD,EAAGmD,EAAGnI,KAE9D8F,EAAa,SAClBsC,EACAC,GAEA,IAAMC,EAAiBF,EAAMvH,KAAI,SAAC0H,EAAItC,GAAL,MAAe,CAACsC,EAAItC,MAMrD,OALAqC,EAAeE,MAAK,SAACxD,EAAGmD,GACvB,IAAMpI,EAAQsI,EAAWrD,EAAE,GAASmD,EAAE,IACtC,OAAc,IAAVpI,EAAoBA,EAChBiF,EAAE,GAAiBmD,EAAE,MAEvBG,EAAezH,KAAI,SAAA0H,GAAE,OAAIA,EAAG,Q,iCChCpC,sGAIO,IAoDME,EAAU,sQAoEV5E,EAAU,gQAoEV6E,EAAU,sS,iCChMvB,wDAIMC,EAAiBC,YAAW,CACjCrL,KAAM,CACLsL,aAAc,MACd/F,SAAU,IACVtF,QAAS,SAJYoL,CAMpBE,KAOGpJ,EAAYrC,aAAW,iBAAO,CACnC0L,QAAS,CACRvL,QAAS,qBAoBIgK,IAhBE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SACzBrJ,EAAUqB,IAEhB,OACC,cAAC,IAAD,CAAMkC,WAAS,EAACnD,UAAWJ,EAAQ0K,QAASlH,eAAe,SAA3D,SACC,cAAC8G,EAAD,CACCK,KAAK,SACL9J,QAAS,kBAAMuI,KACfC,SAAUA,EAHX,SAKC,cAAC,IAAD,U,iCCjCJ,8CAEaN,EAAa,SAAC6B,GAAD,gBAExBA,EACG,IAAIC,KAAKC,eAAe9F,IAAO+F,OAAOC,QAAS,CAC/CC,SAAUjG,IAAO+F,OAAOG,WACrBC,OAAO,IAAIC,KAAKR,IACnB","file":"static/js/12.82128f79.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { IconButton, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { EnhancedTableToolbarWithMassActionProps } from '../../../types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpadding: 0,\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(1),\n\t},\n\thighlight: {\n\t\tcolor: theme.palette.secondary.main,\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst EnhancedTableToolbar = (\n\tprops: EnhancedTableToolbarWithMassActionProps\n) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected, onDelete } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{numSelected > 0 && (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcolor='inherit'\n\t\t\t\t\tvariant='h4'\n\t\t\t\t\tcomponent='div'\n\t\t\t\t>\n\t\t\t\t\t{numSelected} Selected\n\t\t\t\t</Typography>\n\t\t\t)}\n\n\t\t\t{numSelected > 0 && (\n\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t<IconButton sx={{ p: 2.25 }} onClick={onDelete}>\n\t\t\t\t\t\t<DeleteIcon fontSize='small' />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\t\t\t)}\n\t\t</Toolbar>\n\t);\n};\nexport { EnhancedTableToolbar };\n","import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\n\nimport { EnhancedTableHeadWithMassActionProps } from '../../../types';\nimport { EnhancedTableToolbar } from './ListToolbar';\n\nconst headCells = [\n\t{\n\t\tid: 'FormId',\n\t\tnumeric: false,\n\t\tlabel: 'ID',\n\t\talign: 'left',\n\t\tdisablePadding: true,\n\t},\n\t{\n\t\tid: 'Title',\n\t\tnumeric: false,\n\t\tlabel: 'Title',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'Category',\n\t\tnumeric: false,\n\t\tlabel: 'Category',\n\t\talign: 'left',\n\t\tdisablePadding: false,\n\t},\n\t{\n\t\tid: 'FormType',\n\t\tnumeric: false,\n\t\tlabel: 'Form Type',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'CreatedDT',\n\t\tnumeric: false,\n\t\tlabel: 'Created Date',\n\t\talign: 'left',\n\t},\n\t{\n\t\tid: 'UpdatedDT',\n\t\tnumeric: false,\n\t\tlabel: 'Updated Date',\n\t\talign: 'left',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadWithMassActionProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t\tonDelete,\n\t} = props;\n\tconst createSortHandler = (form: string) => (event: React.SyntheticEvent) => {\n\t\tonRequestSort(event, form);\n\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{numSelected > 0 && (\n\t\t\t\t\t<TableCell padding='none' colSpan={12}>\n\t\t\t\t\t\t<EnhancedTableToolbar numSelected={numSelected} onDelete={onDelete} />\n\t\t\t\t\t</TableCell>\n\t\t\t\t)}\n\t\t\t\t{numSelected <= 0 &&\n\t\t\t\t\theadCells.map(headCell => (\n\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t))}\n\t\t\t\t{numSelected <= 0 && (\n\t\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\t\tAction\n\t\t\t\t\t</TableCell>\n\t\t\t\t)}\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { CardContent, Fab, Grid, Tooltip } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport { generatePath } from 'react-router-dom';\n\nconst ListTopPage = () => {\n\tconst formAddLink = generatePath('/form-add');\n\n\treturn (\n\t\t<CardContent>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item xs={12} sm={6} />\n\t\t\t\t<Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\n\t\t\t\t\t<Tooltip title='Add Form'>\n\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t\t\t\tml: 1,\n\t\t\t\t\t\t\t\twidth: '32px',\n\t\t\t\t\t\t\t\theight: '32px',\n\t\t\t\t\t\t\t\tminHeight: '32px',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thref={formAddLink}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AddIcon fontSize='small' />\n\t\t\t\t\t\t</Fab>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</CardContent>\n\t);\n};\nexport default ListTopPage;\n","import { useQuery, gql, useMutation } from '@apollo/client';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n\tIconButton,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tuseTheme,\n\tAlert,\n\tCheckbox,\n} from '@material-ui/core';\nimport { visuallyHidden } from '@material-ui/utils';\nimport _isEmpty from 'lodash.isempty';\nimport _get from 'lodash.get';\nimport { Link, generatePath } from 'react-router-dom';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport React from 'react';\nimport { ArrangementOrder, TForm } from '../../../types';\nimport config from '../../../config';\nimport Loader from '../../../ui-component/Loader';\nimport { listForms } from '../../../graphql/queries';\nimport Header from './ListHeader';\nimport { getComparator, stableSort } from '../../../utils/table';\nimport LoadMore from '../properties/LoadMore';\nimport { deleteForm } from '../../../graphql/mutations';\nimport ListTopPage from './ListTopPage';\nimport { formatDate } from '../../../helpers/date';\n\n// style constant\nconst useStyles = makeStyles((theme: Theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst FormList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(listForms), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t});\n\n\tconst [mutate, { loading: isDeleteLoading, error: isDeleteError }] =\n\t\tuseMutation(gql(deleteForm), {});\n\n\tconst rows: TForm[] = _get(data, ['listForms', 'items'], []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listForms.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst [order, setOrder] = React.useState<ArrangementOrder>('asc');\n\tconst [orderBy, setOrderBy] = React.useState<string>('FormId');\n\tconst [selected, setSelected] = React.useState<string[]>([]);\n\n\tif (loading || isDeleteLoading) return <Loader />;\n\tif (error || _isEmpty(data) || isDeleteError) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: { limit: config.pagination.limit, nextToken },\n\t\t});\n\t};\n\n\tconst handleRequestSort = (event: React.SyntheticEvent, property: string) => {\n\t\tconst isAsc = orderBy === property && order === 'asc';\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\n\t\tsetOrderBy(property);\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tif (event.target.checked) {\n\t\t\tconst newSelectedId: string[] = rows.map(n => n.FormId);\n\t\t\tsetSelected(newSelectedId);\n\t\t\treturn;\n\t\t}\n\t\tsetSelected([]);\n\t};\n\n\tconst handleClick = (name: string) => {\n\t\tconst selectedIndex = selected.indexOf(name);\n\t\tlet newSelected: string[] = [];\n\n\t\tlet params = [];\n\t\tswitch (selectedIndex) {\n\t\t\tcase -1:\n\t\t\t\tparams = [selected, name];\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tparams = [selected.slice(1)];\n\t\t\t\tbreak;\n\t\t\tcase selected.length - 1:\n\t\t\t\tparams = [selected.slice(0, -1)];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tparams = [\n\t\t\t\t\tselected.slice(0, selectedIndex),\n\t\t\t\t\tselected.slice(selectedIndex + 1),\n\t\t\t\t];\n\t\t\t\tbreak;\n\t\t}\n\t\tnewSelected = newSelected.concat(...params);\n\t\tsetSelected(newSelected);\n\t};\n\n\tconst isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n\tconst onDeleteHandler = async () => {\n\t\tif (selected) {\n\t\t\t// eslint-disable-next-line no-restricted-syntax\n\t\t\tfor await (const formId of selected) {\n\t\t\t\tawait mutate({ variables: { FormId: formId } });\n\t\t\t}\n\t\t\tsetSelected([]);\n\t\t\twindow.location.reload();\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ListTopPage />\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tonDelete={onDeleteHandler}\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TForm>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst formEditLink = generatePath('/form/:id', {\n\t\t\t\t\t\t\t\t\tid: row.FormId,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.FormId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick(row.FormId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.FormId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component='th' id={labelId} scope='row' padding='none'>\n\t\t\t\t\t\t\t\t\t\t\t{row.FormId}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.Title}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.CategoryId} </TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.FormTypeId}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.CreatedDT)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.UpdatedDT)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={formEditLink}>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton color='secondary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} />\n\t\t</>\n\t);\n};\nexport default FormList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport FormList from '../../application/form/FormList';\n\nconst ListPage = () => (\n\t<MainCard title='Form List'>\n\t\t<FormList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n\tquery GetForm($FormId: ID!) {\n\t\tgetForm(FormId: $FormId) {\n\t\t\tCategoryId\n\t\t\tCreatedBy\n\t\t\tCreatedDT\n\t\t\tFormId\n\t\t\tFormStatus\n\t\t\tFormTypeId\n\t\t\tTemplate\n\t\t\tTitle\n\t\t\tUpdatedBy\n\t\t\tUpdatedDT\n\t\t}\n\t}\n`;\nexport const getFormCategory = /* GraphQL */ `\n\tquery GetFormCategory($CategoryId: ID!) {\n\t\tgetFormCategory(CategoryId: $CategoryId) {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const getOffer = /* GraphQL */ `\n\tquery GetOffer($OfferId: ID!) {\n\t\tgetOffer(OfferId: $OfferId) {\n\t\t\tAgentInfo {\n\t\t\t\tAssistantEmail\n\t\t\t\tDreNumber\n\t\t\t\tEmail\n\t\t\t\tFirstname\n\t\t\t\tLastname\n\t\t\t\tMiddlename\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tBuyerInfo {\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tMiddleName\n\t\t\t\tTitleName\n\t\t\t}\n\t\t\tBuyerType\n\t\t\tContingencies {\n\t\t\t\tAllRemoved\n\t\t\t\tAnyAndAll\n\t\t\t\tFinanceContingency\n\t\t\t\tFinanceContingencyDueDate\n\t\t\t\tFinanceContingencyRemoved\n\t\t\t\tFinanceContingencyRemovedAt\n\t\t\t\tInspectionContingency\n\t\t\t\tInspectionContingencyDueDate\n\t\t\t\tInspectionContingencyRemoved\n\t\t\t\tInspectionContingencyRemovedAt\n\t\t\t\tSaleOfHomeContingency\n\t\t\t\tSaleOfHomeContingencyDueDate\n\t\t\t\tSaleOfHomeContingencyRemoved\n\t\t\t\tSaleOfHomeContingencyRemovedAt\n\t\t\t}\n\t\t\tCounterOffer {\n\t\t\t\tCounterOfferId\n\t\t\t\tForms\n\t\t\t\tPosition\n\t\t\t}\n\t\t\tFirmInfo {\n\t\t\t\tCompanyEmail\n\t\t\t\tCompanyPhone\n\t\t\t\tCompanyname\n\t\t\t\tDreNumber\n\t\t\t}\n\t\t\tFunding {\n\t\t\t\tDownPayment\n\t\t\t\tFicoScore\n\t\t\t\tLoanType\n\t\t\t\tPreapprovedForLoan\n\t\t\t\tPurchaseType\n\t\t\t}\n\t\t\tOffer {\n\t\t\t\tClosingPeriod\n\t\t\t\tFinanceContingency\n\t\t\t\tFurniture\n\t\t\t\tInspectionContingency\n\t\t\t\tOfferPrice\n\t\t\t\tSaleOfHomeContingency\n\t\t\t}\n\t\t\tOfferId\n\t\t\tOfferNo\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tStep {\n\t\t\t\tbuyer_can_submit_offer\n\t\t\t\tdisplay_on_advisor_portal\n\t\t\t\tdisplay_on_seller_dashboard\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\twaiting_seller_to_act\n\t\t\t}\n\t\t\tStepId\n\t\t}\n\t}\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n\tquery GetOfferDocPutUrls(\n\t\t$DocumentType: String!\n\t\t$Documents: [FileItemInput]!\n\t\t$OfferId: ID!\n\t) {\n\t\tgetOfferDocPutUrls(\n\t\t\tDocumentType: $DocumentType\n\t\t\tDocuments: $Documents\n\t\t\tOfferId: $OfferId\n\t\t) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getOfferStep = /* GraphQL */ `\n\tquery GetOfferStep($StepId: ID!) {\n\t\tgetOfferStep(StepId: $StepId) {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const getProperty = /* GraphQL */ `\n\tquery GetProperty($PropertyId: ID!) {\n\t\tgetProperty(PropertyId: $PropertyId) {\n\t\t\tCreatedAt\n\t\t\tListed\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tThumbnail {\n\t\t\t\tid\n\t\t\t\tkey\n\t\t\t\tname\n\t\t\t\tpresignedUrl\n\t\t\t\tsize\n\t\t\t\ttype\n\t\t\t}\n\t\t\tUpdatedAt\n\t\t}\n\t}\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n\tquery GetPropertyThumbnailPutUrl($Photos: [FileItemInput]!, $PropertyId: ID!) {\n\t\tgetPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getSellRequest = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tApprovedBy\n\t\t\tApprovedByAdvisor\n\t\t\tCreatedAt\n\t\t\tCreatedBy\n\t\t\tDTPropertyId\n\t\t\tDataTreeProperties {\n\t\t\t\tCount\n\t\t\t}\n\t\t\tPropertyData {\n\t\t\t\tBedrooms\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tFullBath\n\t\t\t\tLandUse\n\t\t\t\tLivingArea\n\t\t\t\tLotArea\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingOwnershipRight\n\t\t\t\tVestingTypeMapped\n\t\t\t\tVestingTypeOverride\n\t\t\t\tYearBuilt\n\t\t\t\tYearBuiltOverride\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyListPriceRange {\n\t\t\t\tMax\n\t\t\t\tMaxFormatted\n\t\t\t\tMin\n\t\t\t\tMinFormatted\n\t\t\t}\n\t\t\tRequestId\n\t\t\tSellerInfo {\n\t\t\t\tEmail\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tTaxReportTaxResourceMessage\n\t\t\tTaxReportTaxResourceStatus\n\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\tTaxReportTotalViewMessage\n\t\t\tTaxReportTotalViewStatus\n\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\tUpdatedAt\n\t\t\tUpdatedBy\n\t\t}\n\t}\n`;\nexport const listFormCategories = /* GraphQL */ `\n\tquery ListFormCategories {\n\t\tlistFormCategories {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const listForms = /* GraphQL */ `\n\tquery ListForms($limit: Int, $nextToken: String) {\n\t\tlistForms(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listOfferSteps = /* GraphQL */ `\n\tquery ListOfferSteps {\n\t\tlistOfferSteps {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const listOffers = /* GraphQL */ `\n\tquery ListOffers($limit: Int, $nextToken: String) {\n\t\tlistOffers(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tBuyerType\n\t\t\t\tOfferId\n\t\t\t\tOfferNo\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tStepId\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listProperties = /* GraphQL */ `\n\tquery ListProperties($limit: Int, $nextToken: String) {\n\t\tlistProperties(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCreatedAt\n\t\t\t\tListed\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tUpdatedAt\n\t\t\t\tPropertyData {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSellRequests = /* GraphQL */ `\n\tquery ListSellRequests($limit: Int, $nextToken: String) {\n\t\tlistSellRequests(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tApprovedBy\n\t\t\t\tApprovedByAdvisor\n\t\t\t\tCreatedAt\n\t\t\t\tCreatedBy\n\t\t\t\tDTPropertyId\n\t\t\t\tPropertyId\n\t\t\t\tRequestId\n\t\t\t\tTaxReportTaxResourceMessage\n\t\t\t\tTaxReportTaxResourceStatus\n\t\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\t\tTaxReportTotalViewMessage\n\t\t\t\tTaxReportTotalViewStatus\n\t\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\t\tUpdatedAt\n\t\t\t\tUpdatedBy\n\t\t\t\tSellerInfo {\n\t\t\t\t\tEmail\n\t\t\t\t\tFirstName\n\t\t\t\t\tLastName\n\t\t\t\t\tPhone\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n\tquery ListSupportedVestingTypes {\n\t\tlistSupportedVestingTypes\n\t}\n`;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const approveSellRequest = /* GraphQL */ `\n  mutation ApproveSellRequest($RequestId: ID!) {\n    approveSellRequest(RequestId: $RequestId) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const createForm = /* GraphQL */ `\n  mutation CreateForm($Form: ModelFormInput!) {\n    createForm(Form: $Form) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const createSellRequest = /* GraphQL */ `\n  mutation CreateSellRequest($SellerInfo: SellerInfoInput) {\n    createSellRequest(SellerInfo: $SellerInfo) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const deleteForm = /* GraphQL */ `\n  mutation DeleteForm($FormId: ID!) {\n    deleteForm(FormId: $FormId) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const deleteSellRequest = /* GraphQL */ `\n  mutation DeleteSellRequest($RequestId: ID!) {\n    deleteSellRequest(RequestId: $RequestId) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateForm = /* GraphQL */ `\n  mutation UpdateForm($Form: ModelFormInput!, $FormId: ID!) {\n    updateForm(Form: $Form, FormId: $FormId) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const updateOfferStep = /* GraphQL */ `\n  mutation UpdateOfferStep($OfferId: ID!, $StepId: ID!) {\n    updateOfferStep(OfferId: $OfferId, StepId: $StepId) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        CounterOfferId\n        Forms\n        Position\n      }\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      Step {\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        name\n        waiting_seller_to_act\n      }\n      StepId\n    }\n  }\n`;\nexport const updateSellRequest = /* GraphQL */ `\n  mutation UpdateSellRequest(\n    $ListPriceRange: ListPriceRangeInput\n    $RequestId: ID!\n    $VestingType: VestingTypeInput\n    $YearBuilt: YearBuiltInput\n  ) {\n    updateSellRequest(\n      ListPriceRange: $ListPriceRange\n      RequestId: $RequestId\n      VestingType: $VestingType\n      YearBuilt: $YearBuilt\n    ) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateSellRequestProperty = /* GraphQL */ `\n  mutation UpdateSellRequestProperty(\n    $DataTreePropertyId: Int!\n    $RequestId: ID!\n  ) {\n    updateSellRequestProperty(\n      DataTreePropertyId: $DataTreePropertyId\n      RequestId: $RequestId\n    ) {\n      ApprovedBy\n      ApprovedByAdvisor\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        YearBuilt\n        YearBuiltOverride\n        Zip\n      }\n      PropertyId\n      PropertyListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      RequestId\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const updateSellRequestReportStatus = /* GraphQL */ `\n  mutation UpdateSellRequestReportStatus(\n    $ReportStatus: ModelSellRequestReportStatusInput!\n  ) {\n    updateSellRequestReportStatus(ReportStatus: $ReportStatus) {\n      DTPropertyId\n      PropertyId\n      RequestId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceStatusUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","import { Grid, Button } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t<IconChevronDown />\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n","import config from '../config';\n\nexport const formatDate = (date: string | null): string =>\n\t`${\n\t\tdate\n\t\t\t? new Intl.DateTimeFormat(config.locate.country, {\n\t\t\t\t\ttimeZone: config.locate.timezone,\n\t\t\t  }).format(new Date(date))\n\t\t\t: ''\n\t}`;\n"],"sourceRoot":""}