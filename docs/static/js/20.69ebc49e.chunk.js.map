{"version":3,"sources":["views/application/offer/ActionButton.tsx","views/application/offer/OfferActions.tsx","views/application/offer/config.ts","views/application/offer/components/DownloadButton.tsx","views/application/offer/components/ExportButton.tsx","views/application/offer/helper.ts","views/application/offer/components/Contingency.tsx","views/application/offer/OfferEdit.tsx","views/pages/offer/EditPage.tsx","ui-component/extended/AnimateButton.tsx","ui-component/cards/SubCard.tsx","views/application/components/TextRow/index.tsx","views/application/components/UploadFile/Preview.tsx","views/application/components/UploadFile/PreviewFile.tsx","views/application/components/UploadFile/MediaType.ts","views/application/components/UploadFile/index.tsx"],"names":["buttonStylesByStep","variant","color","ActionButton","action","onClick","disabled","content","nextStepId","next_step_id","buttonStyle","Grid","item","Button","type","offerSteps","config","advisorActions","awaitingAdvisorApproval","paBeingCreated","reviewScarRequest","OfferActions","offer","useQuery","gql","listOfferSteps","fetchPolicy","loadingSteps","loading","data","steps","_get","currentStepId","includes","isOfferStep","stepId","isMissingPADocument","isDocumentExits","isMissingSCARDocument","offerId","currentStep","find","id","actions","useMemo","allowedActions","length","reverse","showSnackBar","useSnackBar","useMutation","updateOfferStep","onCompleted","_isEmpty","window","location","reload","onError","error","message","alertSeverity","updateStep","Loader","container","spacing","map","nextStep","variables","OfferId","NewStepId","FILE_CONFIG","useStyles","makeStyles","theme","downloadLink","marginRight","DownloadButton","submissionFiles","classes","renderButton","source","label","files","file","preSignedUrl","className","navigateToExternalUrl","ExportButton","url","CONTINGENCY_STATUS","getContingencyStatus","name","dueDateFormatted","status","dueDate","formatDate","Date","toDateString","Contingency","props","contingencies","title","mappingOfferContingencies","isAllRemoved","fullAddress","isHidden","SubCard","Typography","TableContainer","Table","sx","borderBottom","size","TableHead","TableRow","TableCell","TableBody","contingency","DOCUMENT_TYPE","OfferEdit","graphqlSchema","getOffer","refetch","generateOptions","documentType","query","getOfferDocPutUrls","generateVariables","Documents","DocumentType","useUploadFiles","PAFiles","onPAChange","onFilesChange","uploadPA","uploadFiles","isPAUploading","isUploadLoading","SCARFiles","onSCARChange","uploadSCAR","isSCARUploading","offerNo","scarReportFile","useTheme","useEffect","docPA","docSCAR","convertToFile","Alert","severity","palette","main","isShowPA","isShowSCAR","isUploading","MainCard","secondary","CardContent","gridSpacing","lg","xs","TextRow","getValue","getOfferPrice","row","formatCurrency","direction","UploadFile","onDrop","accept","Divider","CardActions","Stack","justifyContent","AnimateButton","CircularProgress","EditPage","useParams","React","forwardRef","ref","offset1","offset2","children","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","whileHover","hover","whileTap","tap","defaultProps","contentClass","darkTitle","others","border","borderColor","mode","dark","light","primary","boxShadow","p","opacity","defaultValue","uploadImage","position","overflow","borderRadius","cursor","width","minHeight","display","alignItems","verticalAlign","zIndex","imageHover","left","top","background","height","removeButton","margin","padding","marginBottom","Preview","onRemove","preview","md","alignContent","CardMedia","component","src","Fab","uploadFile","removeIcon","renderMedia","Link","href","target","PreviewFile","InsertDriveFile","fileInput","borderWidth","borderStyle","activeStyle","fileContainer","textAlign","previewWrapper","marginTop","maxFiles","useDropzone","getRootProps","getInputProps","isDragActive","fileRejections","removeAt","index","newFiles","splice","clsx","InputLabel","LinearProgress","PreviewComponent","media"],"mappings":"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","file":"static/js/20.69ebc49e.chunk.js","sourcesContent":["/* eslint-disable camelcase */\nimport { Grid, Button } from '@material-ui/core';\n\nconst buttonStylesByStep: { [stepId: number]: TStyle } = {\n\t150: {\n\t\tvariant: 'outlined',\n\t\tcolor: 'secondary',\n\t},\n\t200: {\n\t\tvariant: 'contained',\n\t\tcolor: 'primary',\n\t},\n\t500: {\n\t\tvariant: 'contained',\n\t\tcolor: 'primary',\n\t},\n\t800: {\n\t\tvariant: 'contained',\n\t\tcolor: 'primary',\n\t},\n\t910: {\n\t\tvariant: 'text',\n\t\tcolor: 'error',\n\t},\n};\n\ntype TStyle = {\n\tvariant: string;\n\tcolor: string;\n};\n\nexport type TAction = {\n\taction: string;\n\tform_action: boolean | null;\n\tnext_step_id: number;\n};\n\ntype Props = {\n\taction: TAction;\n\tonClick: () => void;\n\tdisabled?: boolean;\n};\n\nexport const ActionButton = ({ action, onClick, disabled }: Props) => {\n\tconst { action: content, next_step_id: nextStepId } = action;\n\tconst buttonStyle = buttonStylesByStep[nextStepId] as any;\n\treturn (\n\t\t<Grid item>\n\t\t\t<Button type='button' onClick={onClick} disabled={disabled} {...buttonStyle}>\n\t\t\t\t{content}\n\t\t\t</Button>\n\t\t</Grid>\n\t);\n};\n","import { FC, useMemo } from 'react';\nimport { useQuery, gql, ApolloError, useMutation } from '@apollo/client';\nimport { Grid } from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { isDocumentExits } from '../../../helpers/offer';\nimport config from '../../../config';\nimport { TOffer } from '../../../types';\nimport { updateOfferStep } from '../../../graphql/mutations';\nimport { listOfferSteps } from '../../../graphql/queries';\nimport Loader from '../../../ui-component/Loader';\nimport { useSnackBar } from '../../../hooks';\nimport { ActionButton, TAction } from './ActionButton';\n\nconst PA_FIELD = 'SignedPurchaseAgreement';\nconst SCAR_FIELD = 'SCAR';\nconst { offerSteps } = config;\n\nconst advisorActions: number[] = [\n\tofferSteps.awaitingAdvisorApproval,\n\tofferSteps.paBeingCreated,\n\tofferSteps.reviewScarRequest,\n];\n\ntype Props = {\n\toffer: TOffer;\n};\n\nexport const OfferActions: FC<Props> = ({ offer }: Props) => {\n\tconst { loading: loadingSteps, data } = useQuery(gql(listOfferSteps), {\n\t\tfetchPolicy: 'cache-first',\n\t});\n\n\tconst steps = _get(data, 'listOfferSteps', []);\n\tconst currentStepId: number = +_get(offer, 'StepId', 0);\n\n\t// Only show advisor actions\n\tif (!advisorActions.includes(currentStepId)) return <></>;\n\n\tconst isOfferStep = (stepId: number) => currentStepId === stepId;\n\n\tconst isMissingPADocument =\n\t\tisOfferStep(offerSteps.paBeingCreated) && !isDocumentExits(offer, PA_FIELD);\n\n\tconst isMissingSCARDocument =\n\t\tisOfferStep(offerSteps.reviewScarRequest) &&\n\t\t!isDocumentExits(offer, SCAR_FIELD);\n\n\t// No action for missing document offer\n\tif (isMissingPADocument || isMissingSCARDocument) return <></>;\n\n\tconst offerId = _get(offer, 'OfferId');\n\tconst currentStep = steps.find(\n\t\t({ id }: { id: number }) => id === currentStepId\n\t);\n\tconst actions = useMemo(() => {\n\t\tconst allowedActions = _get(currentStep, 'allowed_actions', []);\n\t\tif (allowedActions.length) return [...allowedActions].reverse();\n\t\treturn allowedActions;\n\t}, [currentStep]);\n\n\t// Update step mutation\n\tconst showSnackBar = useSnackBar();\n\tconst [updateStep, { loading }] = useMutation(gql(updateOfferStep), {\n\t\tonCompleted: (data: { updateOfferStep: TOffer | null }) => {\n\t\t\tif (_isEmpty(data) || _isEmpty(data.updateOfferStep)) return;\n\t\t\twindow.location.reload();\n\t\t},\n\t\tonError: (error: ApolloError) => {\n\t\t\tshowSnackBar({\n\t\t\t\tmessage: _get(error, 'message', 'Something went wrong'),\n\t\t\t\tvariant: 'alert',\n\t\t\t\talertSeverity: 'error',\n\t\t\t});\n\t\t},\n\t});\n\n\tconst updateStepById = (nextStep: number) => () =>\n\t\tupdateStep({\n\t\t\tvariables: { OfferId: offerId, NewStepId: nextStep },\n\t\t});\n\n\treturn (\n\t\t<>\n\t\t\t{(loading || loadingSteps) && <Loader />}\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t{actions.map((action: TAction) => (\n\t\t\t\t\t<ActionButton\n\t\t\t\t\t\tkey={`${offerId}-${action.next_step_id}`}\n\t\t\t\t\t\taction={action}\n\t\t\t\t\t\tonClick={updateStepById(action.next_step_id)}\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default OfferActions;\n","export const FILE_CONFIG = {\n\tsize: 5242880,\n\ttype: 'application/pdf',\n};\n\nexport const CONTINGENCY_STEP = 500;\n","/* eslint-disable camelcase */\nimport { Button, makeStyles } from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { navigateToExternalUrl } from '../../../../helpers';\n\ntype TSubmissionFile = {\n\tFiles: [\n\t\t{\n\t\t\tpresignedUrl: string;\n\t\t}\n\t];\n\tQuestionName: string;\n};\n\ntype Props = {\n\tsubmissionFiles: TSubmissionFile[];\n};\n\nconst PRE_APPROVAL = 'fd_upload_buyer_preapproval_letter';\nconst PROOF_OF_FUNDS = 'fd_upload_buyer_proof_of_funds';\nconst FUND_PROOF = 'fundingtype_fund_proof';\n\nconst useStyles = makeStyles(theme => ({\n\tdownloadLink: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nconst DownloadButton = ({ submissionFiles }: Props) => {\n\tconst classes = useStyles();\n\tconst renderButton = (\n\t\tsource: TSubmissionFile[],\n\t\ttype: string,\n\t\tlabel: string\n\t) => {\n\t\tconst files = source.find((file: TSubmissionFile) => {\n\t\t\tconst questionName = _get(file, ['QuestionName'], '');\n\t\t\treturn questionName === type;\n\t\t});\n\t\tconst preSignedUrl = _get(files, ['Files', '0', 'presignedUrl']);\n\t\tif (_isEmpty(preSignedUrl)) return <></>;\n\t\treturn (\n\t\t\t<Button\n\t\t\t\tvariant='outlined'\n\t\t\t\tcolor='secondary'\n\t\t\t\tclassName={classes.downloadLink}\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => navigateToExternalUrl(preSignedUrl)}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Button>\n\t\t);\n\t};\n\n\tif (_isEmpty(submissionFiles)) return <></>;\n\n\treturn (\n\t\t<>\n\t\t\t{renderButton(submissionFiles, PRE_APPROVAL, 'Pre-Approval Letter')}\n\t\t\t{renderButton(submissionFiles, PROOF_OF_FUNDS, 'Proof of Funds')}\n\t\t\t{renderButton(submissionFiles, FUND_PROOF, 'Proof of Funds')}\n\t\t</>\n\t);\n};\nexport default DownloadButton;\n","import _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { navigateToExternalUrl } from '../../../../helpers';\n\ntype FileExport = {\n\tlabel: string;\n\turl: string;\n};\n\ntype Props = {\n\tfile: FileExport;\n};\n\nconst useStyles = makeStyles(theme => ({\n\tdownloadLink: {\n\t\tmarginRight: theme.spacing(2),\n\t},\n}));\n\nconst ExportButton = ({ file }: Props) => {\n\tconst classes = useStyles();\n\tconst label = _get(file, ['label']);\n\tconst url = _get(file, ['url']);\n\tif (_isEmpty(url) || _isEmpty(label)) return <></>;\n\n\treturn (\n\t\t<Button\n\t\t\tvariant='outlined'\n\t\t\tcolor='secondary'\n\t\t\tclassName={classes.downloadLink}\n\t\t\ttype='button'\n\t\t\tonClick={() => navigateToExternalUrl(url)}\n\t\t>\n\t\t\t{label}\n\t\t</Button>\n\t);\n};\n\nexport default ExportButton;\n","import _get from 'lodash.get';\nimport { formatDate } from '../../../helpers/date';\nimport { TOffer } from '../../../types';\n\nexport const CONTINGENCY_STATUS = {\n\tdone: 'Done',\n\tinProcess: 'In Process',\n\toverdue: 'OVERDUE',\n};\n\nexport const getContingencyStatus = (offer: TOffer, name: string) => {\n\tconst dueDate = _get(offer, ['Contingencies', `${name}DueDate`]);\n\tlet dueDateFormatted;\n\tlet status;\n\n\tif (dueDate) {\n\t\tdueDateFormatted = formatDate(dueDate);\n\t\tstatus =\n\t\t\tformatDate(new Date().toDateString()) <= dueDateFormatted\n\t\t\t\t? CONTINGENCY_STATUS.inProcess\n\t\t\t\t: CONTINGENCY_STATUS.overdue;\n\t}\n\n\tconst isRemoved = _get(offer, ['Contingencies', `${name}Removed`]);\n\tif (isRemoved === 'Yes') {\n\t\tstatus = CONTINGENCY_STATUS.done;\n\t}\n\n\treturn {\n\t\tstatus,\n\t\tdueDate: dueDateFormatted,\n\t};\n};\n","import {\n\tTable,\n\tTableBody,\n\tTableContainer,\n\tTypography,\n\tTableRow,\n\tTableCell,\n\tTableHead,\n} from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { TOffer } from '../../../../types';\nimport SubCard from '../../../../ui-component/cards/SubCard';\nimport { getContingencyStatus } from '../helper';\nimport { CONTINGENCY_STEP } from '../config';\n\ntype Props = {\n\toffer: TOffer;\n};\n\ntype TContingency = {\n\tname: string;\n\ttitle: string;\n\tdueDate: string | undefined;\n\tstatus: string | undefined;\n};\n\nexport const mappingOfferContingencies = (\n\toffer: TOffer\n): Array<TContingency> => [\n\t{\n\t\tname: 'FinanceContingency',\n\t\ttitle: 'Finance Contingency Removal',\n\t\t...getContingencyStatus(offer, 'FinanceContingency' || ''),\n\t},\n\t{\n\t\tname: 'InspectionContingency',\n\t\ttitle: 'Inspection Contingency Removal',\n\t\t...getContingencyStatus(offer, 'InspectionContingency' || ''),\n\t},\n\t{\n\t\tname: 'SaleOfHomeContingency',\n\t\ttitle: 'Homesale Contingency Removal',\n\t\t...getContingencyStatus(offer, 'SaleOfHomeContingency' || ''),\n\t},\n];\n\nconst Contingency = (props: Props) => {\n\tconst { offer } = props;\n\tconst contingencies = mappingOfferContingencies(offer);\n\tconst isAllRemoved = _get(contingencies, 'AllRemoved', false);\n\tconst fullAddress = _get(offer, ['PropertyData', 'FullAddress']);\n\tconst stepId = _get(offer, 'StepId', 0);\n\tconst isHidden = stepId < CONTINGENCY_STEP;\n\n\tif (_isEmpty(contingencies) || isAllRemoved || isHidden) return <></>;\n\n\treturn (\n\t\t<SubCard title='Contingencies Status'>\n\t\t\t<Typography variant='subtitle2'>{fullAddress}</Typography>\n\t\t\t<TableContainer>\n\t\t\t\t<Table\n\t\t\t\t\tsx={{\n\t\t\t\t\t\t'& td': {\n\t\t\t\t\t\t\tborderBottom: 'none',\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tsize='small'\n\t\t\t\t>\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell>Type</TableCell>\n\t\t\t\t\t\t\t<TableCell>Due Date</TableCell>\n\t\t\t\t\t\t\t<TableCell>Status</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{contingencies.map((contingency: TContingency) => (\n\t\t\t\t\t\t\t<TableRow key={contingency.title}>\n\t\t\t\t\t\t\t\t<TableCell variant='head'>{contingency.title}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell variant='head'>{contingency.dueDate || 'n/a'}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell variant='head'>{contingency.status || 'n/a'}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</SubCard>\n\t);\n};\n\nexport default Contingency;\n","import {\n\tGrid,\n\tTable,\n\tTableBody,\n\tTableContainer,\n\tAlert,\n\tuseTheme,\n\tButton,\n\tStack,\n\tDivider,\n\tCardContent,\n\tCardActions,\n\tCircularProgress,\n} from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useQuery, gql } from '@apollo/client';\nimport { useEffect } from 'react';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { gridSpacing } from '../../../store/constant';\nimport { TOffer, TUploadFile } from '../../../types';\nimport graphqlSchema from '../../../graphql';\nimport Loader from '../../../ui-component/Loader';\nimport { getOfferPrice, formatCurrency, convertToFile } from '../../../helpers';\nimport TextRow from '../components/TextRow';\nimport UploadFile from '../components/UploadFile';\nimport OfferActions from './OfferActions';\nimport { FILE_CONFIG } from './config';\nimport { useUploadFiles } from '../../../hooks';\nimport config from '../../../config';\nimport DownloadButton from './components/DownloadButton';\nimport ExportButton from './components/ExportButton';\nimport Contingency from './components/Contingency';\n\ntype Props = {\n\tid: string;\n};\n\nconst DOCUMENT_TYPE = {\n\tPA: 'SignedPurchaseAgreement',\n\tSCAR: 'SCAR',\n};\n\nconst OfferEdit = ({ id }: Props) => {\n\tconst { loading, error, data, refetch } = useQuery(\n\t\tgql(graphqlSchema.getOffer),\n\t\t{\n\t\t\tvariables: { OfferId: id },\n\t\t}\n\t);\n\n\tconst generateOptions = (documentType = DOCUMENT_TYPE.SCAR) => ({\n\t\tname: 'getOfferDocPutUrls',\n\t\tquery: graphqlSchema.getOfferDocPutUrls,\n\t\tgenerateVariables: (files: TUploadFile[]) => ({\n\t\t\tDocuments: files,\n\t\t\tOfferId: id,\n\t\t\tDocumentType: documentType,\n\t\t}),\n\t\trefetch,\n\t});\n\n\tconst {\n\t\tfiles: PAFiles,\n\t\tonFilesChange: onPAChange,\n\t\tuploadFiles: uploadPA,\n\t\tisUploadLoading: isPAUploading,\n\t} = useUploadFiles(generateOptions(DOCUMENT_TYPE.PA));\n\n\tconst {\n\t\tfiles: SCARFiles,\n\t\tonFilesChange: onSCARChange,\n\t\tuploadFiles: uploadSCAR,\n\t\tisUploadLoading: isSCARUploading,\n\t} = useUploadFiles(generateOptions());\n\n\tconst offer = _get(data, 'getOffer', {});\n\tconst currentStepId = +_get(offer, 'StepId', 0);\n\tconst offerNo = _get(offer, 'OfferNo', '');\n\tconst submissionFiles = _get(offer, 'SubmissionFiles', []);\n\tconst scarReport = _get(offer, ['SCARReport', 'PresignedUrl'], []);\n\tconst scarReportFile = { url: scarReport, label: 'Export SCAR Report' };\n\n\tconst theme = useTheme();\n\n\tuseEffect(() => {\n\t\tconst offer = _get(data, 'getOffer', {});\n\t\tconst docPA = _get(offer, 'SignedPurchaseAgreement') || [];\n\t\tconst docSCAR = _get(offer, 'SCAR') || [];\n\n\t\tif (!_isEmpty(docPA)) onPAChange(docPA.map(convertToFile));\n\t\tif (!_isEmpty(docSCAR)) onSCARChange(docSCAR.map(convertToFile));\n\t}, [data]);\n\n\tif (loading) return <Loader />;\n\n\tif (error && _isEmpty(offer)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tOffer not found\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst onUpdate = () => {\n\t\tuploadPA();\n\t\tuploadSCAR();\n\t};\n\n\tconst isShowPA = currentStepId === config.offerSteps.paBeingCreated;\n\tconst isShowSCAR = currentStepId === config.offerSteps.reviewScarRequest;\n\tconst isUploading = isPAUploading || isSCARUploading;\n\n\treturn (\n\t\t<MainCard\n\t\t\ttitle={offerNo}\n\t\t\tcontent={false}\n\t\t\tsecondary={<OfferActions offer={offer} />}\n\t\t>\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={gridSpacing}>\n\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t<SubCard title='Offer Information'>\n\t\t\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t'& td': {\n\t\t\t\t\t\t\t\t\t\t\tborderBottom: 'none',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer> data={offer} source='OfferNo' label='Offer No' />\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='PropertyData.FullAddress'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Property Address'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='PropertyData.OwnerNames'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Sellers'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tgetValue={getOfferPrice}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Offer Price'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.PurchaseType'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Funding'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.LoanType'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Loan Type'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tgetValue={row => formatCurrency(_get(row, 'Funding.DownPayment'))}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Down Payment'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Step.messages.advisor'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Status'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Contingency offer={offer} />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t<Grid container direction='column' spacing={gridSpacing}>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<SubCard title='Signed Purchase Agreement'>\n\t\t\t\t\t\t\t\t\t<UploadFile\n\t\t\t\t\t\t\t\t\t\tname='PA'\n\t\t\t\t\t\t\t\t\t\tfiles={PAFiles}\n\t\t\t\t\t\t\t\t\t\tonDrop={onPAChange}\n\t\t\t\t\t\t\t\t\t\taccept={FILE_CONFIG.type}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isShowPA}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<SubCard title='SCAR'>\n\t\t\t\t\t\t\t\t\t<UploadFile\n\t\t\t\t\t\t\t\t\t\tname='SCAR'\n\t\t\t\t\t\t\t\t\t\tfiles={SCARFiles}\n\t\t\t\t\t\t\t\t\t\tonDrop={onSCARChange}\n\t\t\t\t\t\t\t\t\t\taccept={FILE_CONFIG.type}\n\t\t\t\t\t\t\t\t\t\tdisabled={!isShowSCAR}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Stack direction='row' justifyContent='flex-end'>\n\t\t\t\t\t\t<AnimateButton>\n\t\t\t\t\t\t\t<ExportButton file={scarReportFile} />\n\t\t\t\t\t\t\t<DownloadButton submissionFiles={submissionFiles} />\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tdisabled={(!isShowPA && !isShowSCAR) || isUploading}\n\t\t\t\t\t\t\t\tonClick={onUpdate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{isUploading ? (\n\t\t\t\t\t\t\t\t\t<CircularProgress size='1.5rem' color='secondary' />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t'Update'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</AnimateButton>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</MainCard>\n\t);\n};\n\nexport default OfferEdit;\n","import { useParams } from 'react-router-dom';\nimport OfferEdit from '../../application/offer/OfferEdit';\n\nconst EditPage = () => {\n\tconst { id } = useParams<{ id: string }>();\n\n\treturn <OfferEdit id={id} />;\n};\n\nexport default EditPage;\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\nexport type ScaleProps = {\n\thover: number | string | undefined;\n\ttap: number | string | undefined;\n};\n\nexport interface AnimateButtonProps {\n\tchildren?: React.ReactNode;\n\ttype?: 'slide' | 'scale' | 'rotate';\n\tdirection?: 'up' | 'down' | 'left' | 'right';\n\toffset?: number;\n\tscale?: ScaleProps;\n}\n\n// -----------------------|| ANIMATION BUTTON ||-----------------------//\n\nconst AnimateButton = React.forwardRef(\n\t(\n\t\t{ children, type, direction, offset, scale }: AnimateButtonProps,\n\t\tref: Ref<HTMLDivElement>\n\t) => {\n\t\tlet offset1;\n\t\tlet offset2;\n\t\tswitch (direction) {\n\t\t\tcase 'up':\n\t\t\tcase 'left':\n\t\t\t\toffset1 = offset;\n\t\t\t\toffset2 = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\tcase 'down':\n\t\t\tdefault:\n\t\t\t\toffset1 = 0;\n\t\t\t\toffset2 = offset;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst [x, cycleX] = useCycle(offset1, offset2);\n\t\tconst [y, cycleY] = useCycle(offset1, offset2);\n\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ rotate: 360 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\t\t\trepeatType: 'loop',\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\trepeatDelay: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t\tcase 'slide':\n\t\t\t\tif (direction === 'up' || direction === 'down') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tanimate={{ y: y !== undefined ? y : '' }}\n\t\t\t\t\t\t\tonHoverEnd={() => cycleY()}\n\t\t\t\t\t\t\tonHoverStart={() => cycleY()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ x: x !== undefined ? x : '' }}\n\t\t\t\t\t\tonHoverEnd={() => cycleX()}\n\t\t\t\t\t\tonHoverStart={() => cycleX()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\n\t\t\tcase 'scale':\n\t\t\tdefault:\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\twhileHover={{ scale: scale?.hover }}\n\t\t\t\t\t\twhileTap={{ scale: scale?.tap }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t}\n\t}\n);\n\nAnimateButton.defaultProps = {\n\ttype: 'scale',\n\toffset: 10,\n\tdirection: 'right',\n\tscale: {\n\t\thover: 1,\n\t\ttap: 0.9,\n\t},\n};\n\nexport default AnimateButton;\n","import { ReactNode } from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tDivider,\n\tTypography,\n} from '@material-ui/core';\n\nexport interface SubCardProps {\n\tchildren: ReactNode | string | null;\n\tcontent?: boolean;\n\tclassName?: string;\n\tcontentClass?: string;\n\tdarkTitle?: boolean;\n\tsecondary?: ReactNode | string | {};\n\tsx?: {};\n\ttitle?: ReactNode | string | {};\n}\n\n// -----------------------|| CUSTOM SUB CARD ||-----------------------//\n\nconst SubCard = ({\n\tchildren,\n\tcontent,\n\tcontentClass,\n\tdarkTitle,\n\tsecondary,\n\tsx = {},\n\ttitle,\n\t...others\n}: SubCardProps) => {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tborder: '1px solid',\n\t\t\t\tborderColor:\n\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t':hover': {\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t? '0 2px 14px 0 rgb(33 150 243 / 10%)'\n\t\t\t\t\t\t\t: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n\t\t\t\t},\n\t\t\t\t...sx,\n\t\t\t}}\n\t\t\t{...others}\n\t\t>\n\t\t\t{/* card header and action */}\n\t\t\t{!darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h5'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h4'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* content & header divider */}\n\t\t\t{title && (\n\t\t\t\t<Divider\n\t\t\t\t\tsx={{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* card content */}\n\t\t\t{content && (\n\t\t\t\t<CardContent sx={{ p: 2.5 }} className={contentClass || ''}>\n\t\t\t\t\t{children}\n\t\t\t\t</CardContent>\n\t\t\t)}\n\t\t\t{!content && children}\n\t\t</Card>\n\t);\n};\n\nSubCard.defaultProps = {\n\tcontent: true,\n};\n\nexport default SubCard;\n","import _get from 'lodash.get';\nimport { TableRow, TableCell } from '@material-ui/core';\n\ntype TextRowProps<T> = {\n\tdata: T;\n\tsource?: string;\n\tlabel: string;\n\tgetValue?: (d: T) => string;\n\tdefaultValue?: string;\n};\n\nfunction TextRow<T>({\n\tdata,\n\tsource = '',\n\tlabel,\n\tgetValue,\n\tdefaultValue,\n}: TextRowProps<T>) {\n\treturn (\n\t\t<TableRow>\n\t\t\t<TableCell variant='head'>{label}</TableCell>\n\t\t\t<TableCell>\n\t\t\t\t{getValue ? getValue(data) : _get(data, source) || defaultValue || ''}\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t);\n}\n\nexport default TextRow;\n","import { Grid, CardMedia, Fab, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/styles';\nimport { TFile } from '../../../../types';\n\nconst useStyles = makeStyles(() => ({\n\tuploadImage: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\twidth: '100%',\n\t\tminHeight: '100px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n\timageHover: {\n\t\tposition: 'absolute',\n\t\topacity: 0,\n\t\tzIndex: -1,\n\t\tleft: '0',\n\t\ttop: '0',\n\t\tbackground: 'rgba(255, 255, 255, .8)',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tdisplay: 'inline-flex',\n\t\ttransition: 'all 0.3s ease',\n\t},\n\tremoveButton: {\n\t\tmargin: 'auto',\n\t},\n\tname: {\n\t\tpadding: '12px 0',\n\t\tmarginBottom: '12px',\n\t\tposition: 'relative',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n}));\n\ntype Props = {\n\tfile: TFile;\n\tonRemove: Function;\n};\n\nconst Preview = (props: Props) => {\n\tconst { file, onRemove } = props;\n\tconst classes = useStyles();\n\n\treturn file.preview ? (\n\t\t<Grid item xs={12} md={6} lg={4} alignContent='center' alignItems='center'>\n\t\t\t<div className={classes.uploadImage}>\n\t\t\t\t<CardMedia component='img' src={file.preview} title='file' />\n\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tclassName={classes.removeButton}\n\t\t\t\t\t\tonClick={() => onRemove()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</Fab>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Grid>\n\t) : (\n\t\t<Grid item xs={12} alignContent='center' alignItems='center'>\n\t\t\t<div className={classes.name}>\n\t\t\t\t<Typography>{file.name}</Typography>\n\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\tclassName={classes.removeButton}\n\t\t\t\t\t\tonClick={() => onRemove()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</Fab>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Grid>\n\t);\n};\n\nexport default Preview;\n","import { Grid, Link } from '@material-ui/core';\nimport MuiTypography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tClose as CloseIcon,\n\tInsertDriveFile as InsertDriveFileIcon,\n} from '@material-ui/icons';\nimport { TFile } from '../../../../types';\n\nconst useStyles = makeStyles(theme => ({\n\tuploadFile: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t\tcursor: 'pointer',\n\t\t},\n\t},\n\timageHover: {\n\t\topacity: 0,\n\t},\n\tremoveButton: {\n\t\tmargin: 'auto',\n\t},\n\tremoveIcon: {\n\t\tcolor: theme.palette.primary.main,\n\t},\n\tname: {\n\t\tpadding: '12px 0',\n\t\tmarginBottom: '12px',\n\t\tposition: 'relative',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n}));\n\ntype Props = {\n\tfile: TFile;\n\tonRemove: Function;\n};\n\nconst renderMedia = (file: TFile) => {\n\tconst { preview, name } = file;\n\n\tconst props = _isEmpty(preview)\n\t\t? ''\n\t\t: {\n\t\t\t\tcomponent: Link,\n\t\t\t\thref: preview,\n\t\t\t\ttarget: '_blank',\n\t\t  };\n\n\treturn (\n\t\t<MuiTypography variant='body2' color='primary' display='block' {...props}>\n\t\t\t{name}\n\t\t</MuiTypography>\n\t);\n};\n\nconst PreviewFile = (props: Props) => {\n\tconst { file, onRemove } = props;\n\tconst classes = useStyles();\n\treturn (\n\t\t<Grid item xs={12} md={6} lg={4} alignContent='center' alignItems='center'>\n\t\t\t<div className={classes.uploadFile}>\n\t\t\t\t<InsertDriveFileIcon />\n\t\t\t\t{renderMedia(file)}\n\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t<CloseIcon onClick={() => onRemove()} className={classes.removeIcon} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Grid>\n\t);\n};\n\nexport default PreviewFile;\n","export default {\n\tpdf: 'application/pdf',\n};\n","import { Grid, InputLabel, Button, LinearProgress } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useEffect } from 'react';\nimport Preview from './Preview';\nimport PreviewFile from './PreviewFile';\nimport { useSnackBar } from '../../../../hooks';\nimport { TFile } from '../../../../types';\nimport media from './MediaType';\n\nconst useStyles = makeStyles(() => ({\n\tfileInput: {\n\t\tbackground: '#fcfcfe',\n\t\twidth: '100%',\n\t\tborderWidth: 2,\n\t\tborderRadius: 2,\n\t\tborderColor: '#eee',\n\t\tborderStyle: 'dashed',\n\t},\n\tactiveStyle: {\n\t\tborderColor: '#2196f3',\n\t},\n\tfileContainer: {\n\t\tpadding: '30px 0',\n\t\ttextAlign: 'center',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t},\n\tuploadImage: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\twidth: '100%',\n\t\tminHeight: '100px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n\timageHover: {\n\t\tposition: 'absolute',\n\t\topacity: 0,\n\t\tzIndex: -1,\n\t\tleft: '0',\n\t\ttop: '0',\n\t\tbackground: 'rgba(255, 255, 255, .8)',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tdisplay: 'inline-flex',\n\t\ttransition: 'all 0.3s ease',\n\t},\n\tremoveButton: {\n\t\tmargin: 'auto',\n\t},\n\tpreviewWrapper: {\n\t\tmarginTop: '12px',\n\t},\n}));\n\ntype Props = {\n\tfiles: TFile[];\n\taccept?: string;\n\tmaxFiles?: number;\n\tdisabled?: boolean;\n\tname?: string;\n\tonDrop: (files: TFile[]) => void;\n\tloading?: boolean;\n};\n\nconst UploadFile = (props: Props) => {\n\tconst {\n\t\tfiles,\n\t\taccept = 'image/*',\n\t\tmaxFiles = 10,\n\t\tonDrop,\n\t\tdisabled,\n\t\tname,\n\t\tloading = false,\n\t} = props;\n\tconst classes = useStyles();\n\tconst { getRootProps, getInputProps, isDragActive, fileRejections } =\n\t\tuseDropzone({\n\t\t\tonDrop,\n\t\t\taccept,\n\t\t\tmaxFiles,\n\t\t});\n\tconst showSnackBar = useSnackBar();\n\n\tuseEffect(() => {\n\t\tif (_isEmpty(fileRejections)) return;\n\t\tconst message = _get(fileRejections, '0.errors.0.message', '');\n\t\tshowSnackBar({\n\t\t\tmessage,\n\t\t\tvariant: 'alert',\n\t\t\talertSeverity: 'error',\n\t\t});\n\t}, [fileRejections]);\n\n\tconst removeAt = (index: number) => () => {\n\t\tconst newFiles = [...files];\n\t\tnewFiles.splice(index, 1);\n\t\tonDrop(newFiles);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\t{...getRootProps({\n\t\t\t\t\tclassName: clsx(classes.fileInput, {\n\t\t\t\t\t\t[classes.activeStyle]: isDragActive,\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t<InputLabel className={classes.fileContainer}>\n\t\t\t\t\t<CloudUploadIcon />\n\t\t\t\t\tDrop file here to upload\n\t\t\t\t</InputLabel>\n\t\t\t</Button>\n\t\t\t<input {...getInputProps()} name={name} />\n\t\t\t{loading ? (\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<LinearProgress />\n\t\t\t\t</Grid>\n\t\t\t) : (\n\t\t\t\t<Grid container spacing={1} className={classes.previewWrapper}>\n\t\t\t\t\t{files.map((file, index) => {\n\t\t\t\t\t\tconst { type } = file;\n\t\t\t\t\t\tconst PreviewComponent = type === media.pdf ? PreviewFile : Preview;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PreviewComponent\n\t\t\t\t\t\t\t\tfile={file}\n\t\t\t\t\t\t\t\tkey={file.name}\n\t\t\t\t\t\t\t\tonRemove={removeAt(index)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Grid>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default UploadFile;\n"],"sourceRoot":""}