{"version":3,"sources":["views/application/properties/ListHeader.tsx","views/application/properties/PropertyList.tsx","views/property-pages/ListPage.tsx","graphql/queries.ts","utils/table.ts","views/application/properties/LoadMore.tsx","../node_modules/@material-ui/icons/EditTwoTone.js"],"names":["headCells","id","numeric","disablePadding","label","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","undefined","TableSortLabel","active","direction","onClick","property","event","className","pr","table","minWidth","PropertyList","useQuery","gql","listProperties","variables","limit","config","pagination","fetchPolicy","loading","error","data","fetchMore","rows","_get","nextToken","theme","useTheme","history","useHistory","React","useState","setOrder","setOrderBy","selected","setSelected","Loader","_isEmpty","Alert","severity","palette","main","TableContainer","Table","size","length","target","newSelectedId","n","PropertyId","TableBody","stableSort","getComparator","row","index","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","params","slice","concat","handleClick","role","tabIndex","component","scope","PropertyData","StreetAddress","County","State","Zip","City","PropertyNo","IconButton","push","fontSize","LoadMore","onLoadMore","disabled","ListPage","MainCard","title","getForm","getProperty","listFormCategories","listForms","listSellRequests","descendingComparator","a","b","array","comparator","stabilizedThis","el","sort","LoadMoreButton","withStyles","root","borderRadius","Button","toolbar","container","justifyContent","type","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_createSvgIcon","_jsxRuntime","_default","jsxs","Fragment","children","jsx","d","opacity"],"mappings":"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","file":"static/js/13.ceafc438.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'PropertyId',\n\t\tnumeric: false,\n\t\tdisablePadding: true,\n\t\tlabel: 'ID',\n\t},\n\t{\n\t\tid: 'PropertyData.StreetAddress',\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: 'Street Address',\n\t},\n\t{\n\t\tid: 'PropertyData.County',\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: 'County',\n\t},\n\t{\n\t\tid: 'PropertyData.State',\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: 'State',\n\t},\n\t{\n\t\tid: 'PropertyData.Zip',\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: 'Zip',\n\t},\n\t{\n\t\tid: 'PropertyData.City',\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: 'City',\n\t},\n\t{\n\t\tid: 'PropertyNo',\n\t\tnumeric: true,\n\t\tdisablePadding: false,\n\t\tlabel: 'Property No',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler =\n\t\t(property: string) => (event: React.SyntheticEvent) => {\n\t\t\tonRequestSort(event, property);\n\t\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import React from 'react';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCheckbox,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tAlert,\n\tuseTheme,\n\tIconButton,\n} from '@material-ui/core';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from 'react-router';\nimport { TProperty, ArrangementOrder } from '../../../types';\nimport { listProperties } from '../../../graphql/queries';\n\nimport { getComparator, stableSort } from '../../../utils/table';\nimport Loader from '../../../ui-component/Loader';\nimport Header from './ListHeader';\nimport LoadMore from './LoadMore';\nimport config from '../../../config';\n\nconst useStyles = makeStyles(() => ({\n\ttable: {\n\t\tminWidth: '750px',\n\t},\n}));\n\nconst PropertyList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(listProperties), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t});\n\n\tconst rows: TProperty[] = _get(data, 'listProperties.items', []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listProperties.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst [order, setOrder] = React.useState<ArrangementOrder>('asc');\n\tconst [orderBy, setOrderBy] = React.useState<string>('PropertyId');\n\tconst [selected, setSelected] = React.useState<string[]>([]);\n\n\tif (loading) return <Loader />;\n\tif (error || _isEmpty(data)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: { limit: config.pagination.limit, nextToken },\n\t\t});\n\t};\n\n\tconst handleRequestSort = (event: React.SyntheticEvent, property: string) => {\n\t\tconst isAsc = orderBy === property && order === 'asc';\n\t\tsetOrder(isAsc ? 'desc' : 'asc');\n\t\tsetOrderBy(property);\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tif (event.target.checked) {\n\t\t\tconst newSelectedId: string[] = rows.map(n => n.PropertyId);\n\t\t\tsetSelected(newSelectedId);\n\t\t\treturn;\n\t\t}\n\t\tsetSelected([]);\n\t};\n\n\tconst handleClick = (name: string) => {\n\t\tconst selectedIndex = selected.indexOf(name);\n\t\tlet newSelected: string[] = [];\n\n\t\tlet params = [];\n\t\tswitch (selectedIndex) {\n\t\t\tcase -1:\n\t\t\t\tparams = [selected, name];\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\tparams = [selected.slice(1)];\n\t\t\t\tbreak;\n\t\t\tcase selected.length - 1:\n\t\t\t\tparams = [selected.slice(0, -1)];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tparams = [\n\t\t\t\t\tselected.slice(0, selectedIndex),\n\t\t\t\t\tselected.slice(selectedIndex + 1),\n\t\t\t\t];\n\t\t\t\tbreak;\n\t\t}\n\t\tnewSelected = newSelected.concat(...params);\n\t\tsetSelected(newSelected);\n\t};\n\n\tconst editProperty = (id: string) => {\n\t\thistory.push(`/property/${id}`)\n\t}\n\n\tconst isSelected = (name: string) => selected.indexOf(name) !== -1;\n\n\treturn (\n\t\t<>\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TProperty>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.PropertyId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClick(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.PropertyId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component='th' id={labelId} scope='row' padding='none'>\n\t\t\t\t\t\t\t\t\t\t\t{row.PropertyId}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='right'>{row.PropertyData.StreetAddress}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='right'>{row.PropertyData.County}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='right'>{row.PropertyData.State}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='right'>{row.PropertyData.Zip}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='right'>{row.PropertyData.City}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pr: 3 }} align='right'>\n\t\t\t\t\t\t\t\t\t\t\t{row.PropertyNo}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton color='primary' onClick={() => editProperty(row.PropertyId)}>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} />\n\t\t</>\n\t);\n};\n\nexport default PropertyList;\n","// material-ui\nimport MainCard from '../../ui-component/cards/MainCard';\n\n// project imports\nimport PropertyList from '../application/properties/PropertyList';\n\nconst ListPage = () => (\n\t<MainCard title='Properties List'>\n\t\t<PropertyList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n\tquery GetForm($FormId: ID!) {\n\t\tgetForm(FormId: $FormId) {\n\t\t\tCategoryId\n\t\t\tCreatedBy\n\t\t\tCreatedDT\n\t\t\tFormId\n\t\t\tFormStatus\n\t\t\tFormTypeId\n\t\t\tTemplate\n\t\t\tTitle\n\t\t\tUpdatedBy\n\t\t\tUpdatedDT\n\t\t}\n\t}\n`;\nexport const getFormCategory = /* GraphQL */ `\n\tquery GetFormCategory($CategoryId: ID!) {\n\t\tgetFormCategory(CategoryId: $CategoryId) {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const getOffer = /* GraphQL */ `\n\tquery GetOffer($OfferId: ID!) {\n\t\tgetOffer(OfferId: $OfferId) {\n\t\t\tAgentInfo {\n\t\t\t\tAssistantEmail\n\t\t\t\tDreNumber\n\t\t\t\tEmail\n\t\t\t\tFirstname\n\t\t\t\tLastname\n\t\t\t\tMiddlename\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tBuyerInfo {\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tMiddleName\n\t\t\t\tTitleName\n\t\t\t}\n\t\t\tBuyerType\n\t\t\tContingencies {\n\t\t\t\tAllRemoved\n\t\t\t\tAnyAndAll\n\t\t\t\tFinanceContingency\n\t\t\t\tFinanceContingencyDueDate\n\t\t\t\tFinanceContingencyRemoved\n\t\t\t\tFinanceContingencyRemovedAt\n\t\t\t\tInspectionContingency\n\t\t\t\tInspectionContingencyDueDate\n\t\t\t\tInspectionContingencyRemoved\n\t\t\t\tInspectionContingencyRemovedAt\n\t\t\t\tSaleOfHomeContingency\n\t\t\t\tSaleOfHomeContingencyDueDate\n\t\t\t\tSaleOfHomeContingencyRemoved\n\t\t\t\tSaleOfHomeContingencyRemovedAt\n\t\t\t}\n\t\t\tCounterOffer {\n\t\t\t\tCounterOfferId\n\t\t\t\tForms\n\t\t\t\tPosition\n\t\t\t}\n\t\t\tFirmInfo {\n\t\t\t\tCompanyEmail\n\t\t\t\tCompanyPhone\n\t\t\t\tCompanyname\n\t\t\t\tDreNumber\n\t\t\t}\n\t\t\tFunding {\n\t\t\t\tDownPayment\n\t\t\t\tFicoScore\n\t\t\t\tLoanType\n\t\t\t\tPreapprovedForLoan\n\t\t\t\tPurchaseType\n\t\t\t}\n\t\t\tOffer {\n\t\t\t\tClosingPeriod\n\t\t\t\tFinanceContingency\n\t\t\t\tFurniture\n\t\t\t\tInspectionContingency\n\t\t\t\tOfferPrice\n\t\t\t\tSaleOfHomeContingency\n\t\t\t}\n\t\t\tOfferId\n\t\t\tOfferNo\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tStep {\n\t\t\t\tbuyer_can_submit_offer\n\t\t\t\tdisplay_on_advisor_portal\n\t\t\t\tdisplay_on_seller_dashboard\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\twaiting_seller_to_act\n\t\t\t}\n\t\t\tStepId\n\t\t}\n\t}\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n\tquery GetOfferDocPutUrls(\n\t\t$DocumentType: String!\n\t\t$Documents: [FileItemInput]!\n\t\t$OfferId: ID!\n\t) {\n\t\tgetOfferDocPutUrls(\n\t\t\tDocumentType: $DocumentType\n\t\t\tDocuments: $Documents\n\t\t\tOfferId: $OfferId\n\t\t) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getOfferStep = /* GraphQL */ `\n\tquery GetOfferStep($StepId: ID!) {\n\t\tgetOfferStep(StepId: $StepId) {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const getProperty = /* GraphQL */ `\n\tquery GetProperty($PropertyId: ID!) {\n\t\tgetProperty(PropertyId: $PropertyId) {\n\t\t\tCreatedAt\n\t\t\tListed\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tThumbnail {\n\t\t\t\tid\n\t\t\t\tkey\n\t\t\t\tname\n\t\t\t\tpresignedUrl\n\t\t\t\tsize\n\t\t\t\ttype\n\t\t\t}\n\t\t\tUpdatedAt\n\t\t}\n\t}\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n\tquery GetPropertyThumbnailPutUrl($Photos: [FileItemInput]!, $PropertyId: ID!) {\n\t\tgetPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getSellRequest = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tApprovedBy\n\t\t\tApprovedByAdvisor\n\t\t\tCreatedAt\n\t\t\tCreatedBy\n\t\t\tDTPropertyId\n\t\t\tDataTreeProperties {\n\t\t\t\tCount\n\t\t\t}\n\t\t\tPropertyData {\n\t\t\t\tBedrooms\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tFullBath\n\t\t\t\tLandUse\n\t\t\t\tLivingArea\n\t\t\t\tLotArea\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingOwnershipRight\n\t\t\t\tVestingTypeMapped\n\t\t\t\tVestingTypeOverride\n\t\t\t\tYearBuilt\n\t\t\t\tYearBuiltOverride\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyListPriceRange {\n\t\t\t\tMax\n\t\t\t\tMaxFormatted\n\t\t\t\tMin\n\t\t\t\tMinFormatted\n\t\t\t}\n\t\t\tRequestId\n\t\t\tSellerInfo {\n\t\t\t\tEmail\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tTaxReportTaxResourceMessage\n\t\t\tTaxReportTaxResourceStatus\n\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\tTaxReportTotalViewMessage\n\t\t\tTaxReportTotalViewStatus\n\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\tUpdatedAt\n\t\t\tUpdatedBy\n\t\t}\n\t}\n`;\nexport const listFormCategories = /* GraphQL */ `\n\tquery ListFormCategories {\n\t\tlistFormCategories {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const listForms = /* GraphQL */ `\n\tquery ListForms($limit: Int, $nextToken: String) {\n\t\tlistForms(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listOfferSteps = /* GraphQL */ `\n\tquery ListOfferSteps {\n\t\tlistOfferSteps {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const listOffers = /* GraphQL */ `\n\tquery ListOffers($limit: Int, $nextToken: String) {\n\t\tlistOffers(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tBuyerType\n\t\t\t\tOfferId\n\t\t\t\tOfferNo\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tStepId\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listProperties = /* GraphQL */ `\n\tquery ListProperties($limit: Int, $nextToken: String) {\n\t\tlistProperties(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCreatedAt\n\t\t\t\tListed\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tUpdatedAt\n\t\t\t\tPropertyData {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSellRequests = /* GraphQL */ `\n\tquery ListSellRequests($limit: Int, $nextToken: String) {\n\t\tlistSellRequests(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tApprovedBy\n\t\t\t\tApprovedByAdvisor\n\t\t\t\tCreatedAt\n\t\t\t\tCreatedBy\n\t\t\t\tDTPropertyId\n\t\t\t\tPropertyId\n\t\t\t\tRequestId\n\t\t\t\tTaxReportTaxResourceMessage\n\t\t\t\tTaxReportTaxResourceStatus\n\t\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\t\tTaxReportTotalViewMessage\n\t\t\t\tTaxReportTotalViewStatus\n\t\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\t\tUpdatedAt\n\t\t\t\tUpdatedBy\n\t\t\t\tSellerInfo {\n\t\t\t\t\tEmail\n\t\t\t\t\tFirstName\n\t\t\t\t\tLastName\n\t\t\t\t\tPhone\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n\tquery ListSupportedVestingTypes {\n\t\tlistSupportedVestingTypes\n\t}\n`;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t<IconChevronDown />\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n  children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n    d: \"M5 18.08V19h.92l9.06-9.06-.92-.92z\",\n    opacity: \".3\"\n  }), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n    d: \"M20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83zM3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19z\"\n  })]\n}), 'EditTwoTone');\n\nexports.default = _default;"],"sourceRoot":""}