{"version":3,"sources":["views/application/property/ListHeader.tsx","views/application/property/PropertyToolbar.tsx","views/application/property/PropertyList.tsx","views/pages/property/ListPage.tsx","graphql/subscriptions.ts","dataProvider/customGraphql/queries.ts","graphql/index.ts","utils/table.ts","views/application/components/LoadMore/index.tsx","helpers/date.ts"],"names":["headCells","id","numeric","disablePadding","label","align","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","sortDirection","undefined","TableSortLabel","active","direction","onClick","property","event","className","pr","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","title","flex","PropertyToolbar","onCreate","Toolbar","clsx","Grid","container","justifyContent","alignItems","item","xs","sm","Typography","variant","component","Tooltip","Fab","boxShadow","ml","width","height","table","minWidth","PropertyList","useQuery","gql","graphql","listProperties","variables","limit","config","pagination","fetchPolicy","notifyOnNetworkStatusChange","loading","error","data","fetchMore","rows","_get","nextToken","useTheme","history","useHistory","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","Loader","_isEmpty","Alert","severity","length","propertyAddNewLink","generatePath","push","TableContainer","Table","size","target","TableBody","stableSort","getComparator","row","index","isItemSelected","PropertyId","labelId","propertyData","streetAddress","county","zip","city","state","propertyNo","createdAt","extractPropertyData","hover","role","tabIndex","formatDate","IconButton","fontSize","LoadMore","onLoadMore","disabled","ListPage","MainCard","onUpdatePropertyReportStatus","listOffers","listForms","GraphQl","queries","mutations","subscriptions","customs","descendingComparator","a","b","array","comparator","stabilizedThis","el","sort","LoadMoreButton","withStyles","borderRadius","Button","toolbar","type","date","Intl","DateTimeFormat","locate","country","timeZone","timezone","format","Date"],"mappings":"qYAaMA,EAAY,CACjB,CACCC,GAAI,aACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,eAER,CACCH,GAAI,6BACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,kBAER,CACCH,GAAI,sBACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,UAER,CACCH,GAAI,qBACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,SAER,CACCH,GAAI,mBACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,OAER,CACCH,GAAI,oBACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,QAER,CACCH,GAAI,YACJC,SAAS,EACTE,MAAO,eACPC,MAAO,SAIHC,EAAYC,aAAW,iBAAO,CACnCC,SAAS,eAAMC,SA6DDC,EA1DI,SAACC,GACnB,IAAMC,EAAUN,IAEfO,EAMGF,EANHE,iBACAC,EAKGH,EALHG,MACAC,EAIGJ,EAJHI,QACAC,EAGGL,EAHHK,YACAC,EAEGN,EAFHM,SACAC,EACGP,EADHO,cAOD,OACC,cAACC,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAWC,GAAI,CAAEC,GAAI,GAAxC,SACC,cAACC,EAAA,EAAD,CACCC,MAAM,UACNC,cAAeX,EAAc,GAAKA,EAAcC,EAChDW,QAASX,EAAW,GAAKD,IAAgBC,EACzCY,SAAUhB,EACViB,WAAY,CACX,aAAc,2BAIhB9B,EAAU+B,KAAI,SAAAC,GAAQ,OACtB,cAACX,EAAA,EAAD,CAEChB,MAAO2B,EAAS9B,QAAU,QAAU,OACpCoB,QAASU,EAAS7B,eAAiB,OAAS,SAC5C8B,cAAelB,IAAYiB,EAAS/B,GAAKa,OAAQoB,EAJlD,SAMC,eAACC,EAAA,EAAD,CACCC,OAAQrB,IAAYiB,EAAS/B,GAC7BoC,UAAWtB,IAAYiB,EAAS/B,GAAKa,EAAQ,MAC7CwB,SA5BJC,EA4B+BP,EAAS/B,GA5BnB,SAACuC,GACtBtB,EAAcsB,EAAOD,KAwBlB,UAKEP,EAAS5B,MACTW,IAAYiB,EAAS/B,GACrB,sBAAMwC,UAAW7B,EAAQJ,SAAzB,SACY,SAAVM,EAAmB,oBAAsB,qBAExC,SAfAkB,EAAS/B,IApBlB,IAACsC,KAuCC,cAAClB,EAAA,EAAD,CAAWY,eAAe,EAAO5B,MAAM,SAASkB,GAAI,CAAEmB,GAAI,GAA1D,0B,kHC1GEC,EAAmBpC,aAAW,SAAAqC,GAAK,MAAK,CAC7CC,KAAM,CACLC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAE7BE,UAAW,CACVC,gBAAiBC,YAChBP,EAAMQ,QAAQC,QAAQC,KACtBV,EAAMQ,QAAQG,OAAOC,mBAGvBC,MAAO,CACNC,KAAM,gBAwDOC,EApDS,SAAChD,GACxB,IAAMC,EAAU+B,IACR3B,EAA0BL,EAA1BK,YAAa4C,EAAajD,EAAbiD,SAErB,OACC,cAACC,EAAA,EAAD,CACCpB,UAAWqB,YAAKlD,EAAQiC,KAAT,eACbjC,EAAQqC,UAAYjC,EAAc,IAFrC,SAKC,eAAC+C,EAAA,EAAD,CACCC,WAAS,EACTC,eAAe,gBACfC,WAAW,SACXnB,QAAS,EAJV,UAMC,cAACgB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACErD,EAAc,GACd,eAACsD,EAAA,EAAD,CACC7B,UAAW7B,EAAQ6C,MACnB/B,MAAM,UACN6C,QAAQ,YACRC,UAAU,MAJX,UAMExD,EANF,iBAUF,cAAC+C,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACC,cAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,WAAWC,WAAW,SAArD,SACC,cAACO,EAAA,EAAD,CAAShB,MAAM,SAAf,SACC,cAACiB,EAAA,EAAD,CACChD,MAAM,UACN,aAAW,MACXH,GAAI,CACHoD,UAAW,OACXC,GAAI,EACJC,MAAO,OACPC,OAAQ,QAETxC,QAASsB,EATV,SAWC,cAAC,IAAD,kB,SClCFtD,EAAYC,aAAW,iBAAO,CACnCwE,MAAO,CACNC,SAAU,aA6IGC,EAzIM,WACpB,MAA4CC,YAC3CC,YAAIC,IAAQC,gBACZ,CACCC,UAAW,CAAEC,MAAOC,IAAOC,WAAWF,OACtCG,YAAa,cACbC,6BAA6B,IALvBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,UASxBC,EAAoBC,IAAKH,EAAM,uBAAwB,IACvDI,EAAuCD,IAC5CH,EACA,gCACA5D,GAEKU,EAAQuD,cACRvF,EAAUN,IACV8F,EAAUC,cAChB,EAA8CC,YAAS,aAA/CxF,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASwF,EAAxB,EAAwBA,kBACxB,EACCC,YAAa,cADNC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,aAAcC,EAA5C,EAA4CA,gBAG5C,GAAIhB,IAAYE,EAAM,OAAO,cAACe,EAAA,EAAD,IAC7B,GAAIhB,GAASiB,IAAShB,GACrB,OACC,cAACiB,EAAA,EAAD,CAAOC,SAAS,QAAQzF,GAAI,CAAEG,MAAOkB,EAAMQ,QAAQyC,MAAMvC,MAAzD,mCAqCF,OACC,qCACC,cAAC,EAAD,CAAiBtC,YAAayF,EAASQ,OAAQrD,SAvBzB,WACvB,IAAMsD,EAAqBC,YAAa,iBACxCf,EAAQgB,KAAKF,MAsBZ,cAACG,EAAA,EAAD,UACC,eAACC,EAAA,EAAD,CAAO7E,UAAW7B,EAAQmE,MAAO,kBAAgB,aAAawC,KAAK,QAAnE,UACC,cAAC,EAAD,CACCvG,YAAayF,EAASQ,OACtBnG,MAAOA,EACPC,QAASA,EACTF,iBAlCwB,SAAC2B,GAC7BoE,EAAgBpE,EAAMgF,OAAO5F,QAASoE,IAkClC9E,cAAeqF,EACftF,SAAU+E,EAAKiB,SAEhB,cAACQ,EAAA,EAAD,UACEC,YAAsB1B,EAAM2B,YAAc7G,EAAOC,IAAUgB,KAC3D,SAAC6F,EAAKC,GACL,GAAmB,kBAARD,EAAkB,OAAO,KACpC,IAAME,EAAiBpB,EAAWkB,EAAIG,YAChCC,EAAO,kCAA8BH,GAC3C,EA/BqB,SAACD,GAC5B,IAAMK,EAAehC,IAAK2B,EAAK,eAAgB,IAQ/C,MAAO,CAAEM,cAPajC,IAAKgC,EAAc,gBAAiB,IAOlCE,OANTlC,IAAKgC,EAAc,SAAU,IAMZG,IALpBnC,IAAKgC,EAAc,MAAO,IAKDI,KAJxBpC,IAAKgC,EAAc,OAAQ,IAIGK,MAH7BrC,IAAKgC,EAAc,QAAS,IAGQM,WAF/BtC,IAAK2B,EAAK,aAAc,IAEmBY,UAD5CvC,IAAK2B,EAAK,YAAa,KA+B/Ba,CAAoBb,GAPvBM,EADD,EACCA,cACAC,EAFD,EAECA,OACAC,EAHD,EAGCA,IACAC,EAJD,EAICA,KACAC,EALD,EAKCA,MACAC,EAND,EAMCA,WACAC,EAPD,EAOCA,UAED,OACC,eAACpH,EAAA,EAAD,CACCsH,OAAK,EACLpG,QAAS,kBAAMqE,EAAaiB,EAAIG,aAChCY,KAAK,WACL,eAAcb,EACdc,UAAW,EAEXnC,SAAUqB,EAPX,UASC,cAACzG,EAAA,EAAD,CAAWE,GAAI,CAAEC,GAAI,GAAKF,QAAQ,WAAlC,SACC,cAACG,EAAA,EAAD,CACCC,MAAM,UACNE,QAASkG,EACThG,WAAY,CACX,kBAAmBkG,OAItB,cAAC3G,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyBkI,IACzB,cAAClH,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyB6H,IACzB,cAAC7G,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyB8H,IACzB,cAAC9G,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyBiI,IACzB,cAACjH,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyB+H,IACzB,cAAC/G,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyBgI,IACzB,cAAChH,EAAA,EAAD,CAAWhB,MAAM,OAAjB,SAAyBwI,YAAWL,KACpC,cAACnH,EAAA,EAAD,CAAWhB,MAAM,SAASkB,GAAI,CAAEmB,GAAI,GAApC,SACC,cAACoG,EAAA,EAAD,CACCpH,MAAM,UACNY,QAAS,kBAzEErC,EAyEiB2H,EAAIG,gBAxE1C3B,EAAQgB,KAAR,oBAA0BnH,IADN,IAACA,GAuEZ,SAIC,cAAC,IAAD,CAAiBsB,GAAI,CAAEwH,SAAU,kBAxB9BnB,EAAIG,sBAkChB,cAACiB,EAAA,EAAD,CAAUC,WApGK,WAChBlD,EAAU,CACTT,UAAW,CAAEC,MAAOC,IAAOC,WAAWF,MAAOW,gBAkGbgD,UAAWhD,EAAWN,QAASA,QC5JnDuD,UANE,kBAChB,cAACC,EAAA,EAAD,CAAU3F,MAAM,kBAAhB,SACC,cAAC,EAAD,Q,gSCJW4F,EAA4B,mYCJ5BC,EAAU,6tBAuCVjE,EAAc,6aAsBdkE,EAAS,wSCxDhBC,EAAO,mDACTC,GACAC,GACAC,GACAC,GAGWJ,O,iCCZf,yFAGMK,EAAuB,SAC5BC,EACAC,EACAhJ,GAEA,OAAIkF,IAAK8D,EAAGhJ,GAAWkF,IAAK6D,EAAG/I,IACtB,EAELkF,IAAK8D,EAAGhJ,GAAWkF,IAAK6D,EAAG/I,GACvB,EAED,GAGF4G,EAAgB,SAAC7G,EAAyBC,GAA1B,MACX,SAAVD,EACG,SAACgJ,EAAgBC,GAAjB,OAAoCF,EAAqBC,EAAGC,EAAGhJ,IAC/D,SAAC+I,EAAgBC,GAAjB,OAAqCF,EAAqBC,EAAGC,EAAGhJ,KAE9D2G,EAAa,SAClBsC,EACAC,GAEA,IAAMC,EAAiBF,EAAMjI,KAAI,SAACoI,EAAItC,GAAL,MAAe,CAACsC,EAAItC,MAMrD,OALAqC,EAAeE,MAAK,SAACN,EAAGC,GACvB,IAAMjJ,EAAQmJ,EAAWH,EAAE,GAASC,EAAE,IACtC,OAAc,IAAVjJ,EAAoBA,EAChBgJ,EAAE,GAAiBC,EAAE,MAEvBG,EAAenI,KAAI,SAAAoI,GAAE,OAAIA,EAAG,Q,iCChCpC,kEAIME,EAAiBC,YAAW,CACjCzH,KAAM,CACL0H,aAAc,MACdvF,SAAU,IACV1D,QAAS,SAJYgJ,CAMpBE,KAQGlK,EAAYC,aAAW,iBAAO,CACnCkK,QAAS,CACRnJ,QAAS,qBAoBI0H,IAhBE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,SAAUtD,EAAqB,EAArBA,QACnChF,EAAUN,IAEhB,OACC,cAAC,IAAD,CAAM0D,WAAS,EAACvB,UAAW7B,EAAQ6J,QAASxG,eAAe,SAA3D,SACC,cAACoG,EAAD,CACCK,KAAK,SACLpI,QAAS,kBAAM2G,KACfC,SAAUA,GAAYtD,EAHvB,SAKEA,EAAU,cAAC,IAAD,CAAkB2B,KAAM,KAAQ,cAAC,IAAD,U,iCClC/C,8CAEasB,EAAa,SAAC8B,GAAD,gBAExBA,EACG,IAAIC,KAAKC,eAAerF,IAAOsF,OAAOC,QAAS,CAC/CC,SAAUxF,IAAOsF,OAAOG,WACrBC,OAAO,IAAIC,KAAKR,IACnB","file":"static/js/20.4e0e0bb7.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'PropertyNo',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Property No',\n\t},\n\t{\n\t\tid: 'PropertyData.StreetAddress',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Street Address',\n\t},\n\t{\n\t\tid: 'PropertyData.County',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'County',\n\t},\n\t{\n\t\tid: 'PropertyData.State',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'State',\n\t},\n\t{\n\t\tid: 'PropertyData.Zip',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Zip',\n\t},\n\t{\n\t\tid: 'PropertyData.City',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'City',\n\t},\n\t{\n\t\tid: 'CreatedAt',\n\t\tnumeric: false,\n\t\tlabel: 'Created Date',\n\t\talign: 'left',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler =\n\t\t(property: string) => (event: React.SyntheticEvent) => {\n\t\t\tonRequestSort(event, property);\n\t\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Fab, Grid, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport { EnhancedTableToolbarWithMassActionProps } from '../../../types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t},\n\thighlight: {\n\t\tbackgroundColor: alpha(\n\t\t\ttheme.palette.primary.main,\n\t\t\ttheme.palette.action.activatedOpacity\n\t\t),\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst PropertyToolbar = (props: EnhancedTableToolbarWithMassActionProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected, onCreate } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t{numSelected > 0 && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{numSelected} selected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<Grid container justifyContent='flex-end' alignItems='center'>\n\t\t\t\t\t\t<Tooltip title='Create'>\n\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\taria-label='add'\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t\t\t\t\tml: 1,\n\t\t\t\t\t\t\t\t\twidth: '48px',\n\t\t\t\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={onCreate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Toolbar>\n\t);\n};\n\nexport default PropertyToolbar;\n","import React from 'react';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCheckbox,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tAlert,\n\tuseTheme,\n\tIconButton,\n} from '@material-ui/core';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from 'react-router';\nimport { generatePath } from 'react-router-dom';\nimport { TProperty } from '../../../types';\nimport graphql from '../../../graphql';\nimport { getComparator, stableSort } from '../../../utils/table';\nimport Loader from '../../../ui-component/Loader';\nimport Header from './ListHeader';\nimport LoadMore from '../components/LoadMore';\nimport config from '../../../config';\nimport { useOrder, useSelectRow } from '../../../hooks';\nimport PropertyToolbar from './PropertyToolbar';\nimport { formatDate } from '../../../helpers/date';\n\nconst useStyles = makeStyles(() => ({\n\ttable: {\n\t\tminWidth: '750px',\n\t},\n}));\n\nconst PropertyList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(\n\t\tgql(graphql.listProperties),\n\t\t{\n\t\t\tvariables: { limit: config.pagination.limit },\n\t\t\tfetchPolicy: 'cache-first',\n\t\t\tnotifyOnNetworkStatusChange: true,\n\t\t}\n\t);\n\n\tconst rows: TProperty[] = _get(data, 'listProperties.items', []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listProperties.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { order, orderBy, handleRequestSort } = useOrder('CreatedAt');\n\tconst { selected, isSelected, handleSelect, handleSelectAll } =\n\t\tuseSelectRow('PropertyId');\n\n\tif (loading && !data) return <Loader />;\n\tif (error || _isEmpty(data)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: { limit: config.pagination.limit, nextToken },\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\tconst onCreateHandler = () => {\n\t\tconst propertyAddNewLink = generatePath('/property-add');\n\t\thistory.push(propertyAddNewLink);\n\t};\n\n\tconst editProperty = (id: string) => {\n\t\thistory.push(`/property/${id}`);\n\t};\n\n\tconst extractPropertyData = (row: TProperty) => {\n\t\tconst propertyData = _get(row, 'PropertyData', {});\n\t\tconst streetAddress = _get(propertyData, 'StreetAddress', '');\n\t\tconst county = _get(propertyData, 'County', '');\n\t\tconst zip = _get(propertyData, 'Zip', '');\n\t\tconst city = _get(propertyData, 'City', '');\n\t\tconst state = _get(propertyData, 'State', '');\n\t\tconst propertyNo = _get(row, 'PropertyNo', '');\n\t\tconst createdAt = _get(row, 'CreatedAt', '');\n\t\treturn { streetAddress, county, zip, city, state, propertyNo, createdAt };\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PropertyToolbar numSelected={selected.length} onCreate={onCreateHandler} />\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TProperty>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.PropertyId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tstreetAddress,\n\t\t\t\t\t\t\t\t\tcounty,\n\t\t\t\t\t\t\t\t\tzip,\n\t\t\t\t\t\t\t\t\tcity,\n\t\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t\tpropertyNo,\n\t\t\t\t\t\t\t\t\tcreatedAt,\n\t\t\t\t\t\t\t\t} = extractPropertyData(row);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.PropertyId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{propertyNo}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{streetAddress}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{county}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{state}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{zip}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{city}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(createdAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => editProperty(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} loading={loading} />\n\t\t</>\n\t);\n};\n\nexport default PropertyList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport PropertyList from '../../application/property/PropertyList';\n\nconst ListPage = () => (\n\t<MainCard title='Properties List'>\n\t\t<PropertyList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const onUpdatePropertyReportStatus = /* GraphQL */ `\n  subscription OnUpdatePropertyReportStatus($PropertyId: ID!) {\n    onUpdatePropertyReportStatus(PropertyId: $PropertyId) {\n      DTPropertyId\n      PropertyId\n      TaxReportTaxResourceMessage\n      TaxReportTaxResourceStatus\n      TaxReportTaxResourceUpdatedAt\n      TaxReportTotalViewMessage\n      TaxReportTotalViewStatus\n      TaxReportTotalViewUpdatedAt\n    }\n  }\n`;\n","export const listOffers =`\n  query ListOffers($limit: Int, $nextToken: String) {\n    listOffers(limit: $limit, nextToken: $nextToken) {\n      items {\n        Funding {\n          PurchaseType\n          LoanType\n          DownPayment\n        }\n        OfferNo\n        OfferId\n        PropertyData {\n          FullAddress\n          OwnerNames\n        }\n        CounterOffer {\n          SellerCounter {\n            OfferPrice\n          }\n          BuyerCounter {\n            OfferPrice\n          }\n        }\n        Step {\n          messages {\n            advisor\n            buyer\n            seller\n          },\n          id\n          name\n        }\n        CreatedAt\n        UpdatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const listProperties =`\n  query ListProperties($limit: Int, $nextToken: String) {\n    listProperties(limit: $limit, nextToken: $nextToken) {\n      items {\n        CreatedAt\n        DTPropertyId\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          Zip\n        }\n        PropertyId\n        PropertyNo\n      }\n      nextToken\n    }\n  }\n`;\nexport const listForms =`\n  query ListForms($limit: Int, $nextToken: String) {\n    listForms(limit: $limit, nextToken: $nextToken) {\n      items {\n        CategoryId\n        CreatedAt\n        FormId\n        FormStatus\n        FormTypeId\n        Title\n        UpdatedAt\n      }\n      nextToken\n    }\n  }\n`;\n","import * as queries from './queries';\nimport * as mutations from './mutations';\nimport * as subscriptions from './subscriptions';\nimport * as customs from '../dataProvider/customGraphql';\n\nconst GraphQl = {\n\t...queries,\n\t...mutations,\n\t...subscriptions,\n\t...customs,\n};\n\nexport default GraphQl;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button, CircularProgress } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tloading: boolean;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled, loading }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled || loading}\n\t\t\t>\n\t\t\t\t{loading ? <CircularProgress size={24}/> : <IconChevronDown />}\t\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n","import config from '../config';\n\nexport const formatDate = (date: string | null): string =>\n\t`${\n\t\tdate\n\t\t\t? new Intl.DateTimeFormat(config.locate.country, {\n\t\t\t\t\ttimeZone: config.locate.timezone,\n\t\t\t  }).format(new Date(date))\n\t\t\t: ''\n\t}`;\n"],"sourceRoot":""}