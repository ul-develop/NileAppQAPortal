{"version":3,"sources":["views/pages/authentication/AuthWrapper1.tsx","views/pages/authentication/AuthCardWrapper.tsx","hooks/useScriptRef.ts","assets/images/icons/social-google.svg","views/pages/authentication/login/FirebaseLogin.tsx","ui-component/cards/AuthFooter.tsx","views/pages/authentication/login/index.tsx"],"names":["AuthWrapper1","styled","theme","backgroundColor","palette","mode","background","default","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","MainCard","className","contentClass","useScriptRef","scripted","useRef","useEffect","current","redButton","fontSize","fontWeight","dark","main","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","FirebaseLogin","props","others","customization","useSelector","state","scriptedRef","React","useState","checked","setChecked","useAuth","firebaseEmailPasswordSignIn","firebaseGoogleSignIn","googleHandler","a","console","error","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","Grid","container","direction","justifyContent","item","xs","AnimateButton","Button","disableElevation","fullWidth","onClick","size","variant","src","Google","alt","width","Box","alignItems","display","Divider","orientation","sx","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","Stack","FormControlLabel","control","Checkbox","target","component","Link","to","login","textDecoration","mt","AuthFooter","href","Login","useTheme","matchDownSM","useMediaQuery","m","sm","Logo","secondary","gutterBottom","textAlign","RouterLink"],"mappings":"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","file":"static/js/4.ef95e571.chunk.js","sourcesContent":["// material-ui\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// project import\r\nimport MainCard, { MainCardProps } from './../../../ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Stack,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useScriptRef from '../../../../hooks/useScriptRef';\r\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport Google from './../../../../assets/images/icons/social-google.svg';\r\nimport { DefaultRootStateProps } from '../../../../types/index';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 : theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor:\r\n            theme.palette.mode === 'dark' ? theme.palette.dark.light + 20 + ' !important' : theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n//============================|| FIREBASE - LOGIN ||============================//\r\n\r\nconst FirebaseLogin = (props: { login?: number }, { ...others }) => {\r\n    const classes = useStyles();\r\n\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n    const scriptedRef = useScriptRef();\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const { firebaseEmailPasswordSignIn, firebaseGoogleSignIn } = useAuth();\r\n    const googleHandler = async () => {\r\n        try {\r\n            await firebaseGoogleSignIn();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth={true}\r\n                            className={classes.redButton}\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box alignItems=\"center\" display=\"flex\">\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                        <AnimateButton>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.signText}\r\n                                sx={{ borderRadius: customization.borderRadius + 'px' }}\r\n                                disableRipple\r\n                                disabled\r\n                            >\r\n                                OR\r\n                            </Button>\r\n                        </AnimateButton>\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box mb={2}>\r\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        await firebaseEmailPasswordSignIn(values.email, values.password);\r\n\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err: any) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.email && errors.email)}\r\n                            className={classes.loginInput}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-login\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Email Address / Username\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.password && errors.password)}\r\n                            className={classes.loginInput}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-login\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"Password\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={checked}\r\n                                        onChange={(event) => setChecked(event.target.checked)}\r\n                                        name=\"checked\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                            <Typography\r\n                                variant=\"subtitle1\"\r\n                                component={Link}\r\n                                to={props.login ? '/pages/forgot-password/forgot-password' + props.login : '#'}\r\n                                color=\"secondary\"\r\n                                sx={{ textDecoration: 'none' }}\r\n                            >\r\n                                Forgot Password?\r\n                            </Typography>\r\n                        </Stack>\r\n                        {errors.submit && (\r\n                            <Box mt={3}>\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box mt={2}>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign in\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FirebaseLogin;\r\n","// material-ui\r\nimport { Link, Typography, Stack } from '@material-ui/core';\r\n\r\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\r\n\r\nconst AuthFooter = () => {\r\n    return (\r\n        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\">\r\n                berrydashboard.io\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\">\r\n                &copy; codedthemes.com\r\n            </Typography>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default AuthFooter;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper1 from './../AuthWrapper1';\r\nimport Logo from './../../../../ui-component/Logo';\r\nimport AuthCardWrapper from './../AuthCardWrapper';\r\nimport FirebaseLogin from './../login/FirebaseLogin';\r\nimport AuthFooter from './../../../../ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n//================================|| LOGIN MAIN ||================================//\r\n\r\nconst Login = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Hi, Welcome Back\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        variant=\"caption\"\r\n                                                        fontSize=\"16px\"\r\n                                                        textAlign={matchDownSM ? 'center' : 'left'}\r\n                                                    >\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FirebaseLogin />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography component={RouterLink} to=\"#\" variant=\"subtitle1\" sx={{ textDecoration: 'none' }}>\r\n                                                Don't have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}