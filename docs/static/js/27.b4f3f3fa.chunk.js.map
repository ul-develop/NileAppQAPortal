{"version":3,"sources":["views/application/property/components/Calendar/Scheduler/IntegratedDates.tsx","views/application/property/components/Calendar/Scheduler/TooltipContent.tsx","views/application/property/components/Calendar/Scheduler/Appointment.tsx","views/application/property/components/Calendar/Scheduler/TimeTableCell.tsx","views/application/property/components/Calendar/Scheduler/DayScaleCell.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/constants.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/helpers.ts","views/application/property/components/Calendar/Scheduler/BookingForm/AppointmentData.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/RepeatSection.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/BookingForm.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/BasicLayout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/Layout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/CommandLayout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/AppointmentForm.tsx","views/application/property/components/Calendar/Scheduler/Scheduler.tsx"],"names":["IntegratedDates","dispatch","useDispatch","name","computed","startViewDate","setStartOfWeek","endViewDate","setEndOfWeek","useStyles","makeStyles","theme","wrapper","padding","spacing","paddingTop","section","marginBottom","TooltipContent","appointmentData","classes","formatTime","displayDate","displayTime","Paper","className","Typography","variant","color","_get","Event","AccessTime","appointment","backgroundColor","palette","primary","main","busy","Appointment","children","restProps","data","clsx","isBusyAppointment","disableCell","background","action","disabledBackground","backgroundSize","pointerEvents","TimeTableCell","props","timeConfig","useSelector","state","dateString","startDate","isCellActive","config","cell","today","alpha","DayScaleCell","TYPES","BOOKING_FORMAT","DATE_PICKER_FORMAT","defaultValues","REPEAT_TYPE","generateSellerValues","property","questions","date","moment","format","address","email","Auth","reduce","acc","code","type","appointmentType","undefined","generateInitialValues","FNAME","EMAIL","repeat","repeatType","endDate","prepareQuestionsAnswers","values","map","string","filter","prepareSellerBookings","appointmentStartDate","busyAppointmentType","appointmentTypes","find","toLowerCase","BUSY_APPOINTMENT_NAME","getBusyAppointmentType","title","startsAt","tentative","timeZone","tz","guess","cancelled","units","services","answers","startTime","mStartDate","diff","module","Array","from","Math","floor","_","i","day","mDay","add","getErrorMessages","bookings","bookingDates","booking","join","message","typography","h4","grey","textAlign","AppointmentData","Box","sx","mt","RepeatSection","useFormikContext","handleChange","setFieldValue","handleDateChange","field","FormControlLabel","control","Switch","checked","onChange","label","Collapse","in","RadioGroup","value","Radio","mb","LocalizationProvider","dateAdapter","MomentUtils","Grid","container","justifyContent","item","xs","DesktopDatePicker","inputFormat","Date","renderInput","helperText","TextField","BookingForm","onSave","profileId","isLoading","initialValues","onSubmit","a","setIsLoading","BookingsService","createBookings","errors","_isEmpty","setError","addAppointments","display","flexDirection","Divider","my","Button","disableElevation","fullWidth","disabled","BasicLayout","layout","common","white","content","Layout","basicLayoutComponent","CommandLayout","commandLayoutComponent","RecurrenceLayout","recurrenceLayoutComponent","onCommitButtonClick","isSaving","setIsSaving","useEffect","AppointmentForm","useState","BasicLayoutComponent","connectProps","CommandLayoutComponent","layoutComponent","Scheduler","appointments","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","DEFAULT_DURATION","onCommitChanges","appointmentComponent","showCloseButton","contentComponent"],"mappings":"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","file":"static/js/27.b4f3f3fa.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { setEndOfWeek, setStartOfWeek } from '../redux/actions';\n\nconst IntegratedDates = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Plugin name='IntegratedDates'>\n\t\t\t<Getter\n\t\t\t\tname='startViewDate'\n\t\t\t\tcomputed={({ startViewDate }) => {\n\t\t\t\t\tdispatch(setStartOfWeek(startViewDate));\n\t\t\t\t\treturn startViewDate;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Getter\n\t\t\t\tname='endViewDate'\n\t\t\t\tcomputed={({ endViewDate }) => {\n\t\t\t\t\tdispatch(setEndOfWeek(endViewDate));\n\t\t\t\t\treturn endViewDate;\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Plugin>\n\t);\n};\n\nexport default IntegratedDates;\n","import Paper from '@material-ui/core/Paper';\nimport _get from 'lodash.get';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tAccessTime as AccessTimeIcon,\n\tEvent as EventIcon,\n} from '@material-ui/icons';\nimport { AppointmentTooltip } from '@devexpress/dx-react-scheduler-material-ui';\nimport { formatTime } from '../helpers';\nimport type { TAppointment } from '../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\twrapper: {\n\t\tpadding: theme.spacing(2),\n\t\tpaddingTop: 0,\n\t},\n\tsection: {\n\t\tmarginBottom: theme.spacing(1),\n\t},\n}));\n\nconst TooltipContent = ({\n\tappointmentData,\n}: AppointmentTooltip.ContentProps) => {\n\tconst classes = useStyles();\n\tconst { displayDate, displayTime } = formatTime(\n\t\tappointmentData as TAppointment\n\t);\n\n\treturn (\n\t\t<Paper className={classes.wrapper}>\n\t\t\t<Typography variant='h3' color='primary' className={classes.section}>\n\t\t\t\t{_get(appointmentData, 'title', '')}\n\t\t\t</Typography>\n\t\t\t<div className={classes.section}>\n\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t<EventIcon /> {displayDate}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t<AccessTimeIcon /> {displayTime}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</Paper>\n\t);\n};\nexport default TooltipContent;\n","import React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { isBusyAppointment } from '../helpers';\nimport type { TAppointment } from '../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\tappointment: {\n\t\tbackgroundColor: theme.palette.primary.main,\n\n\t\t'&:hover': {\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t},\n\t},\n\tbusy: {\n\t\tbackgroundColor: '#9e9e9e',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#9e9e9e',\n\t\t},\n\t},\n}));\n\nconst Appointment = ({\n\tchildren,\n\t...restProps\n}: Appointments.AppointmentProps) => {\n\tconst { data } = restProps;\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Appointments.Appointment\n\t\t\t{...restProps}\n\t\t\tclassName={clsx(classes.appointment, {\n\t\t\t\t[classes.busy]: isBusyAppointment(data as TAppointment),\n\t\t\t})}\n\t\t>\n\t\t\t{children}\n\t\t</Appointments.Appointment>\n\t);\n};\n\nexport default Appointment;\n","import { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\nimport _get from 'lodash.get';\nimport { isCellActive } from '../helpers';\n\nconst useStyles = makeStyles(theme => ({\n\tdisableCell: {\n\t\tbackground: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n\t\tbackgroundSize: '8px 8px',\n\t\tpointerEvents: 'none',\n\t},\n}));\n\nconst TimeTableCell = (props: WeekView.TimeTableCellProps) => {\n\tconst classes = useStyles();\n\tconst timeConfig = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst { startDate: dateString } = props;\n\n\treturn (\n\t\t<WeekView.TimeTableCell\n\t\t\t{...props}\n\t\t\tclassName={clsx({\n\t\t\t\t[classes.disableCell]: !isCellActive({\n\t\t\t\t\tdateString,\n\t\t\t\t\tconfig: timeConfig,\n\t\t\t\t}),\n\t\t\t})}\n\t\t/>\n\t);\n};\n\nexport default TimeTableCell;\n","import * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n\tcell: {\n\t\tpaddingTop: theme.spacing(1),\n\t},\n\ttoday: {\n\t\tbackgroundColor: alpha(theme.palette.primary.main, 0.16),\n\t},\n}));\n\nconst DayScaleCell = (props: WeekView.DayScaleCellProps) => {\n\tconst classes = useStyles();\n\tconst { today } = props;\n\n\treturn (\n\t\t<WeekView.DayScaleCell\n\t\t\t{...props}\n\t\t\tclassName={clsx(classes.cell, {\n\t\t\t\t[classes.today]: today,\n\t\t\t})}\n\t\t/>\n\t);\n};\n\nexport default DayScaleCell;\n","export const TYPES = {\n\tSIMPLE: 'SIMPLE',\n\tCHECKBOX: 'CHECKBOX',\n\tMULTI_DROPDOWN: 'MULTI_DROPDOWN',\n};\n","import { Auth } from 'aws-amplify';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport _get from 'lodash.get';\nimport type { TQuestion, TAppointmentType } from '../types';\nimport { TYPES } from './constants';\nimport { BUSY_APPOINTMENT_NAME } from '../../constants';\n\nconst BOOKING_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nconst BOOKING_DATE_FORMAT = 'YYYY-MM-DD';\nconst BOOKING_TIME_FORMAT = 'HH:mm:ss';\nexport const DATE_PICKER_FORMAT = 'MM/DD/YYYY';\nconst WEEK_DAYS = 7;\n\nconst defaultValues = {\n\t[TYPES.SIMPLE]: '',\n\t[TYPES.CHECKBOX]: false,\n\t[TYPES.MULTI_DROPDOWN]: '',\n};\n\nconst REPEAT_TYPE = {\n\tdaily: 'daily',\n\tweekly: 'weekly',\n};\n\nexport const generateInitialValues = (questions: TQuestion[]): Object =>\n\tquestions.reduce(\n\t\t(acc, { code, type }) => ({ ...acc, [code]: defaultValues[type] }),\n\t\t{\n\t\t\tappointmentType: undefined,\n\t\t}\n\t);\n\nexport const generateSellerValues = ({\n\tproperty,\n\tappointmentData,\n\tconfig,\n}: any): Object => {\n\tconst { questions } = config;\n\tconst { startDate } = appointmentData;\n\tconst date = moment(startDate).format(DATE_PICKER_FORMAT);\n\tconst address = _get(property, 'PropertyData.FullAddress', '');\n\tconst email = _get(Auth, ['user', 'attributes', 'email'], '');\n\treturn {\n\t\t...generateInitialValues(questions),\n\t\tFNAME: address,\n\t\tEMAIL: email,\n\t\trepeat: false,\n\t\trepeatType: REPEAT_TYPE.daily,\n\t\tstartDate: date,\n\t\tendDate: date,\n\t};\n};\n\nconst prepareQuestionsAnswers = (questions: TQuestion[], values: any): Object =>\n\tquestions\n\t\t.map(({ code }) => ({ code, string: values[code] }))\n\t\t.filter(({ string }) => string);\n\nexport const prepareBookingData = ({\n\tappointmentData,\n\tvalues,\n\tconfig,\n}: any): Object => {\n\tconst { title, questions } = config;\n\tconst { FNAME: name, appointmentType } = values;\n\tconst { startDate } = appointmentData;\n\n\treturn {\n\t\ttitle: `${name} and ${title}`,\n\t\tstartsAt: moment(startDate).format(BOOKING_FORMAT),\n\t\ttentative: 'NOT_USED',\n\t\ttimeZone: moment.tz.guess(),\n\t\tcancelled: false,\n\t\tunits: 1,\n\t\tservices: [{ id: appointmentType.id, name: appointmentType.name }],\n\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t};\n};\n\nexport const getBusyAppointmentType = (\n\tappointmentTypes: Object[]\n): Object | typeof undefined =>\n\tappointmentTypes.find(\n\t\ttype => _get(type, 'name', '').toLowerCase() === BUSY_APPOINTMENT_NAME\n\t);\n\nexport const prepareSellerBookings = ({\n\tappointmentData,\n\tvalues,\n\tconfig,\n}: any): Object[] => {\n\tconst { questions } = config;\n\tconst { startDate: appointmentStartDate } = appointmentData;\n\tconst { repeat, repeatType, startDate, endDate } = values;\n\tconst appointmentTypes = _get(config, 'services.items', []);\n\tconst busyAppointmentType = getBusyAppointmentType(appointmentTypes);\n\n\tif (!repeat)\n\t\treturn [\n\t\t\t{\n\t\t\t\ttitle: BUSY_APPOINTMENT_NAME,\n\t\t\t\tstartsAt: moment(appointmentStartDate).format(BOOKING_FORMAT),\n\t\t\t\ttentative: 'NOT_USED',\n\t\t\t\ttimeZone: moment.tz.guess(),\n\t\t\t\tcancelled: false,\n\t\t\t\tunits: 1,\n\t\t\t\tservices: [busyAppointmentType],\n\t\t\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t\t\t},\n\t\t];\n\n\tconst startTime = moment(appointmentStartDate).format(BOOKING_TIME_FORMAT);\n\tconst mStartDate = moment(startDate);\n\tconst mEndDate = moment(endDate);\n\tconst diff = mEndDate.diff(mStartDate, 'day');\n\tconst module = repeatType === REPEAT_TYPE.weekly ? WEEK_DAYS : 1;\n\n\tconst days = Array.from(\n\t\tArray(Math.floor(diff / module) + 1),\n\t\t(_, i) => i * module\n\t);\n\n\treturn days.map(day => {\n\t\tconst mDay = moment(startDate).add(day, 'day');\n\t\treturn {\n\t\t\ttitle: BUSY_APPOINTMENT_NAME,\n\t\t\tstartsAt: `${mDay.format(BOOKING_DATE_FORMAT)}T${startTime}`,\n\t\t\ttentative: 'NOT_USED',\n\t\t\ttimeZone: moment.tz.guess(),\n\t\t\tcancelled: false,\n\t\t\tunits: 1,\n\t\t\tservices: [busyAppointmentType],\n\t\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t\t};\n\t});\n};\n\nexport const getErrorMessages = (bookings: Object[]): Object => {\n\tconst bookingDates = bookings\n\t\t.map(booking => _get(booking, 'startsAt'))\n\t\t.join(', ');\n\treturn { message: `Cannot book at dates: ${bookingDates}` };\n};\n\nexport const getAppointmentTypeDuration = ({\n\tnumberOfSlots,\n\tslotLengthMinutes,\n}: TAppointmentType): string => `${numberOfSlots * slotLengthMinutes} minutes`;\n","import { Box, makeStyles, Typography } from '@material-ui/core';\nimport { formatTime } from '../../helpers';\nimport type { TAppointment } from '../../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\twrapper: {\n\t\t...theme.typography.h4,\n\t\tpadding: theme.spacing(2, 0),\n\t\tbackgroundColor: theme.palette.grey[100],\n\t\ttextAlign: 'center',\n\t},\n}));\n\ntype Props = {\n\tappointmentData: TAppointment;\n};\n\nexport const AppointmentData = ({ appointmentData }: Props) => {\n\tconst { startDate, endDate } = appointmentData;\n\tconst classes = useStyles();\n\tconst { displayDate, displayTime } = formatTime({ startDate, endDate });\n\treturn (\n\t\t<div className={classes.wrapper}>\n\t\t\t<Typography variant='h4'>{displayDate}</Typography>\n\t\t\t<Box sx={{ mt: 1 }}>\n\t\t\t\t<Typography variant='h3'>{displayTime}</Typography>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n","import MomentUtils from '@date-io/moment';\nimport { useFormikContext } from 'formik';\nimport {\n\tCollapse,\n\tFormControlLabel,\n\tSwitch,\n\tGrid,\n\tRadioGroup,\n\tRadio,\n\tTextField,\n\tBox,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport _get from 'lodash.get';\nimport { DesktopDatePicker, LocalizationProvider } from '@material-ui/lab';\nimport { DATE_PICKER_FORMAT } from './helpers';\n\nexport const RepeatSection = () => {\n\tconst { values, handleChange, setFieldValue } = useFormikContext();\n\n\tconst handleDateChange = (field: string) => (date: Date | null) => {\n\t\tsetFieldValue(field, moment(date).format(DATE_PICKER_FORMAT));\n\t};\n\n\tconst repeat = _get(values, 'repeat');\n\tconst repeatType = _get(values, 'repeatType');\n\tconst startDate = _get(values, 'startDate');\n\tconst endDate = _get(values, 'endDate');\n\n\treturn (\n\t\t<div>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tname='repeat'\n\t\t\t\t\t\tchecked={repeat}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel='Repeat'\n\t\t\t/>\n\n\t\t\t<Collapse in={repeat}>\n\t\t\t\t<div>\n\t\t\t\t\t<RadioGroup name='repeatType' value={repeatType} onChange={handleChange}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue='daily'\n\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\tlabel='Daily'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue='weekly'\n\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\tlabel='Weekly'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</div>\n\t\t\t\t<Box sx={{ mt: 2, mb: 1 }}>\n\t\t\t\t\t<LocalizationProvider dateAdapter={MomentUtils}>\n\t\t\t\t\t\t<Grid container justifyContent='space-between'>\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<DesktopDatePicker\n\t\t\t\t\t\t\t\t\tlabel='Start date'\n\t\t\t\t\t\t\t\t\tinputFormat={DATE_PICKER_FORMAT}\n\t\t\t\t\t\t\t\t\tvalue={new Date(startDate)}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange('startDate')}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t\t\t\t\trenderInput={({ helperText, ...restProps }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField {...restProps} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<DesktopDatePicker\n\t\t\t\t\t\t\t\t\tlabel='End date'\n\t\t\t\t\t\t\t\t\tinputFormat={DATE_PICKER_FORMAT}\n\t\t\t\t\t\t\t\t\tvalue={new Date(endDate)}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange('endDate')}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t\t\t\t\trenderInput={({ helperText, ...restProps }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField {...restProps} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</LocalizationProvider>\n\t\t\t\t</Box>\n\t\t\t</Collapse>\n\t\t</div>\n\t);\n};\n","import { Box, Button, Divider, Typography } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tgenerateSellerValues,\n\tgetErrorMessages,\n\tprepareSellerBookings,\n} from './helpers';\nimport { AppointmentData } from './AppointmentData';\nimport { BookingsService } from '../../../../../../../services/YouCanBook';\nimport { setIsLoading, setError, addAppointments } from '../../redux/actions';\nimport { RepeatSection } from './RepeatSection';\nimport type { TAppointment } from '../../../../../../../types/YouCanBook/bookings';\n\ntype Props = {\n\tappointmentData: TAppointment;\n\tonSave: Function;\n};\n\nconst BookingForm = ({ appointmentData, onSave }: Props) => {\n\tconst dispatch = useDispatch();\n\tconst property = useSelector(state => _get(state, ['calendar', 'property']));\n\tconst profileId = _get(property, 'CalendarProfileId');\n\tconst config = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst isLoading = useSelector(state => _get(state, ['calendar', 'isLoading']));\n\n\tconst initialValues = generateSellerValues({\n\t\tproperty,\n\t\tappointmentData,\n\t\tconfig,\n\t});\n\n\tconst onSubmit = async (values: Object) => {\n\t\tdispatch(setIsLoading(true));\n\t\ttry {\n\t\t\tconst data = prepareSellerBookings({ appointmentData, values, config });\n\t\t\tconst { bookings, errors } = await BookingsService.createBookings({\n\t\t\t\tprofileId,\n\t\t\t\tdata,\n\t\t\t});\n\t\t\tif (!_isEmpty(errors)) dispatch(setError(getErrorMessages(errors)));\n\t\t\tdispatch(addAppointments(bookings));\n\t\t\tonSave();\n\t\t} catch (error) {\n\t\t\tdispatch(setError(error as Error));\n\t\t}\n\t\tdispatch(setIsLoading(false));\n\t};\n\n\treturn (\n\t\t<Box sx={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t<Form>\n\t\t\t\t\t<Box sx={{ mb: 2 }}>\n\t\t\t\t\t\t<Typography variant='h4'>Block available slots</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<AppointmentData appointmentData={appointmentData} />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Box sx={{ my: 2 }}>\n\t\t\t\t\t\t<RepeatSection />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm Booking\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Formik>\n\t\t</Box>\n\t);\n};\n\nexport default BookingForm;\n","import { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { BookingForm } from '../BookingForm';\nimport type { TAppointment } from '../../../../../../../types/YouCanBook/bookings';\n\ntype Props = AppointmentForm.BasicLayoutProps & {\n\tonSave: Function;\n};\n\nexport const BasicLayout = (props: Props) => {\n\tconst { appointmentData, onSave } = props;\n\n\treturn (\n\t\t<BookingForm\n\t\t\tappointmentData={appointmentData as TAppointment}\n\t\t\tonSave={onSave}\n\t\t/>\n\t);\n};\n\nexport default BasicLayout;\n","// @ts-nocheck\nimport { makeStyles } from '@material-ui/core';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\n\nconst useStyles = makeStyles(theme => ({\n\tlayout: {\n\t\tbackground: theme.palette.common.white,\n\t},\n\tcontent: {\n\t\tpadding: theme.spacing(4),\n\t},\n}));\n\nexport const Layout = (props: AppointmentForm.LayoutProps) => {\n\tconst {\n\t\tbasicLayoutComponent: BasicLayout,\n\t\tcommandLayoutComponent: CommandLayout,\n\t\trecurrenceLayoutComponent: RecurrenceLayout,\n\t\tchildren,\n\t\t...restProps\n\t} = props;\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.layout} {...restProps}>\n\t\t\t<CommandLayout />\n\t\t\t<div className={classes.content}>\n\t\t\t\t<BasicLayout />\n\t\t\t\t<RecurrenceLayout />\n\t\t\t</div>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import { useEffect } from 'react';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\n\ntype Props = AppointmentForm.CommandLayoutProps & {\n\tisSaving: boolean;\n\tsetIsSaving: (value: boolean) => void;\n};\n\nexport const CommandLayout = (props: Props) => {\n\tconst { onCommitButtonClick, isSaving, setIsSaving } = props;\n\n\tuseEffect(() => {\n\t\tif (isSaving) {\n\t\t\tonCommitButtonClick();\n\t\t\tsetIsSaving(false);\n\t\t}\n\t}, [isSaving]);\n\n\treturn <div />;\n};\n","import React, { useState } from 'react';\n\nimport { AppointmentForm as SchedulerAppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { connectProps } from '@devexpress/dx-react-core';\nimport BasicLayout from './BasicLayout';\nimport { Layout } from './Layout';\nimport { CommandLayout } from './CommandLayout';\n\nexport const AppointmentForm = () => {\n\tconst [isSaving, setIsSaving] = useState(false);\n\tconst BasicLayoutComponent = connectProps(BasicLayout, () => ({\n\t\tonSave: () => setIsSaving(true),\n\t}));\n\n\tconst CommandLayoutComponent = connectProps(CommandLayout, () => ({\n\t\tisSaving,\n\t\tsetIsSaving,\n\t}));\n\n\treturn (\n\t\t<SchedulerAppointmentForm\n\t\t\tlayoutComponent={Layout}\n\t\t\tbasicLayoutComponent={BasicLayoutComponent}\n\t\t\tcommandLayoutComponent={CommandLayoutComponent}\n\t\t/>\n\t);\n};\n","import Paper from '@material-ui/core/Paper';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport {\n\tScheduler as SchedulerComponent,\n\tWeekView,\n\tAppointments,\n\tAppointmentTooltip,\n\tToolbar,\n\tDateNavigator,\n\tTodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useSelector } from 'react-redux';\n\nimport { DEFAULT_DURATION } from '../constants';\nimport IntegratedDates from './IntegratedDates';\nimport TooltipContent from './TooltipContent';\nimport Appointment from './Appointment';\nimport TimeTableCell from './TimeTableCell';\nimport DayScaleCell from './DayScaleCell';\nimport { AppointmentForm } from './AppointmentForm';\n\ntype Props = {\n\tprofileId: string;\n};\n\nconst Scheduler = ({ profileId }: Props) => {\n\tif (!profileId) return null;\n\n\tconst config = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst appointments = useSelector(state =>\n\t\t_get(state, ['calendar', 'appointments'])\n\t);\n\n\tconst onCommitChanges = () => {};\n\n\tif (_isEmpty(config)) return <></>;\n\n\treturn (\n\t\t<Paper elevation={3}>\n\t\t\t<SchedulerComponent data={appointments}>\n\t\t\t\t<ViewState />\n\t\t\t\t<WeekView\n\t\t\t\t\ttimeTableCellComponent={TimeTableCell}\n\t\t\t\t\tdayScaleCellComponent={DayScaleCell}\n\t\t\t\t\tcellDuration={_get(config, 'slotLengthMinutes') || DEFAULT_DURATION}\n\t\t\t\t/>\n\t\t\t\t<EditingState onCommitChanges={onCommitChanges} />\n\t\t\t\t<IntegratedDates />\n\t\t\t\t<Toolbar />\n\t\t\t\t<DateNavigator />\n\t\t\t\t<TodayButton />\n\t\t\t\t<Appointments appointmentComponent={Appointment} />\n\t\t\t\t<AppointmentTooltip showCloseButton contentComponent={TooltipContent} />\n\t\t\t\t<AppointmentForm />\n\t\t\t</SchedulerComponent>\n\t\t</Paper>\n\t);\n};\n\nexport default Scheduler;\n"],"sourceRoot":""}