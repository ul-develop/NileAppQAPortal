{"version":3,"sources":["views/pages/user/ProfilePage.tsx","ui-component/cards/SubCard.tsx","ui-component/extended/AnimateButton.tsx","ui-component/extended/Form/InputLabel.tsx","views/application/components/PhoneInput/index.tsx","../node_modules/@material-ui/core/TextField/textFieldClasses.js","../node_modules/@material-ui/core/TextField/TextField.js","../node_modules/@material-ui/core/MenuItem/menuItemClasses.js","../node_modules/@material-ui/core/MenuItem/MenuItem.js","../../../../src/react/hooks/useQuery.ts","views/application/user/components/Profile.tsx","views/application/user/Validatation.ts"],"names":["ProfilePage","showSnackBar","useSnackBar","useQuery","gql","graphqlSchema","getMyProfile","loading","data","error","users_UserGroups","loadingUserGroups","userGroupsError","userGroupsData","useMutation","users_UpdateMyUserProfile","doUpdateUserProfile","user","_get","groups","firstName","lastName","phone","email","userGroup","isDisabled","title","initialValues","message","onSubmit","values","a","setStatus","setSubmitting","variables","FirstName","LastName","Phone","_isEmpty","undefined","convertPhoneNumber","alertSeverity","success","sx","mb","validationSchema","userValidationSchema","handleSubmit","noValidate","isGroupDisable","SubCard","children","content","contentClass","darkTitle","secondary","others","theme","useTheme","border","borderColor","palette","mode","dark","light","primary","boxShadow","p","variant","action","opacity","className","defaultProps","AnimateButton","React","forwardRef","ref","offset1","offset2","type","direction","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","onHoverEnd","onHoverStart","whileHover","hover","whileTap","tap","BInputLabel","styled","props","shouldForwardProp","prop","horizontal","color","text","fontWeight","marginBottom","InputLabel","useStyle","makeStyles","wrapper","background","grey","borderRadius","width","borderWidth","phoneInput","padding","height","outline","fontSize","lineHeight","fontFamily","typography","main","helper","margin","PhoneInput","classes","name","value","onChange","onBlur","country","placeholder","tabIndex","clsx","toLowerCase","inputProps","getTextFieldUtilityClass","slot","generateUtilityClass","generateUtilityClasses","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","TextFieldRoot","experimentalStyled","FormControl","overridesResolver","styles","root","TextField","inProps","useThemeProps","autoComplete","autoFocus","defaultValue","disabled","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","InputProps","inputRef","label","maxRows","minRows","multiline","onFocus","required","rows","select","SelectProps","other","_objectWithoutPropertiesLoose","styleProps","_extends","composeClasses","useUtilityClasses","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","_jsxs","native","helperTextId","inputLabelId","InputComponent","InputElement","_jsx","htmlFor","Select","labelId","input","FormHelperText","getMenuItemUtilityClass","MenuItemRoot","ListItemRoot","rootShouldForwardProp","listItemOverridesResolver","dense","body1","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","breakpoints","up","body2","MenuItem","component","disableGutters","ListItemClasses","role","selected","tabIndexProp","slots","ListItem","components","Root","componentsProps","button","query","options","Profile","isAddNew","isDisableEmail","useFormikContext","handleChange","handleBlur","touched","errors","setFieldValue","isSubmitting","buttonLabel","container","spacing","gridSpacing","item","sm","md","xs","lg","Boolean","config","locate","countryCode","displayEmpty","map","group","justifyContent","validateMessage","yup","shape","test","isValidPhoneNumber"],"mappings":"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","file":"static/js/24.17b82274.chunk.js","sourcesContent":["import React from 'react';\nimport _get from 'lodash.get';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { Formik, FormikHelpers } from 'formik';\nimport _isEmpty from 'lodash.isempty';\nimport MainCard from '../../../ui-component/cards/MainCard';\nimport graphqlSchema from '../../../graphql';\nimport Loader from '../../../ui-component/Loader';\nimport Profile from '../../application/user/components/Profile';\nimport { userValidationSchema } from '../../application/user/Validatation';\nimport { TEditUserProfile } from '../../../types';\nimport { useSnackBar } from '../../../hooks';\nimport { convertPhoneNumber } from '../../../helpers';\n\nconst ProfilePage = () => {\n\tconst showSnackBar = useSnackBar();\n\tconst { loading, data, error } = useQuery(gql(graphqlSchema.getMyProfile), {});\n\tconst {\n\t\tloading: loadingUserGroups,\n\t\terror: userGroupsError,\n\t\tdata: userGroupsData,\n\t} = useQuery(gql(graphqlSchema.users_UserGroups));\n\tconst [doUpdateUserProfile] = useMutation(\n\t\tgql(graphqlSchema.users_UpdateMyUserProfile)\n\t);\n\tconst user = _get(data, ['users_GetMyUserProfile']) || {};\n\n\tconst groups = _get(userGroupsData, 'users_UserGroups');\n\tconst firstName = _get(user, 'FirstName') || '';\n\tconst lastName = _get(user, 'LastName') || '';\n\tconst phone = _get(user, 'Phone') || '';\n\tconst email = _get(user, 'Email') || '';\n\tconst userGroup = _get(user, ['UserGroups', '0', 'GroupName']);\n\tconst isDisabled = !_get(user, 'Enabled', false);\n\tconst title = `${firstName} ${lastName} ${isDisabled ? ' - Disabled' : ''}`;\n\n\tconst initialValues = {\n\t\tfirstName,\n\t\tlastName,\n\t\temail,\n\t\tphone,\n\t\tuserGroup,\n\t};\n\n\tif (loading || loadingUserGroups) return <Loader />;\n\n\tif (userGroupsError || error) {\n\t\tconst message =\n\t\t\t_get(error, 'message') ||\n\t\t\t_get(userGroupsError, 'message', 'Something went wrong');\n\t\tshowSnackBar({\n\t\t\tmessage,\n\t\t});\n\t\treturn <></>;\n\t}\n\n\tconst onSubmit = async (\n\t\tvalues: TEditUserProfile,\n\t\t{ setStatus, setSubmitting }: FormikHelpers<TEditUserProfile>\n\t) => {\n\t\ttry {\n\t\t\tconst { firstName, lastName, phone } = values;\n\t\t\tconst variables = {\n\t\t\t\tFirstName: firstName,\n\t\t\t\tLastName: lastName,\n\t\t\t\tPhone: _isEmpty(phone) ? undefined : convertPhoneNumber(phone),\n\t\t\t};\n\t\t\tawait doUpdateUserProfile({\n\t\t\t\tvariables,\n\t\t\t});\n\t\t\tshowSnackBar({\n\t\t\t\tmessage: 'Profile has updated',\n\t\t\t\talertSeverity: 'success',\n\t\t\t});\n\t\t} catch (e: any) {\n\t\t\tconst message = _get(e, 'message', 'Something went wrong');\n\t\t\tsetStatus({ success: false });\n\t\t\tsetSubmitting(false);\n\t\t\tshowSnackBar({ message });\n\t\t}\n\t};\n\n\treturn (\n\t\t<MainCard title={title} sx={{ mb: 3 }}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\tvalidationSchema={userValidationSchema}\n\t\t\t>\n\t\t\t\t{({ handleSubmit }) => (\n\t\t\t\t\t<form noValidate onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Profile isGroupDisable groups={groups} />\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</MainCard>\n\t);\n};\n\nexport default ProfilePage;\n","import { ReactNode } from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tDivider,\n\tTypography,\n} from '@material-ui/core';\n\nexport interface SubCardProps {\n\tchildren: ReactNode | string | null;\n\tcontent?: boolean;\n\tclassName?: string;\n\tcontentClass?: string;\n\tdarkTitle?: boolean;\n\tsecondary?: ReactNode | string | {};\n\tsx?: {};\n\ttitle?: ReactNode | string | {};\n}\n\n// -----------------------|| CUSTOM SUB CARD ||-----------------------//\n\nconst SubCard = ({\n\tchildren,\n\tcontent,\n\tcontentClass,\n\tdarkTitle,\n\tsecondary,\n\tsx = {},\n\ttitle,\n\t...others\n}: SubCardProps) => {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tborder: '1px solid',\n\t\t\t\tborderColor:\n\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t':hover': {\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t? '0 2px 14px 0 rgb(33 150 243 / 10%)'\n\t\t\t\t\t\t\t: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n\t\t\t\t},\n\t\t\t\t...sx,\n\t\t\t}}\n\t\t\t{...others}\n\t\t>\n\t\t\t{/* card header and action */}\n\t\t\t{!darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h5'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h4'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* content & header divider */}\n\t\t\t{title && (\n\t\t\t\t<Divider\n\t\t\t\t\tsx={{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* card content */}\n\t\t\t{content && (\n\t\t\t\t<CardContent sx={{ p: 2.5 }} className={contentClass || ''}>\n\t\t\t\t\t{children}\n\t\t\t\t</CardContent>\n\t\t\t)}\n\t\t\t{!content && children}\n\t\t</Card>\n\t);\n};\n\nSubCard.defaultProps = {\n\tcontent: true,\n};\n\nexport default SubCard;\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\nexport type ScaleProps = {\n\thover: number | string | undefined;\n\ttap: number | string | undefined;\n};\n\nexport interface AnimateButtonProps {\n\tchildren?: React.ReactNode;\n\ttype?: 'slide' | 'scale' | 'rotate';\n\tdirection?: 'up' | 'down' | 'left' | 'right';\n\toffset?: number;\n\tscale?: ScaleProps;\n}\n\n// -----------------------|| ANIMATION BUTTON ||-----------------------//\n\nconst AnimateButton = React.forwardRef(\n\t(\n\t\t{ children, type, direction, offset, scale }: AnimateButtonProps,\n\t\tref: Ref<HTMLDivElement>\n\t) => {\n\t\tlet offset1;\n\t\tlet offset2;\n\t\tswitch (direction) {\n\t\t\tcase 'up':\n\t\t\tcase 'left':\n\t\t\t\toffset1 = offset;\n\t\t\t\toffset2 = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\tcase 'down':\n\t\t\tdefault:\n\t\t\t\toffset1 = 0;\n\t\t\t\toffset2 = offset;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst [x, cycleX] = useCycle(offset1, offset2);\n\t\tconst [y, cycleY] = useCycle(offset1, offset2);\n\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ rotate: 360 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\t\t\trepeatType: 'loop',\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\trepeatDelay: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t\tcase 'slide':\n\t\t\t\tif (direction === 'up' || direction === 'down') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tanimate={{ y: y !== undefined ? y : '' }}\n\t\t\t\t\t\t\tonHoverEnd={() => cycleY()}\n\t\t\t\t\t\t\tonHoverStart={() => cycleY()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ x: x !== undefined ? x : '' }}\n\t\t\t\t\t\tonHoverEnd={() => cycleX()}\n\t\t\t\t\t\tonHoverStart={() => cycleX()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\n\t\t\tcase 'scale':\n\t\t\tdefault:\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\twhileHover={{ scale: scale?.hover }}\n\t\t\t\t\t\twhileTap={{ scale: scale?.tap }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t}\n\t}\n);\n\nAnimateButton.defaultProps = {\n\ttype: 'scale',\n\toffset: 10,\n\tdirection: 'right',\n\tscale: {\n\t\thover: 1,\n\t\ttap: 0.9,\n\t},\n};\n\nexport default AnimateButton;\n","import { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n\tInputLabel as MuiInputLabel,\n\tInputLabelProps,\n} from '@material-ui/core';\n\nconst BInputLabel = styled(\n\t(props: MUIInputLabelProps) => <MuiInputLabel {...props} />,\n\t{\n\t\tshouldForwardProp: prop => prop !== 'horizontal',\n\t}\n)(({ theme, horizontal }) => ({\n\tcolor: theme.palette.text.primary,\n\tfontWeight: 500,\n\tmarginBottom: horizontal ? 0 : 8,\n}));\n\nexport interface MUIInputLabelProps extends InputLabelProps {\n\thorizontal: boolean;\n}\n\nconst InputLabel = ({\n\tchildren,\n\thorizontal,\n\t...others\n}: MUIInputLabelProps) => (\n\t\t<BInputLabel horizontal={horizontal} {...others}>\n\t\t\t{children}\n\t\t</BInputLabel>\n\t);\n\nInputLabel.defaultProps = {\n\thorizontal: false,\n};\n\nexport default InputLabel;\n","import { FormHelperText, Theme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport PhoneNumberInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\n\nconst useStyle = makeStyles((theme: Theme) => ({\n\twrapper: {\n\t\tbackground: theme.palette.grey['50'],\n\t\tborderRadius: '12px',\n\t\tborder: '1px solid rgba(0, 0, 0, 0.23)',\n\t\t'&& .selected-flag, &&& .selected-flag.open': {\n\t\t\twidth: '40px',\n\t\t\tborderRadius: '12px 0 0 12px',\n\t\t\tborderWidth: '0 1px 0 0',\n\t\t},\n\t\t'&& .flag-dropdown, && .flag-dropdown.open': {\n\t\t\tborderRadius: '12px 0 0 12px',\n\t\t\tborderWidth: '0 1px 0 0',\n\t\t},\n\t},\n\tphoneInput: {\n\t\t'&&&': {\n\t\t\tpadding: '14.5px 14px 14.5px 48px',\n\t\t\theight: 'auto',\n\t\t\twidth: '100%',\n\t\t\toutline: 'none',\n\t\t\tborder: 0,\n\t\t\tbackground: 'transparent',\n\t\t\tfontSize: '0.875rem',\n\t\t\tlineHeight: '20px',\n\t\t\tcolor: theme.palette.grey['900'],\n\t\t\tfontWeight: 500,\n\t\t\tfontFamily: theme.typography.fontFamily,\n\t\t},\n\t},\n\terror: {\n\t\tborderColor: theme.palette.error.main,\n\t},\n\thelper: {\n\t\tfontSize: '0.75rem',\n\t\tmargin: '3px 14px 0',\n\t},\n}));\n\ntype Props = {\n\tname: string;\n\tvalue: string | undefined;\n\tonChange: (value: string) => void;\n\tonBlur: (e: FocusEvent) => void;\n\terror: string | boolean | undefined;\n\tcountry?: string;\n\tplaceholder?: string;\n};\n\nexport const PhoneInput = (props: Props) => {\n\tconst classes = useStyle();\n\n\tconst {\n\t\tname,\n\t\tvalue,\n\t\tonChange,\n\t\tonBlur,\n\t\terror,\n\t\tcountry = '',\n\t\tplaceholder = '',\n\t} = props;\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\ttabIndex={-1}\n\t\t\t\tclassName={clsx('MuiOutlinedInput-input', classes.wrapper, {\n\t\t\t\t\t[classes.error]: error,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<PhoneNumberInput\n\t\t\t\t\tcountry={country.toLowerCase()}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tinputProps={{\n\t\t\t\t\t\tclassName: clsx('form-control', classes.phoneInput),\n\t\t\t\t\t\tonBlur,\n\t\t\t\t\t\tname,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{error ? (\n\t\t\t\t<FormHelperText className={classes.helper} error>\n\t\t\t\t\t{error}\n\t\t\t\t</FormHelperText>\n\t\t\t) : null}\n\t\t</>\n\t);\n};\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { refType } from '@material-ui/utils';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\n\nconst TextFieldRoot = experimentalStyled(FormControl, {}, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n\n  const {\n    autoComplete,\n    autoFocus = false,\n    children,\n    className,\n    color = 'primary',\n    defaultValue,\n    disabled = false,\n    error = false,\n    FormHelperTextProps,\n    fullWidth = false,\n    helperText,\n    id,\n    InputLabelProps,\n    inputProps,\n    InputProps,\n    inputRef,\n    label,\n    maxRows,\n    minRows,\n    multiline = false,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    placeholder,\n    required = false,\n    rows,\n    select = false,\n    SelectProps,\n    type,\n    value,\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n\n  const classes = useUtilityClasses(styleProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  const InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      const displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [label, displayRequired && '\\u00a0*']\n      });\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    styleProps: styleProps\n  }, other, {\n    children: [label && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary']), PropTypes.string]),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the component.\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'gutters', 'selected', 'dense']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled, { rootShouldForwardProp } from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport ListItem from '../ListItem';\nimport { overridesResolver as listItemOverridesResolver, ListItemRoot } from '../ListItem/ListItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    selected,\n    dense,\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root', selected && 'selected', dense && 'dense']\n  };\n  return composeClasses(slots, getMenuItemUtilityClass, classes);\n};\n\nconst MenuItemRoot = experimentalStyled(ListItemRoot, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes'\n}, {\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      styleProps\n    } = props;\n    return _extends({}, listItemOverridesResolver(props, styles), styleProps.dense && styles.dense);\n  }\n})(({\n  theme,\n  styleProps\n}) => _extends({}, theme.typography.body1, {\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  width: 'auto',\n  whiteSpace: 'nowrap',\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, styleProps.dense && _extends({}, theme.typography.body2, {\n  minHeight: 'auto'\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    className,\n    component = 'li',\n    dense = false,\n    disableGutters = false,\n    ListItemClasses,\n    role = 'menuitem',\n    selected,\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"dense\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  const styleProps = {\n    dense\n  };\n  const classes = useUtilityClasses(props);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListItem, _extends({\n    components: {\n      Root: MenuItemRoot\n    },\n    componentsProps: {\n      root: {\n        styleProps\n      }\n    },\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    classes: ListItemClasses\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default MenuItem;","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import React from 'react';\nimport {\n\tButton,\n\tGrid,\n\tMenuItem,\n\tSelect,\n\tStack,\n\tTextField,\n} from '@material-ui/core';\nimport { useFormikContext } from 'formik';\nimport _get from 'lodash.get';\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\nimport { gridSpacing } from '../../../../store/constant';\nimport { TEditUserProfile } from '../../../../types';\nimport config from '../../../../config';\nimport { PhoneInput } from '../../components/PhoneInput';\nimport InputLabel from '../../../../ui-component/extended/Form/InputLabel';\nimport SubCard from '../../../../ui-component/cards/SubCard';\n\ntype Props = {\n\tisGroupDisable: boolean;\n\tgroups: Array<object>;\n\tisAddNew?: boolean;\n\tisDisableEmail?: boolean;\n};\n\nconst Profile = (props: Props) => {\n\tconst { isGroupDisable, groups, isAddNew, isDisableEmail = true } = props;\n\tconst {\n\t\tvalues,\n\t\thandleChange,\n\t\thandleBlur,\n\t\ttouched,\n\t\terrors,\n\t\tsetFieldValue,\n\t\tisSubmitting,\n\t} = useFormikContext<TEditUserProfile>();\n\n\tconst title = isAddNew ? 'Add New User' : 'Edit Account Details';\n\tconst buttonLabel = isAddNew ? 'Save' : 'Update';\n\treturn (\n\t\t<Grid container spacing={gridSpacing}>\n\t\t\t<Grid item sm={6} md={8}>\n\t\t\t\t<SubCard title={title}>\n\t\t\t\t\t<Grid item xs={12} lg={6} sx={{ mb: 2 }}>\n\t\t\t\t\t\t<InputLabel>First Name</InputLabel>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tplaceholder='First Name'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={touched.firstName && Boolean(errors.firstName)}\n\t\t\t\t\t\t\thelperText={touched.firstName && errors.firstName}\n\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} lg={6} sx={{ mb: 2 }}>\n\t\t\t\t\t\t<InputLabel>Last Name</InputLabel>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='lastName'\n\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tplaceholder='Last Name'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={touched.lastName && Boolean(errors.lastName)}\n\t\t\t\t\t\t\thelperText={touched.lastName && errors.lastName}\n\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} lg={6} sx={{ mb: 2 }}>\n\t\t\t\t\t\t<InputLabel>Email</InputLabel>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={touched.email && Boolean(errors.email)}\n\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tdisabled={isDisableEmail}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} lg={6} sx={{ mb: 2 }}>\n\t\t\t\t\t\t<InputLabel>Phone</InputLabel>\n\t\t\t\t\t\t<PhoneInput\n\t\t\t\t\t\t\tcountry={config.locate.countryCode}\n\t\t\t\t\t\t\tplaceholder=''\n\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\tonChange={(value: string) => setFieldValue('phone', value)}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\terror={touched.phone && errors.phone}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} lg={6} sx={{ mb: 2 }}>\n\t\t\t\t\t\t<InputLabel>User Group</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={values.userGroup}\n\t\t\t\t\t\t\tlabelId='userGroup'\n\t\t\t\t\t\t\tid='userGroup'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tdisabled={isGroupDisable}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tname='userGroup'\n\t\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\t\terror={touched.userGroup && Boolean(errors.userGroup)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem value='' disabled>\n\t\t\t\t\t\t\t\t<em>None</em>\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t{groups.map(group => {\n\t\t\t\t\t\t\t\tconst value = _get(group, 'GroupName');\n\t\t\t\t\t\t\t\tconst label = _get(group, 'Description');\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={value} value={value}>\n\t\t\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Stack direction='row' justifyContent='flex-end'>\n\t\t\t\t\t\t\t<AnimateButton>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{buttonLabel}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</AnimateButton>\n\t\t\t\t\t\t</Stack>\n\t\t\t\t\t</Grid>\n\t\t\t\t</SubCard>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Profile;\n","import * as yup from 'yup';\nimport _isEmpty from 'lodash.isempty';\nimport { isValidPhoneNumber } from 'react-phone-number-input';\nimport { convertPhoneNumber } from '../../../helpers';\n\nconst validateMessage = {\n\tfirstName: 'First Name is required',\n\tlastName: 'Last Name is required',\n\tuserGroup: 'User Group is required',\n\tphone: 'Please enter a valid phone number',\n};\n\nexport const userValidationSchema = yup.object().shape({\n\temail: yup\n\t\t.string()\n\t\t.required('Email is required')\n\t\t.email('Please enter a valid email address.'),\n\tfirstName: yup.string().required(validateMessage.firstName),\n\tlastName: yup.string().required(validateMessage.lastName),\n\tuserGroup: yup.string().required(validateMessage.userGroup),\n\tphone: yup\n\t\t.string()\n\t\t.test(\n\t\t\t'Phone Number Test',\n\t\t\t'Please enter a valid phone number',\n\t\t\t(value = '') => {\n\t\t\t\tconst phone = convertPhoneNumber(value);\n\t\t\t\treturn _isEmpty(value) || isValidPhoneNumber(phone as string || '');\n\t\t\t}\n\t\t),\n});\n"],"sourceRoot":""}