{"version":3,"sources":["views/application/property/components/Calendar/Scheduler/IntegratedDates.tsx","views/application/property/components/Calendar/Scheduler/TooltipContent.tsx","views/application/property/components/Calendar/Scheduler/Appointment.tsx","views/application/property/components/Calendar/Scheduler/TimeTableCell.tsx","views/application/property/components/Calendar/Scheduler/SelectedCells.tsx","views/application/property/components/Calendar/Scheduler/DayScaleCell.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/constants.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/helpers.ts","views/application/property/components/Calendar/Scheduler/BookingForm/AppointmentData.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/RepeatSection.tsx","views/application/property/components/Calendar/Scheduler/BookingForm/BookingForm.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/BasicLayout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/Overlay.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/Layout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/CommandLayout.tsx","views/application/property/components/Calendar/Scheduler/AppointmentForm/AppointmentForm.tsx","views/application/property/components/Calendar/Scheduler/AppointmentContainer.tsx","views/application/property/components/Calendar/Scheduler/Timezones.tsx","views/application/property/components/Calendar/Scheduler/Scheduler.tsx"],"names":["IntegratedDates","dispatch","useDispatch","name","computed","startViewDate","setStartOfWeek","endViewDate","setEndOfWeek","useStyles","makeStyles","theme","wrapper","padding","spacing","paddingTop","section","marginBottom","TooltipContent","appointmentData","classes","getBookingInfo","fullName","email","dre","formatTime","displayDate","displayTime","Paper","className","Typography","variant","color","Box","sx","mb","display","alignItems","mr","MailOutline","fontSize","Dialpad","AccessTime","appointment","zIndex","speedDial","palette","background","paper","backgroundColor","primary","main","busy","title","overflow","fontWeight","whiteSpace","textOverflow","time","Appointment","restProps","data","isBusyBooking","isBusyAppointment","clsx","root","cell","mobileStepper","disableCell","action","disabledBackground","backgroundSize","pointerEvents","TimeTableCell","props","timeConfig","useSelector","state","_get","dateString","startDate","onDoubleClick","id","toString","onMouseDown","event","preventDefault","beginSelectingCell","onMouseEnter","addSelectedCell","onMouseUp","isCellActive","config","CELL_CLASS","memo","cells","width","position","left","light","SelectedCells","selectingCells","slotLengthMinutes","cellsProps","getCellsProp","_isEmpty","target","classList","contains","isElementContains","OVERLAY_ID","DATE_PICKER_ID","startCell","document","getElementById","dispatchEvent","Event","bubbles","React","window","addEventListener","removeEventListener","style","structuredSelector","createStructuredSelector","connect","textAlign","today","alpha","DayScaleCell","selectingDate","hasSelectingCells","isSelecting","moment","format","DATE_FORMAT","component","TYPES","DATE_PICKER_FORMAT","defaultValues","REPEAT_TYPE","generateSellerValues","property","questions","times","date","formatCells","start","address","Auth","reduce","acc","code","type","appointmentType","undefined","generateInitialValues","FNAME","EMAIL","repeat","repeatType","endDate","prepareQuestionsAnswers","values","map","string","filter","prepareSellerBookings","busyAppointmentType","appointmentTypes","find","toLowerCase","BUSY_APPOINTMENT_NAME","getBusyAppointmentType","bookingRange","endCell","startMinutes","toMinutes","endMinutes","duration","Math","abs","Array","from","_","i","startsAt","add","generateBookingRange","tentative","timeZone","tz","guess","cancelled","units","services","answers","mStartDate","diff","module","floor","bookings","day","mDay","bookingsInDay","getErrorMessages","bookingDates","booking","join","message","typography","h4","grey","AppointmentData","end","displayStart","displayEnd","mt","RepeatSection","useFormikContext","handleChange","setFieldValue","handleDateChange","field","FormControlLabel","control","Switch","checked","onChange","label","Collapse","in","RadioGroup","value","Radio","LocalizationProvider","dateAdapter","MomentUtils","Grid","container","justifyContent","item","xs","DesktopDatePicker","inputFormat","Date","renderInput","helperText","TextField","PopperProps","BookingForm","onSave","profileId","isLoading","initialValues","onSubmit","a","setIsLoading","BookingsService","createBookings","errors","setError","addAppointments","flexDirection","Divider","my","Button","disableElevation","fullWidth","disabled","BasicLayout","content","appBar","Overlay","children","visible","onHide","Modal","onClose","stopSelectingCell","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","open","Fade","layout","common","white","minWidth","maxHeight","Layout","basicLayoutComponent","CommandLayout","commandLayoutComponent","RecurrenceLayout","recurrenceLayoutComponent","onCommitButtonClick","isSaving","setIsSaving","useEffect","AppointmentForm","useState","BasicLayoutComponent","connectProps","CommandLayoutComponent","layoutComponent","overlayComponent","AppointmentContainer","Timezones","timeZones","names","inputValue","setInputValue","clientTimeZone","bgcolor","p","lg","Autocomplete","options","newValue","setClientTimeZone","getOptionLabel","option","onInputChange","newInputValue","params","InputProps","startAdornment","InputAdornment","Scheduler","appointments","elevation","timeTableCellComponent","dayScaleCellComponent","cellDuration","DEFAULT_DURATION","onCommitChanges","appointmentComponent","containerComponent","showCloseButton","contentComponent"],"mappings":"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","file":"static/js/28.a91703f4.chunk.js","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Plugin, Getter } from '@devexpress/dx-react-core';\nimport { setEndOfWeek, setStartOfWeek } from '../redux/actions';\n\nconst IntegratedDates = () => {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<Plugin name='IntegratedDates'>\n\t\t\t<Getter\n\t\t\t\tname='startViewDate'\n\t\t\t\tcomputed={({ startViewDate }) => {\n\t\t\t\t\tdispatch(setStartOfWeek(startViewDate));\n\t\t\t\t\treturn startViewDate;\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Getter\n\t\t\t\tname='endViewDate'\n\t\t\t\tcomputed={({ endViewDate }) => {\n\t\t\t\t\tdispatch(setEndOfWeek(endViewDate));\n\t\t\t\t\treturn endViewDate;\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Plugin>\n\t);\n};\n\nexport default IntegratedDates;\n","import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n\tAccessTime as AccessTimeIcon,\n\tEvent as EventIcon,\n\tMailOutline as MailOutlineIcon,\n\tDialpad as DialpadIcon,\n} from '@material-ui/icons';\nimport { AppointmentTooltip } from '@devexpress/dx-react-scheduler-material-ui';\nimport { Box } from '@material-ui/core';\nimport { formatTime, getBookingInfo } from '../helpers';\nimport type { TAppointment } from '../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\twrapper: {\n\t\tpadding: theme.spacing(2),\n\t\tpaddingTop: 0,\n\t},\n\tsection: {\n\t\tmarginBottom: theme.spacing(1),\n\t},\n}));\n\nconst TooltipContent = ({\n\tappointmentData,\n}: AppointmentTooltip.ContentProps) => {\n\tconst classes = useStyles();\n\tconst { fullName, email, dre } = getBookingInfo(\n\t\tappointmentData as TAppointment\n\t);\n\tconst { displayDate, displayTime } = formatTime(\n\t\tappointmentData as TAppointment\n\t);\n\n\treturn (\n\t\t<Paper className={classes.wrapper}>\n\t\t\t<Typography variant='h4' color='primary' className={classes.section}>\n\t\t\t\t{fullName}\n\t\t\t</Typography>\n\t\t\t<Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n\t\t\t\t<Box sx={{ mr: 0.5, display: 'flex' }}>\n\t\t\t\t\t<MailOutlineIcon fontSize='small' />\n\t\t\t\t</Box>\n\t\t\t\t<Typography variant='h6'>{email}</Typography>\n\t\t\t</Box>\n\t\t\t{dre && (\n\t\t\t\t<Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n\t\t\t\t\t<Box sx={{ mr: 0.5, display: 'flex' }}>\n\t\t\t\t\t\t<DialpadIcon fontSize='small' />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Typography variant='h6'>{dre}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t<Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n\t\t\t\t<Box sx={{ mr: 0.5, display: 'flex' }}>\n\t\t\t\t\t<EventIcon fontSize='small' />\n\t\t\t\t</Box>\n\t\t\t\t<Typography variant='h6'>{displayDate}</Typography>\n\t\t\t</Box>\n\t\t\t<Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\n\t\t\t\t<Box sx={{ mr: 0.5, display: 'flex' }}>\n\t\t\t\t\t<AccessTimeIcon fontSize='small' />\n\t\t\t\t</Box>\n\t\t\t\t<Typography variant='h6'>{displayTime}</Typography>\n\t\t\t</Box>\n\t\t</Paper>\n\t);\n};\nexport default TooltipContent;\n","import React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Typography } from '@material-ui/core';\nimport { formatTime, isBusyAppointment } from '../helpers';\nimport type { TAppointment } from '../../../../../../types/YouCanBook/bookings';\n\nconst useStyles = makeStyles(theme => ({\n\tappointment: {\n\t\tzIndex: theme.zIndex.speedDial,\n\t\tcolor: theme.palette.background.paper,\n\t\tpadding: theme.spacing(0.5, 1),\n\t\tbackgroundColor: theme.palette.primary.main,\n\t\t'&:hover': {\n\t\t\tbackgroundColor: theme.palette.primary.main,\n\t\t},\n\t},\n\tbusy: {\n\t\tbackgroundColor: '#9e9e9e',\n\t\t'&:hover': {\n\t\t\tbackgroundColor: '#9e9e9e',\n\t\t},\n\t},\n\ttitle: {\n\t\tcolor: theme.palette.background.paper,\n\t\toverflow: 'hidden',\n\t\tfontWeight: 'bold',\n\t\twhiteSpace: 'nowrap',\n\t\ttextOverflow: 'ellipsis',\n\t},\n\ttime: {\n\t\tcolor: theme.palette.background.paper,\n\t},\n}));\n\nconst Appointment = ({ ...restProps }: Appointments.AppointmentProps) => {\n\tconst { data } = restProps;\n\tconst { title } = data;\n\tconst classes = useStyles();\n\tconst isBusyBooking = isBusyAppointment(data as TAppointment);\n\tconst { displayTime } = formatTime(data as TAppointment);\n\n\treturn (\n\t\t<Appointments.Appointment\n\t\t\t{...restProps}\n\t\t\tclassName={clsx(classes.appointment, {\n\t\t\t\t[classes.busy]: isBusyBooking,\n\t\t\t})}\n\t\t>\n\t\t\t<div>\n\t\t\t\t<Typography variant='h6' classes={{ root: classes.title }}>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant='h6' classes={{ root: classes.time }}>\n\t\t\t\t\t{displayTime}\n\t\t\t\t</Typography>\n\t\t\t</div>\n\t\t</Appointments.Appointment>\n\t);\n};\n\nexport default Appointment;\n","import { memo } from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _get from 'lodash.get';\nimport { isCellActive, CELL_CLASS } from '../helpers';\nimport { beginSelectingCell, addSelectedCell } from '../redux/actions';\n\nconst useStyles = makeStyles(theme => ({\n\tcell: {\n\t\tzIndex: theme.zIndex.mobileStepper,\n\t},\n\tdisableCell: {\n\t\tbackground: `linear-gradient(-45deg,${theme.palette.action.disabledBackground} 10%,transparent 10%,transparent 50%,${theme.palette.action.disabledBackground} 50%,${theme.palette.action.disabledBackground} 60%,transparent 60%,transparent)`,\n\t\tbackgroundSize: '8px 8px',\n\t\tpointerEvents: 'none',\n\t},\n}));\n\nconst TimeTableCell = (props: WeekView.TimeTableCellProps) => {\n\tconst classes = useStyles();\n\tconst timeConfig = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst { startDate: dateString, onDoubleClick, ...restProps } = props;\n\tconst dispatch = useDispatch();\n\n\tconst onMouseDown = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tdispatch(beginSelectingCell(dateString));\n\t};\n\n\tconst onMouseEnter = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tdispatch(addSelectedCell(dateString));\n\t};\n\n\tconst onMouseUp = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tif (onDoubleClick) onDoubleClick(event);\n\t};\n\n\treturn (\n\t\t<WeekView.TimeTableCell\n\t\t\t{...restProps}\n\t\t\tstartDate={dateString}\n\t\t\tid={dateString?.toString() || ''}\n\t\t\tonMouseDown={onMouseDown}\n\t\t\tonMouseEnter={onMouseEnter}\n\t\t\tonMouseUp={onMouseUp}\n\t\t\tclassName={clsx(\n\t\t\t\tclasses.cell,\n\t\t\t\t{\n\t\t\t\t\t[classes.disableCell]: !isCellActive({\n\t\t\t\t\t\tdateString,\n\t\t\t\t\t\tconfig: timeConfig,\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\tCELL_CLASS\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default memo(TimeTableCell);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCELL_CLASS,\n\tDATE_PICKER_ID,\n\tgetCellsProp,\n\tisElementContains,\n\tOVERLAY_ID,\n} from '../helpers';\nimport { TSelectingCells } from '../../../../../../types';\n\nconst useStyles = makeStyles(theme => ({\n\tcells: {\n\t\twidth: '100%',\n\t\tposition: 'absolute',\n\t\tleft: 0,\n\t\tbackground: theme.palette.primary.light,\n\t},\n}));\n\ntype Props = {\n\tselectingCells: TSelectingCells;\n\tslotLengthMinutes: number;\n};\n\nconst SelectedCells = (props: Props) => {\n\tconst classes = useStyles();\n\tconst { selectingCells, slotLengthMinutes } = props;\n\tconst cellsProps = getCellsProp(selectingCells, slotLengthMinutes);\n\n\tconst onMouseUp = (event: MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tif (_isEmpty(selectingCells)) return;\n\n\t\tconst { target } = event;\n\n\t\tif ((target as HTMLElement).classList.contains(CELL_CLASS)) return;\n\t\tif (isElementContains(OVERLAY_ID, target)) return;\n\t\tif (isElementContains(DATE_PICKER_ID, target)) return;\n\n\t\tconst { startCell } = selectingCells;\n\t\tconst cell = document.getElementById(startCell.toString());\n\t\tif (cell) {\n\t\t\tcell.dispatchEvent(new Event('mouseup', { bubbles: true }));\n\t\t}\n\t};\n\n\tReact.useEffect(() => {\n\t\twindow.addEventListener('mouseup', onMouseUp);\n\t\treturn () => {\n\t\t\twindow.removeEventListener('mouseup', onMouseUp);\n\t\t};\n\t}, []);\n\n\treturn <div className={classes.cells} style={cellsProps} />;\n};\n\nconst structuredSelector = createStructuredSelector({\n\tselectingCells: state => _get(state, 'calendar.selectingCells'),\n\tslotLengthMinutes: state =>\n\t\t_get(state, 'calendar.config.times.slotLengthMinutes'),\n});\n\nexport default connect(structuredSelector)(React.memo(SelectedCells));\n","import * as React from 'react';\nimport { WeekView } from '@devexpress/dx-react-scheduler-material-ui';\nimport { makeStyles, alpha } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport moment from 'moment';\nimport SelectedCells from './SelectedCells';\nimport { DATE_FORMAT } from '../helpers';\n\nconst useStyles = makeStyles(theme => ({\n\tcell: {\n\t\t'&&': {\n\t\t\tpadding: theme.spacing(1, 0),\n\t\t\twidth: '100%',\n\t\t\tdisplay: 'block',\n\t\t\ttextAlign: 'center',\n\t\t},\n\t},\n\ttoday: {\n\t\tbackgroundColor: alpha(theme.palette.primary.main, 0.16),\n\t},\n}));\n\ntype Props = WeekView.DayScaleCellProps & {\n\tselectingDate: string;\n\tisSelecting: boolean;\n};\n\nconst DayScaleCell = (props: Props) => {\n\tconst classes = useStyles();\n\tconst { today, startDate, selectingDate, isSelecting } = props;\n\tconst hasSelectingCells =\n\t\tisSelecting && selectingDate === moment(startDate).format(DATE_FORMAT);\n\n\treturn (\n\t\t<Box\n\t\t\tcomponent='td'\n\t\t\tsx={{\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tposition: 'relative',\n\t\t\t\twidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\t<WeekView.DayScaleCell\n\t\t\t\t{...props}\n\t\t\t\tclassName={clsx(classes.cell, {\n\t\t\t\t\t[classes.today]: today,\n\t\t\t\t})}\n\t\t\t/>\n\t\t\t{hasSelectingCells && <SelectedCells />}\n\t\t</Box>\n\t);\n};\n\nconst structuredSelector = createStructuredSelector({\n\tselectingDate: state => _get(state, 'calendar.selectingCells.date'),\n\tisSelecting: state => _get(state, 'calendar.isSelecting'),\n});\n\nexport default connect(structuredSelector)(React.memo(DayScaleCell));\n","export const TYPES = {\n\tSIMPLE: 'SIMPLE',\n\tCHECKBOX: 'CHECKBOX',\n\tMULTI_DROPDOWN: 'MULTI_DROPDOWN',\n};\n","import { Auth } from 'aws-amplify';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport _get from 'lodash.get';\nimport { formatCells, toMinutes } from '../../helpers';\nimport type { TQuestion, TAppointmentType } from '../types';\nimport { TYPES } from './constants';\nimport { BUSY_APPOINTMENT_NAME } from '../../constants';\nimport { TSelectingCells } from '../../../../../../../types';\n\nconst BOOKING_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\nconst BOOKING_DATE_FORMAT = 'YYYY-MM-DD';\nconst BOOKING_TIME_FORMAT = 'HH:mm:ss';\nexport const DATE_PICKER_FORMAT = 'MM/DD/YYYY';\nconst WEEK_DAYS = 7;\n\nconst defaultValues = {\n\t[TYPES.SIMPLE]: '',\n\t[TYPES.CHECKBOX]: false,\n\t[TYPES.MULTI_DROPDOWN]: '',\n};\n\nconst REPEAT_TYPE = {\n\tdaily: 'daily',\n\tweekly: 'weekly',\n};\n\nexport const generateInitialValues = (questions: TQuestion[]): Object =>\n\tquestions.reduce(\n\t\t(acc, { code, type }) => ({ ...acc, [code]: defaultValues[type] }),\n\t\t{\n\t\t\tappointmentType: undefined,\n\t\t}\n\t);\n\nconst generateBookingRange = (\n\tselectingCells: TSelectingCells,\n\tslotLengthMinutes: number\n) => {\n\tconst { startCell, endCell } = selectingCells;\n\tconst { start } = formatCells(selectingCells, slotLengthMinutes);\n\tconst startMinutes = toMinutes(startCell);\n\tconst endMinutes = toMinutes(endCell);\n\tconst duration = Math.abs((startMinutes - endMinutes) / slotLengthMinutes) + 1;\n\treturn Array.from(Array(duration), (_, i) => ({\n\t\tstartsAt: moment(start)\n\t\t\t.add(i * slotLengthMinutes, 'm')\n\t\t\t.format(BOOKING_FORMAT),\n\t}));\n};\n\nexport const generateSellerValues = ({\n\tproperty,\n\tselectingCells,\n\tconfig,\n}: any): Object => {\n\tconst {\n\t\tquestions,\n\t\ttimes: { slotLengthMinutes },\n\t} = config;\n\tconst { start } = formatCells(selectingCells, slotLengthMinutes);\n\tconst date = start.format(DATE_PICKER_FORMAT);\n\tconst address = _get(property, 'PropertyData.FullAddress', '');\n\tconst email = _get(Auth, ['user', 'attributes', 'email'], '');\n\treturn {\n\t\t...generateInitialValues(questions),\n\t\tFNAME: address,\n\t\tEMAIL: email,\n\t\trepeat: false,\n\t\trepeatType: REPEAT_TYPE.daily,\n\t\tstartDate: date,\n\t\tendDate: date,\n\t};\n};\n\nconst prepareQuestionsAnswers = (questions: TQuestion[], values: any): Object =>\n\tquestions\n\t\t.map(({ code }) => ({ code, string: values[code] }))\n\t\t.filter(({ string }) => string);\n\nexport const getBusyAppointmentType = (\n\tappointmentTypes: Object[]\n): Object | typeof undefined =>\n\tappointmentTypes.find(\n\t\ttype => _get(type, 'name', '').toLowerCase() === BUSY_APPOINTMENT_NAME\n\t);\n\nexport const prepareSellerBookings = ({\n\tselectingCells,\n\tvalues,\n\tconfig,\n}: any): Object[] => {\n\tconst {\n\t\tquestions,\n\t\ttimes: { slotLengthMinutes },\n\t} = config;\n\tconst { repeat, repeatType, startDate, endDate } = values;\n\tconst appointmentTypes = _get(config, 'services.items', []);\n\tconst busyAppointmentType = getBusyAppointmentType(appointmentTypes);\n\tconst bookingRange = generateBookingRange(selectingCells, slotLengthMinutes);\n\n\tif (!repeat)\n\t\treturn bookingRange.map(({ startsAt }) => ({\n\t\t\tstartsAt,\n\t\t\ttitle: BUSY_APPOINTMENT_NAME,\n\t\t\ttentative: 'NOT_USED',\n\t\t\ttimeZone: moment.tz.guess(),\n\t\t\tcancelled: false,\n\t\t\tunits: 1,\n\t\t\tservices: [busyAppointmentType],\n\t\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t\t}));\n\n\tconst mStartDate = moment(startDate);\n\tconst mEndDate = moment(endDate);\n\tconst diff = mEndDate.diff(mStartDate, 'day');\n\tconst module = repeatType === REPEAT_TYPE.weekly ? WEEK_DAYS : 1;\n\n\tconst days = Array.from(\n\t\tArray(Math.floor(diff / module) + 1),\n\t\t(_, i) => i * module\n\t);\n\n\tconst bookingsArr = days.reduce((bookings: any[], day: number) => {\n\t\tconst mDay = moment(startDate).add(day, 'day');\n\t\tconst bookingsInDay = bookingRange.map(({ startsAt }) => ({\n\t\t\ttitle: BUSY_APPOINTMENT_NAME,\n\t\t\tstartsAt: `${mDay.format(BOOKING_DATE_FORMAT)}T${moment(startsAt).format(\n\t\t\t\tBOOKING_TIME_FORMAT\n\t\t\t)}`,\n\t\t\ttentative: 'NOT_USED',\n\t\t\ttimeZone: moment.tz.guess(),\n\t\t\tcancelled: false,\n\t\t\tunits: 1,\n\t\t\tservices: [busyAppointmentType],\n\t\t\tanswers: prepareQuestionsAnswers(questions, values),\n\t\t}));\n\n\t\treturn [...bookings, ...bookingsInDay];\n\t}, []);\n\treturn bookingsArr;\n};\n\nexport const getErrorMessages = (bookings: Object[]): Object => {\n\tconst bookingDates = bookings\n\t\t.map(booking => _get(booking, 'startsAt'))\n\t\t.join(', ');\n\treturn { message: `Cannot book at dates: ${bookingDates}` };\n};\n\nexport const getAppointmentTypeDuration = ({\n\tnumberOfSlots,\n\tslotLengthMinutes,\n}: TAppointmentType): string => `${numberOfSlots * slotLengthMinutes} minutes`;\n","import { memo } from 'react';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { formatCells, displayTime, displayDate } from '../../helpers';\nimport { TSelectingCells } from '../../../../../../../types';\n\nconst useStyles = makeStyles(theme => ({\n\twrapper: {\n\t\t...theme.typography.h4,\n\t\tpadding: theme.spacing(2, 0),\n\t\tbackgroundColor: theme.palette.grey[100],\n\t\ttextAlign: 'center',\n\t},\n}));\n\ntype Props = {\n\tselectingCells: TSelectingCells;\n\tslotLengthMinutes: number;\n};\n\nconst AppointmentData = ({ selectingCells, slotLengthMinutes }: Props) => {\n\tconst classes = useStyles();\n\tif (_isEmpty(selectingCells)) return <div />;\n\tconst { date } = selectingCells;\n\tconst { start, end } = formatCells(selectingCells, slotLengthMinutes);\n\tconst displayStart = displayTime(start);\n\tconst displayEnd = displayTime(end);\n\n\treturn (\n\t\t<div className={classes.wrapper}>\n\t\t\t<Typography variant='h4'>{displayDate(date)}</Typography>\n\t\t\t<Box sx={{ mt: 1 }}>\n\t\t\t\t<Typography variant='h3'>\n\t\t\t\t\t{displayStart} - {displayEnd}\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nconst structuredSelector = createStructuredSelector({\n\tselectingCells: state => _get(state, 'calendar.selectingCells'),\n\tslotLengthMinutes: state =>\n\t\t_get(state, 'calendar.config.times.slotLengthMinutes'),\n});\n\nexport default connect(structuredSelector)(memo(AppointmentData));\n","import MomentUtils from '@date-io/moment';\nimport { useFormikContext } from 'formik';\nimport {\n\tCollapse,\n\tFormControlLabel,\n\tSwitch,\n\tGrid,\n\tRadioGroup,\n\tRadio,\n\tTextField,\n\tBox,\n} from '@material-ui/core';\nimport moment from 'moment';\nimport _get from 'lodash.get';\nimport { DesktopDatePicker, LocalizationProvider } from '@material-ui/lab';\nimport { DATE_PICKER_FORMAT } from './helpers';\nimport { DATE_PICKER_ID } from '../../helpers';\n\nexport const RepeatSection = () => {\n\tconst { values, handleChange, setFieldValue } = useFormikContext();\n\n\tconst handleDateChange = (field: string) => (date: Date | null) => {\n\t\tsetFieldValue(field, moment(date).format(DATE_PICKER_FORMAT));\n\t};\n\n\tconst repeat = _get(values, 'repeat');\n\tconst repeatType = _get(values, 'repeatType');\n\tconst startDate = _get(values, 'startDate');\n\tconst endDate = _get(values, 'endDate');\n\n\treturn (\n\t\t<div>\n\t\t\t<FormControlLabel\n\t\t\t\tcontrol={\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tname='repeat'\n\t\t\t\t\t\tchecked={repeat}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel='Repeat'\n\t\t\t/>\n\n\t\t\t<Collapse in={repeat}>\n\t\t\t\t<div>\n\t\t\t\t\t<RadioGroup name='repeatType' value={repeatType} onChange={handleChange}>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue='daily'\n\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\tlabel='Daily'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tvalue='weekly'\n\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\tlabel='Weekly'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</div>\n\t\t\t\t<Box sx={{ mt: 2, mb: 1 }}>\n\t\t\t\t\t<LocalizationProvider dateAdapter={MomentUtils}>\n\t\t\t\t\t\t<Grid container justifyContent='space-between'>\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<DesktopDatePicker\n\t\t\t\t\t\t\t\t\tlabel='Start date'\n\t\t\t\t\t\t\t\t\tinputFormat={DATE_PICKER_FORMAT}\n\t\t\t\t\t\t\t\t\tvalue={new Date(startDate)}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange('startDate')}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t\t\t\t\trenderInput={({ helperText, ...restProps }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField {...restProps} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tPopperProps={{ id: DATE_PICKER_ID }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={5}>\n\t\t\t\t\t\t\t\t<DesktopDatePicker\n\t\t\t\t\t\t\t\t\tlabel='End date'\n\t\t\t\t\t\t\t\t\tinputFormat={DATE_PICKER_FORMAT}\n\t\t\t\t\t\t\t\t\tvalue={new Date(endDate)}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange('endDate')}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\t\t\t\t\t\trenderInput={({ helperText, ...restProps }) => (\n\t\t\t\t\t\t\t\t\t\t<TextField {...restProps} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tPopperProps={{ id: DATE_PICKER_ID }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</LocalizationProvider>\n\t\t\t\t</Box>\n\t\t\t</Collapse>\n\t\t</div>\n\t);\n};\n","import { Box, Button, Divider, Typography } from '@material-ui/core';\nimport { Formik, Form } from 'formik';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tgenerateSellerValues,\n\tgetErrorMessages,\n\tprepareSellerBookings,\n} from './helpers';\nimport AppointmentData from './AppointmentData';\nimport { BookingsService } from '../../../../../../../services/YouCanBook';\nimport { setIsLoading, setError, addAppointments } from '../../redux/actions';\nimport { RepeatSection } from './RepeatSection';\n\ntype Props = {\n\tonSave: Function;\n};\n\nconst BookingForm = ({ onSave }: Props) => {\n\tconst dispatch = useDispatch();\n\tconst property = useSelector(state => _get(state, ['calendar', 'property']));\n\tconst profileId = _get(property, 'HomeViewingCalendarProfileId');\n\tconst config = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst isLoading = useSelector(state => _get(state, ['calendar', 'isLoading']));\n\tconst selectingCells = useSelector(state =>\n\t\t_get(state, ['calendar', 'selectingCells'])\n\t);\n\tif (_isEmpty(selectingCells)) return <Box />;\n\n\tconst initialValues = generateSellerValues({\n\t\tproperty,\n\t\tselectingCells,\n\t\tconfig,\n\t});\n\n\tconst onSubmit = async (values: Object) => {\n\t\tdispatch(setIsLoading(true));\n\t\ttry {\n\t\t\tconst data = prepareSellerBookings({ selectingCells, values, config });\n\t\t\tconst { bookings, errors } = await BookingsService.createBookings({\n\t\t\t\tprofileId,\n\t\t\t\tdata,\n\t\t\t});\n\t\t\tif (!_isEmpty(errors)) dispatch(setError(getErrorMessages(errors)));\n\t\t\tdispatch(addAppointments(bookings));\n\t\t\tonSave();\n\t\t} catch (error) {\n\t\t\tdispatch(setError(error as Error));\n\t\t}\n\t\tdispatch(setIsLoading(false));\n\t};\n\n\treturn (\n\t\t<Box sx={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t<Form>\n\t\t\t\t\t<Box sx={{ mb: 2 }}>\n\t\t\t\t\t\t<Typography variant='h4'>Block available slots</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<AppointmentData />\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Box sx={{ my: 2 }}>\n\t\t\t\t\t\t<RepeatSection />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm Booking\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Formik>\n\t\t</Box>\n\t);\n};\n\nexport default BookingForm;\n","import { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { BookingForm } from '../BookingForm';\n\ntype Props = AppointmentForm.BasicLayoutProps & {\n\tonSave: Function;\n};\n\nexport const BasicLayout = (props: Props) => {\n\tconst { onSave } = props;\n\n\treturn (\n\t\t<BookingForm\n\t\t\tonSave={onSave}\n\t\t/>\n\t);\n};\n\nexport default BasicLayout;\n","import * as React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { Fade } from '@material-ui/core';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { stopSelectingCell } from '../../redux/actions';\nimport { OVERLAY_ID } from '../../helpers';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tcontent: {\n\t\tzIndex: theme.zIndex.appBar\n\t}\n}));\n\nexport const Overlay = ({ children, visible, onHide, ...restProps }: AppointmentForm.OverlayProps) => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\n\tconst onClose = () => {\n\t\tonHide();\n\t\tdispatch(stopSelectingCell());\n\t};\n\n\treturn (\n\t\t<Modal\n\t\t\tid={OVERLAY_ID}\n\t\t\tclassName={classes.root}\n\t\t\tonClose={onClose}\n\t\t\tcloseAfterTransition\n\t\t\tBackdropComponent={Backdrop}\n\t\t\tBackdropProps={{\n\t\t\t\ttimeout: 500,\n\t\t\t}}\n\t\t\topen={visible}\n\t\t\t{...restProps}\n\t\t>\n\t\t\t<Fade in={visible}>\n\t\t\t\t<div className={classes.content}>{children}</div>\n\t\t\t</Fade>\n\t\t</Modal>\n\t);\n};\n","// @ts-nocheck\nimport { makeStyles } from '@material-ui/core';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\n\nconst useStyles = makeStyles(theme => ({\n\tlayout: {\n\t\tbackground: theme.palette.common.white,\n\t},\n\tcontent: {\n\t\tpadding: theme.spacing(4),\n\t\twidth: '30vw',\n\t\tminWidth: '300px',\n\t\toverflow: 'auto',\n\t\tmaxHeight: '90vh',\n\t},\n}));\n\nexport const Layout = (props: AppointmentForm.LayoutProps) => {\n\tconst {\n\t\tbasicLayoutComponent: BasicLayout,\n\t\tcommandLayoutComponent: CommandLayout,\n\t\trecurrenceLayoutComponent: RecurrenceLayout,\n\t\tchildren,\n\t\t...restProps\n\t} = props;\n\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.layout} {...restProps}>\n\t\t\t<CommandLayout />\n\t\t\t<div className={classes.content}>\n\t\t\t\t<BasicLayout />\n\t\t\t\t<RecurrenceLayout />\n\t\t\t</div>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n","import { useEffect } from 'react';\nimport { AppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\n\ntype Props = AppointmentForm.CommandLayoutProps & {\n\tisSaving: boolean;\n\tsetIsSaving: (value: boolean) => void;\n};\n\nexport const CommandLayout = (props: Props) => {\n\tconst { onCommitButtonClick, isSaving, setIsSaving } = props;\n\n\tuseEffect(() => {\n\t\tif (isSaving) {\n\t\t\tonCommitButtonClick();\n\t\t\tsetIsSaving(false);\n\t\t}\n\t}, [isSaving]);\n\n\treturn <div />;\n};\n","import React, { useState } from 'react';\n\nimport { AppointmentForm as SchedulerAppointmentForm } from '@devexpress/dx-react-scheduler-material-ui';\nimport { connectProps } from '@devexpress/dx-react-core';\nimport { useDispatch } from 'react-redux';\nimport BasicLayout from './BasicLayout';\nimport { stopSelectingCell } from '../../redux/actions';\nimport { Overlay } from './Overlay';\nimport { Layout } from './Layout';\nimport { CommandLayout } from './CommandLayout';\n\nexport const AppointmentForm = () => {\n\tconst [isSaving, setIsSaving] = useState(false);\n\tconst dispatch = useDispatch();\n\tconst onSave = () => {\n\t\tsetIsSaving(true);\n\t\tdispatch(stopSelectingCell());\n\t};\n\tconst BasicLayoutComponent = connectProps(BasicLayout, () => ({\n\t\tonSave,\n\t}));\n\n\tconst CommandLayoutComponent = connectProps(CommandLayout, () => ({\n\t\tisSaving,\n\t\tsetIsSaving,\n\t}));\n\n\treturn (\n\t\t<SchedulerAppointmentForm\n\t\t\tlayoutComponent={Layout}\n\t\t\tbasicLayoutComponent={BasicLayoutComponent}\n\t\t\tcommandLayoutComponent={CommandLayoutComponent}\n\t\t\toverlayComponent={Overlay}\n\t\t/>\n\t);\n};\n","import * as React from 'react';\nimport { Appointments } from '@devexpress/dx-react-scheduler-material-ui';\n\ntype Props = Appointments.ContainerProps & {\n\tchildren?: React.ReactElement;\n};\n\nexport const AppointmentContainer = ({\n\tstyle,\n\tchildren,\n\t...restProps\n}: Props) => (\n\t<div style={{ ...style, zIndex: 1200 }} {...restProps}>\n\t\t{children}\n\t</div>\n);\n","import { useState, memo } from 'react';\nimport {\n\tBox,\n\tInputAdornment,\n\tAutocomplete,\n\tTextField,\n} from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport _get from 'lodash.get';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setClientTimeZone } from '../redux/actions';\n\nconst Timezones = () => {\n\tconst timeZones: Array<string> = moment.tz.names();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst dispatch = useDispatch();\n\tconst clientTimeZone = useSelector(state =>\n\t\t_get(state, ['calendar', 'clientTimeZone'])\n\t);\n\n\treturn (\n\t\t<Box bgcolor='grey.100' sx={{ p: 2 }} alignItems='center' display='flex'>\n\t\t\t<Box sx={{ width: { xs: '100%', lg: '30%' } }}>\n\t\t\t\t<Autocomplete\n\t\t\t\t\toptions={timeZones}\n\t\t\t\t\tvalue={clientTimeZone}\n\t\t\t\t\tonChange={(event: any, newValue: string | null) => {\n\t\t\t\t\t\tif (newValue) {\n\t\t\t\t\t\t\tdispatch(setClientTimeZone(newValue as string));\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tgetOptionLabel={option => option}\n\t\t\t\t\tinputValue={inputValue}\n\t\t\t\t\tonInputChange={(event, newInputValue) => {\n\t\t\t\t\t\tsetInputValue(newInputValue);\n\t\t\t\t\t}}\n\t\t\t\t\trenderInput={params => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\t\t\tstartAdornment: (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position='start'>\n\t\t\t\t\t\t\t\t\t\t\t<LanguageIcon />\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t\t\t{params.InputProps.startAdornment}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default memo(Timezones);\n","import { Paper } from '@material-ui/core';\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\nimport {\n\tScheduler as SchedulerComponent,\n\tWeekView,\n\tAppointments,\n\tAppointmentTooltip,\n\tToolbar,\n\tDateNavigator,\n\tTodayButton,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useSelector } from 'react-redux';\n\nimport { DEFAULT_DURATION } from '../constants';\nimport IntegratedDates from './IntegratedDates';\nimport TooltipContent from './TooltipContent';\nimport Appointment from './Appointment';\nimport TimeTableCell from './TimeTableCell';\nimport DayScaleCell from './DayScaleCell';\nimport { AppointmentForm } from './AppointmentForm';\nimport { AppointmentContainer } from './AppointmentContainer';\nimport Timezones from './Timezones';\n\ntype Props = {\n\tprofileId: string;\n};\n\nconst Scheduler = ({ profileId }: Props) => {\n\tif (!profileId) return null;\n\n\tconst config = useSelector(state => _get(state, ['calendar', 'config']));\n\tconst appointments = useSelector(state =>\n\t\t_get(state, ['calendar', 'appointments'])\n\t);\n\n\tconst onCommitChanges = () => {};\n\n\tif (_isEmpty(config)) return <></>;\n\n\treturn (\n\t\t<Paper elevation={3}>\n\t\t\t<Timezones />\n\t\t\t<SchedulerComponent data={appointments}>\n\t\t\t\t<ViewState />\n\t\t\t\t<WeekView\n\t\t\t\t\ttimeTableCellComponent={TimeTableCell}\n\t\t\t\t\tdayScaleCellComponent={DayScaleCell}\n\t\t\t\t\tcellDuration={_get(config, 'slotLengthMinutes') || DEFAULT_DURATION}\n\t\t\t\t/>\n\t\t\t\t<EditingState onCommitChanges={onCommitChanges} />\n\t\t\t\t<IntegratedDates />\n\t\t\t\t<Toolbar />\n\t\t\t\t<DateNavigator />\n\t\t\t\t<TodayButton />\n\t\t\t\t<Appointments\n\t\t\t\t\tappointmentComponent={Appointment}\n\t\t\t\t\tcontainerComponent={AppointmentContainer as any}\n\t\t\t\t/>\n\t\t\t\t<AppointmentTooltip showCloseButton contentComponent={TooltipContent} />\n\t\t\t\t<AppointmentForm />\n\t\t\t</SchedulerComponent>\n\t\t</Paper>\n\t);\n};\n\nexport default Scheduler;\n"],"sourceRoot":""}