{"version":3,"sources":["views/application/property/ListHeader.tsx","views/application/property/PropertyToolbar.tsx","views/application/property/PropertyList.tsx","views/pages/property/ListPage.tsx","graphql/queries.ts","utils/table.ts","views/application/components/LoadMore/index.tsx"],"names":["headCells","id","numeric","disablePadding","label","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","undefined","TableSortLabel","active","direction","onClick","property","event","className","pr","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","title","flex","PropertyToolbar","onCreate","Toolbar","clsx","Grid","container","justifyContent","alignItems","item","xs","sm","Typography","variant","component","Tooltip","Fab","boxShadow","ml","width","height","table","minWidth","PropertyList","useQuery","gql","listProperties","variables","limit","config","pagination","fetchPolicy","notifyOnNetworkStatusChange","loading","error","data","fetchMore","rows","_get","nextToken","useTheme","history","useHistory","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","Loader","_isEmpty","Alert","severity","length","propertyAddNewLink","generatePath","push","TableContainer","Table","size","target","TableBody","stableSort","getComparator","row","index","isItemSelected","PropertyId","labelId","propertyData","streetAddress","county","zip","city","state","propertyNo","extractPropertyData","hover","role","tabIndex","scope","IconButton","fontSize","LoadMore","onLoadMore","disabled","ListPage","MainCard","getForm","getOffer","getProperty","listFormCategories","listForms","listOfferSteps","listOffers","listSupportedVestingTypes","searchDataTreeProperties","searchOffers","descendingComparator","a","b","array","comparator","stabilizedThis","el","sort","LoadMoreButton","withStyles","borderRadius","Button","toolbar","type"],"mappings":"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","file":"static/js/20.adc2c9b1.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'PropertyId',\n\t\tnumeric: false,\n\t\tdisablePadding: true,\n\t\tlabel: 'ID',\n\t},\n\t{\n\t\tid: 'PropertyData.StreetAddress',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Street Address',\n\t},\n\t{\n\t\tid: 'PropertyData.County',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'County',\n\t},\n\t{\n\t\tid: 'PropertyData.State',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'State',\n\t},\n\t{\n\t\tid: 'PropertyData.Zip',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Zip',\n\t},\n\t{\n\t\tid: 'PropertyData.City',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'City',\n\t},\n\t{\n\t\tid: 'PropertyNo',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Property No',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler =\n\t\t(property: string) => (event: React.SyntheticEvent) => {\n\t\t\tonRequestSort(event, property);\n\t\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Fab, Grid, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/AddTwoTone';\nimport { EnhancedTableToolbarWithMassActionProps } from '../../../types';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(2),\n\t},\n\thighlight: {\n\t\tbackgroundColor: alpha(\n\t\t\ttheme.palette.primary.main,\n\t\t\ttheme.palette.action.activatedOpacity\n\t\t),\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst PropertyToolbar = (props: EnhancedTableToolbarWithMassActionProps) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected, onCreate } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tjustifyContent='space-between'\n\t\t\t\talignItems='center'\n\t\t\t\tspacing={2}\n\t\t\t>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t{numSelected > 0 && (\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\t\t\tcomponent='div'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{numSelected} selected\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t<Grid container justifyContent='flex-end' alignItems='center'>\n\t\t\t\t\t\t<Tooltip title='Create'>\n\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\taria-label='add'\n\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\tboxShadow: 'none',\n\t\t\t\t\t\t\t\t\tml: 1,\n\t\t\t\t\t\t\t\t\twidth: '48px',\n\t\t\t\t\t\t\t\t\theight: '48px',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={onCreate}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<AddIcon />\n\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Toolbar>\n\t);\n};\n\nexport default PropertyToolbar;\n","import React from 'react';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCheckbox,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tAlert,\n\tuseTheme,\n\tIconButton,\n} from '@material-ui/core';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from 'react-router';\nimport { generatePath } from 'react-router-dom';\nimport { TProperty } from '../../../types';\nimport { listProperties } from '../../../graphql/queries';\nimport { getComparator, stableSort } from '../../../utils/table';\nimport Loader from '../../../ui-component/Loader';\nimport Header from './ListHeader';\nimport LoadMore from '../components/LoadMore';\nimport config from '../../../config';\nimport { useOrder, useSelectRow } from '../../../hooks';\nimport PropertyToolbar from './PropertyToolbar';\n\nconst useStyles = makeStyles(() => ({\n\ttable: {\n\t\tminWidth: '750px',\n\t},\n}));\n\nconst PropertyList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(listProperties), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\n\tconst rows: TProperty[] = _get(data, 'listProperties.items', []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listProperties.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { order, orderBy, handleRequestSort } = useOrder('PropertyId');\n\tconst { selected, isSelected, handleSelect, handleSelectAll } =\n\t\tuseSelectRow('PropertyId');\n\n\tif (loading && !data) return <Loader />;\n\tif (error || _isEmpty(data)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: { limit: config.pagination.limit, nextToken },\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\tconst onCreateHandler = () => {\n\t\tconst propertyAddNewLink = generatePath('/property-add');\n\t\thistory.push(propertyAddNewLink);\n\t};\n\n\tconst editProperty = (id: string) => {\n\t\thistory.push(`/property/${id}`);\n\t};\n\n\tconst extractPropertyData = (row: TProperty) => {\n\t\tconst propertyData = _get(row, 'PropertyData', {});\n\t\tconst streetAddress = _get(propertyData, 'StreetAddress', '');\n\t\tconst county = _get(propertyData, 'County', '');\n\t\tconst zip = _get(propertyData, 'Zip', '');\n\t\tconst city = _get(propertyData, 'City', '');\n\t\tconst state = _get(propertyData, 'State', '');\n\t\tconst propertyNo = _get(propertyData, 'PropertyNo', '');\n\t\treturn { streetAddress, county, zip, city, state, propertyNo };\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PropertyToolbar numSelected={selected.length} onCreate={onCreateHandler} />\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TProperty>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.PropertyId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\t\t\t\t\t\t\t\tconst { streetAddress, county, zip, city, state, propertyNo } =\n\t\t\t\t\t\t\t\t\textractPropertyData(row);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.PropertyId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component='th' id={labelId} scope='row' padding='none'>\n\t\t\t\t\t\t\t\t\t\t\t{row.PropertyId}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{streetAddress}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{county}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{state}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{zip}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{city}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pr: 3 }} align='left'>\n\t\t\t\t\t\t\t\t\t\t\t{propertyNo}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => editProperty(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} loading={loading} />\n\t\t</>\n\t);\n};\n\nexport default PropertyList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport PropertyList from '../../application/property/PropertyList';\n\nconst ListPage = () => (\n\t<MainCard title='Properties List'>\n\t\t<PropertyList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n  query GetForm($FormId: ID!) {\n    getForm(FormId: $FormId) {\n      CategoryId\n      CreatedBy\n      CreatedDT\n      FormId\n      FormStatus\n      FormTypeId\n      Template\n      Title\n      UpdatedBy\n      UpdatedDT\n    }\n  }\n`;\nexport const getFormCategory = /* GraphQL */ `\n  query GetFormCategory($CategoryId: ID!) {\n    getFormCategory(CategoryId: $CategoryId) {\n      Active\n      FormTypes {\n        Active\n        Forms {\n          CategoryId\n          CreatedBy\n          CreatedDT\n          FormId\n          FormStatus\n          FormTypeId\n          Template\n          Title\n          UpdatedBy\n          UpdatedDT\n        }\n        Name\n        Order\n        id\n      }\n      Forms {\n        CategoryId\n        CreatedBy\n        CreatedDT\n        FormId\n        FormStatus\n        FormTypeId\n        Template\n        Title\n        UpdatedBy\n        UpdatedDT\n      }\n      ItemType\n      Title\n      id\n    }\n  }\n`;\nexport const getOffer = /* GraphQL */ `\n  query GetOffer($OfferId: ID!) {\n    getOffer(OfferId: $OfferId) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        BuyerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n        CounterOfferId\n        Forms\n        Position\n        SellerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n      }\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      SCAR {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      SignedPurchaseAgreement {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      Step {\n        allowed_actions {\n          action\n          form_action\n          next_step_id\n        }\n        allowed_upload_file_types {\n          allow_files_count\n          allow_single_file_max_size_mb\n          file_type\n        }\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        messages {\n          advisor\n          buyer\n          seller\n        }\n        name\n        waiting_seller_to_act\n      }\n      StepId\n    }\n  }\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n  query GetOfferDocPutUrls(\n    $DocumentType: String!\n    $Documents: [FileItemInput]!\n    $OfferId: ID!\n  ) {\n    getOfferDocPutUrls(\n      DocumentType: $DocumentType\n      Documents: $Documents\n      OfferId: $OfferId\n    ) {\n      id\n      url\n    }\n  }\n`;\nexport const getOfferStep = /* GraphQL */ `\n  query GetOfferStep($StepId: Int!) {\n    getOfferStep(StepId: $StepId) {\n      allowed_actions {\n        action\n        form_action\n        next_step_id\n      }\n      allowed_upload_file_types {\n        allow_files_count\n        allow_single_file_max_size_mb\n        file_type\n      }\n      buyer_can_submit_offer\n      display_on_advisor_portal\n      display_on_seller_dashboard\n      id\n      messages {\n        advisor\n        buyer\n        seller\n      }\n      name\n      waiting_seller_to_act\n    }\n  }\n`;\nexport const getProperty = /* GraphQL */ `\n  query GetProperty($PropertyId: ID!) {\n    getProperty(PropertyId: $PropertyId) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n  query GetPropertyThumbnailPutUrl(\n    $Photos: [FileItemInput]!\n    $PropertyId: ID!\n  ) {\n    getPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n      id\n      url\n    }\n  }\n`;\nexport const listFormCategories = /* GraphQL */ `\n  query ListFormCategories {\n    listFormCategories {\n      Active\n      FormTypes {\n        Active\n        Forms {\n          CategoryId\n          CreatedBy\n          CreatedDT\n          FormId\n          FormStatus\n          FormTypeId\n          Template\n          Title\n          UpdatedBy\n          UpdatedDT\n        }\n        Name\n        Order\n        id\n      }\n      Forms {\n        CategoryId\n        CreatedBy\n        CreatedDT\n        FormId\n        FormStatus\n        FormTypeId\n        Template\n        Title\n        UpdatedBy\n        UpdatedDT\n      }\n      ItemType\n      Title\n      id\n    }\n  }\n`;\nexport const listForms = /* GraphQL */ `\n  query ListForms($limit: Int, $nextToken: String) {\n    listForms(limit: $limit, nextToken: $nextToken) {\n      items {\n        CategoryId\n        CreatedBy\n        CreatedDT\n        FormId\n        FormStatus\n        FormTypeId\n        Template\n        Title\n        UpdatedBy\n        UpdatedDT\n      }\n      nextToken\n    }\n  }\n`;\nexport const listOfferSteps = /* GraphQL */ `\n  query ListOfferSteps {\n    listOfferSteps {\n      allowed_actions {\n        action\n        form_action\n        next_step_id\n      }\n      allowed_upload_file_types {\n        allow_files_count\n        allow_single_file_max_size_mb\n        file_type\n      }\n      buyer_can_submit_offer\n      display_on_advisor_portal\n      display_on_seller_dashboard\n      id\n      messages {\n        advisor\n        buyer\n        seller\n      }\n      name\n      waiting_seller_to_act\n    }\n  }\n`;\nexport const listOffers = /* GraphQL */ `\n  query ListOffers($limit: Int, $nextToken: String) {\n    listOffers(limit: $limit, nextToken: $nextToken) {\n      items {\n        AgentInfo {\n          AssistantEmail\n          DreNumber\n          Email\n          Firstname\n          Lastname\n          Middlename\n          Phone\n        }\n        BuyerInfo {\n          FirstName\n          LastName\n          MiddleName\n          TitleName\n        }\n        BuyerType\n        Contingencies {\n          AllRemoved\n          AnyAndAll\n          FinanceContingency\n          FinanceContingencyDueDate\n          FinanceContingencyRemoved\n          FinanceContingencyRemovedAt\n          InspectionContingency\n          InspectionContingencyDueDate\n          InspectionContingencyRemoved\n          InspectionContingencyRemovedAt\n          SaleOfHomeContingency\n          SaleOfHomeContingencyDueDate\n          SaleOfHomeContingencyRemoved\n          SaleOfHomeContingencyRemovedAt\n        }\n        CounterOffer {\n          BuyerCounter {\n            ClosingPeriod\n            FinanceContingency\n            Furniture\n            InspectionContingency\n            OfferPrice\n            Position\n            SaleOfHomeContingency\n            SubmittedAt\n          }\n          CounterOfferId\n          Forms\n          Position\n          SellerCounter {\n            ClosingPeriod\n            FinanceContingency\n            Furniture\n            InspectionContingency\n            OfferPrice\n            Position\n            SaleOfHomeContingency\n            SubmittedAt\n          }\n        }\n        FirmInfo {\n          CompanyEmail\n          CompanyPhone\n          Companyname\n          DreNumber\n        }\n        Funding {\n          DownPayment\n          FicoScore\n          LoanType\n          PreapprovedForLoan\n          PurchaseType\n        }\n        Offer {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          SaleOfHomeContingency\n        }\n        OfferId\n        OfferNo\n        PropertyData {\n          City\n          County\n          FullAddress\n          OwnerNames\n          State\n          StreetAddress\n          VestingType\n          YearBuilt\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        SCAR {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        SignedPurchaseAgreement {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        Step {\n          allowed_actions {\n            action\n            form_action\n            next_step_id\n          }\n          allowed_upload_file_types {\n            allow_files_count\n            allow_single_file_max_size_mb\n            file_type\n          }\n          buyer_can_submit_offer\n          display_on_advisor_portal\n          display_on_seller_dashboard\n          id\n          messages {\n            advisor\n            buyer\n            seller\n          }\n          name\n          waiting_seller_to_act\n        }\n        StepId\n      }\n      nextToken\n    }\n  }\n`;\nexport const listProperties = /* GraphQL */ `\n  query ListProperties($limit: Int, $nextToken: String) {\n    listProperties(limit: $limit, nextToken: $nextToken) {\n      items {\n        CreatedAt\n        CreatedBy\n        DTPropertyId\n        ListPriceRange {\n          Max\n          MaxFormatted\n          Min\n          MinFormatted\n        }\n        PropertyData {\n          Bedrooms\n          City\n          County\n          FullAddress\n          FullBath\n          LandUse\n          LivingArea\n          LotArea\n          OwnerNames\n          State\n          StreetAddress\n          VestingOwnershipRight\n          VestingTypeMapped\n          VestingTypeOverride\n          VestingTypeUsed\n          YearBuilt\n          YearBuiltDisp\n          YearBuiltOverride\n          YearBuiltUsed\n          Zip\n        }\n        PropertyId\n        PropertyNo\n        ReportStatus {\n          TaxReportTaxResourceMessage\n          TaxReportTaxResourceStatus\n          TaxReportTaxResourceUpdatedAt\n          TaxReportTotalViewMessage\n          TaxReportTotalViewStatus\n          TaxReportTotalViewUpdatedAt\n        }\n        SellerInfo {\n          Email\n          FirstName\n          LastName\n          Phone\n        }\n        StatusId\n        Thumbnail {\n          file {\n            path\n          }\n          id\n          key\n          name\n          presignedUrl\n          size\n          type\n        }\n        UpdatedAt\n        UpdatedBy\n      }\n      nextToken\n    }\n  }\n`;\nexport const listPropertyStatuses = /* GraphQL */ `\n  query ListPropertyStatuses {\n    listPropertyStatuses {\n      Desc\n      Id\n      Name\n    }\n  }\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n  query ListSupportedVestingTypes {\n    listSupportedVestingTypes\n  }\n`;\nexport const searchDataTreeProperties = /* GraphQL */ `\n  query SearchDataTreeProperties($SearchText: String!) {\n    searchDataTreeProperties(SearchText: $SearchText) {\n      Count\n      Properties {\n        City\n        County\n        Owner\n        PropertyId\n        State\n        StreetAddress\n        Zip\n      }\n    }\n  }\n`;\nexport const searchOffers = /* GraphQL */ `\n  query SearchOffers($SearchText: String!, $StepIds: [Int]) {\n    searchOffers(SearchText: $SearchText, StepIds: $StepIds) {\n      AgentInfo {\n        AssistantEmail\n        DreNumber\n        Email\n        Firstname\n        Lastname\n        Middlename\n        Phone\n      }\n      BuyerInfo {\n        FirstName\n        LastName\n        MiddleName\n        TitleName\n      }\n      BuyerType\n      Contingencies {\n        AllRemoved\n        AnyAndAll\n        FinanceContingency\n        FinanceContingencyDueDate\n        FinanceContingencyRemoved\n        FinanceContingencyRemovedAt\n        InspectionContingency\n        InspectionContingencyDueDate\n        InspectionContingencyRemoved\n        InspectionContingencyRemovedAt\n        SaleOfHomeContingency\n        SaleOfHomeContingencyDueDate\n        SaleOfHomeContingencyRemoved\n        SaleOfHomeContingencyRemovedAt\n      }\n      CounterOffer {\n        BuyerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n        CounterOfferId\n        Forms\n        Position\n        SellerCounter {\n          ClosingPeriod\n          FinanceContingency\n          Furniture\n          InspectionContingency\n          OfferPrice\n          Position\n          SaleOfHomeContingency\n          SubmittedAt\n        }\n      }\n      FirmInfo {\n        CompanyEmail\n        CompanyPhone\n        Companyname\n        DreNumber\n      }\n      Funding {\n        DownPayment\n        FicoScore\n        LoanType\n        PreapprovedForLoan\n        PurchaseType\n      }\n      Offer {\n        ClosingPeriod\n        FinanceContingency\n        Furniture\n        InspectionContingency\n        OfferPrice\n        SaleOfHomeContingency\n      }\n      OfferId\n      OfferNo\n      PropertyData {\n        City\n        County\n        FullAddress\n        OwnerNames\n        State\n        StreetAddress\n        VestingType\n        YearBuilt\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      SCAR {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      SignedPurchaseAgreement {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      Step {\n        allowed_actions {\n          action\n          form_action\n          next_step_id\n        }\n        allowed_upload_file_types {\n          allow_files_count\n          allow_single_file_max_size_mb\n          file_type\n        }\n        buyer_can_submit_offer\n        display_on_advisor_portal\n        display_on_seller_dashboard\n        id\n        messages {\n          advisor\n          buyer\n          seller\n        }\n        name\n        waiting_seller_to_act\n      }\n      StepId\n    }\n  }\n`;\nexport const searchProperties = /* GraphQL */ `\n  query SearchProperties($SearchText: String!, $StatusIds: [Int]) {\n    searchProperties(SearchText: $SearchText, StatusIds: $StatusIds) {\n      CreatedAt\n      CreatedBy\n      DTPropertyId\n      ListPriceRange {\n        Max\n        MaxFormatted\n        Min\n        MinFormatted\n      }\n      PropertyData {\n        Bedrooms\n        City\n        County\n        FullAddress\n        FullBath\n        LandUse\n        LivingArea\n        LotArea\n        OwnerNames\n        State\n        StreetAddress\n        VestingOwnershipRight\n        VestingTypeMapped\n        VestingTypeOverride\n        VestingTypeUsed\n        YearBuilt\n        YearBuiltDisp\n        YearBuiltOverride\n        YearBuiltUsed\n        Zip\n      }\n      PropertyId\n      PropertyNo\n      ReportStatus {\n        TaxReportTaxResourceMessage\n        TaxReportTaxResourceStatus\n        TaxReportTaxResourceUpdatedAt\n        TaxReportTotalViewMessage\n        TaxReportTotalViewStatus\n        TaxReportTotalViewUpdatedAt\n      }\n      SellerInfo {\n        Email\n        FirstName\n        LastName\n        Phone\n      }\n      StatusId\n      Thumbnail {\n        file {\n          path\n        }\n        id\n        key\n        name\n        presignedUrl\n        size\n        type\n      }\n      UpdatedAt\n      UpdatedBy\n    }\n  }\n`;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button, CircularProgress } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tloading: boolean;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled, loading }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled || loading}\n\t\t\t>\n\t\t\t\t{loading ? <CircularProgress size={24}/> : <IconChevronDown />}\t\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n"],"sourceRoot":""}