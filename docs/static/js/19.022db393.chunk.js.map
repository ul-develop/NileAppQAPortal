{"version":3,"sources":["views/application/sell-request/ListHeader.tsx","views/application/sell-request/SellRequestList.tsx","views/pages/sell-request/ListPage.tsx","graphql/queries.ts","utils/table.ts","views/application/components/LoadMore/index.tsx","helpers/date.ts"],"names":["headCells","id","numeric","disablePadding","label","maxWidth","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","undefined","TableSortLabel","active","direction","onClick","property","event","className","pr","table","minWidth","SellRequestList","useQuery","gql","listSellRequests","variables","limit","config","pagination","fetchPolicy","loading","error","data","fetchMore","rows","_get","nextToken","theme","useTheme","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","Loader","_isEmpty","Alert","severity","palette","main","TableContainer","Table","size","length","target","TableBody","stableSort","getComparator","row","index","sellRequestEditLink","generatePath","RequestId","isItemSelected","labelId","hover","role","tabIndex","component","scope","SellerInfo","Email","formatDate","CreatedAt","UpdatedAt","to","IconButton","fontSize","LoadMore","onLoadMore","disabled","ListPage","MainCard","title","getForm","getOffer","getProperty","getSellRequest","searchDataTree","listFormCategories","listForms","listOffers","listProperties","listSupportedVestingTypes","descendingComparator","a","b","array","comparator","stabilizedThis","el","sort","LoadMoreButton","withStyles","root","borderRadius","Button","toolbar","container","justifyContent","type","date","Intl","DateTimeFormat","locate","country","timeZone","timezone","format","Date"],"mappings":"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","file":"static/js/19.022db393.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'RequestId',\n\t\tnumeric: false,\n\t\tdisablePadding: true,\n\t\tlabel: 'ID',\n\t\tmaxWidth: 170,\n\t},\n\t{\n\t\tid: 'SellerInfo.Email',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Requester',\n\t},\n\t{\n\t\tid: 'CreatedAt',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Created',\n\t},\n\t{\n\t\tid: 'UpdatedAt',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Updated',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler =\n\t\t(property: string) => (event: React.SyntheticEvent) => {\n\t\t\tonRequestSort(event, property);\n\t\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import React from 'react';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCheckbox,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tAlert,\n\tuseTheme,\n\tIconButton,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { generatePath, Link } from 'react-router-dom';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\nimport { TSellRequest } from '../../../types';\nimport { listSellRequests } from '../../../graphql/queries';\nimport { getComparator, stableSort } from '../../../utils/table';\nimport Loader from '../../../ui-component/Loader';\nimport Header from './ListHeader';\nimport LoadMore from '../components/LoadMore';\nimport config from '../../../config';\nimport { formatDate } from '../../../helpers/date';\nimport { useOrder, useSelectRow } from '../../../hooks';\n\nconst useStyles = makeStyles(() => ({\n\ttable: {\n\t\tminWidth: '750px',\n\t},\n}));\n\nconst SellRequestList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(listSellRequests), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t});\n\n\tconst rows: TSellRequest[] = _get(data, 'listSellRequests.items', []);\n\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listSellRequests.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst { order, orderBy, handleRequestSort } = useOrder('RequestId');\n\tconst { selected, isSelected, handleSelect, handleSelectAll } =\n\t\tuseSelectRow('RequestId');\n\n\tif (loading) return <Loader />;\n\tif (error || _isEmpty(data)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: { limit: config.pagination.limit, nextToken },\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TSellRequest>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst sellRequestEditLink = generatePath('/sell-request/:id', {\n\t\t\t\t\t\t\t\t\tid: row.RequestId,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.RequestId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.RequestId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.RequestId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component='th' id={labelId} scope='row' padding='none'>\n\t\t\t\t\t\t\t\t\t\t\t{row.RequestId}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.SellerInfo.Email}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.CreatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{formatDate(row.UpdatedAt)}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={sellRequestEditLink}>\n\t\t\t\t\t\t\t\t\t\t\t\t<IconButton color='secondary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} />\n\t\t</>\n\t);\n};\n\nexport default SellRequestList;\n","import MainCard from '../../../ui-component/cards/MainCard';\nimport SellRequestList from '../../application/sell-request/SellRequestList';\n\nconst ListPage = () => (\n\t<MainCard title='Sell Request List'>\n\t\t<SellRequestList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n\tquery GetForm($FormId: ID!) {\n\t\tgetForm(FormId: $FormId) {\n\t\t\tCategoryId\n\t\t\tCreatedBy\n\t\t\tCreatedDT\n\t\t\tFormId\n\t\t\tFormStatus\n\t\t\tFormTypeId\n\t\t\tTemplate\n\t\t\tTitle\n\t\t\tUpdatedBy\n\t\t\tUpdatedDT\n\t\t}\n\t}\n`;\nexport const getFormCategory = /* GraphQL */ `\n\tquery GetFormCategory($CategoryId: ID!) {\n\t\tgetFormCategory(CategoryId: $CategoryId) {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const getOffer = /* GraphQL */ `\n\tquery GetOffer($OfferId: ID!) {\n\t\tgetOffer(OfferId: $OfferId) {\n\t\t\tAgentInfo {\n\t\t\t\tAssistantEmail\n\t\t\t\tDreNumber\n\t\t\t\tEmail\n\t\t\t\tFirstname\n\t\t\t\tLastname\n\t\t\t\tMiddlename\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tBuyerInfo {\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tMiddleName\n\t\t\t\tTitleName\n\t\t\t}\n\t\t\tBuyerType\n\t\t\tContingencies {\n\t\t\t\tAllRemoved\n\t\t\t\tAnyAndAll\n\t\t\t\tFinanceContingency\n\t\t\t\tFinanceContingencyDueDate\n\t\t\t\tFinanceContingencyRemoved\n\t\t\t\tFinanceContingencyRemovedAt\n\t\t\t\tInspectionContingency\n\t\t\t\tInspectionContingencyDueDate\n\t\t\t\tInspectionContingencyRemoved\n\t\t\t\tInspectionContingencyRemovedAt\n\t\t\t\tSaleOfHomeContingency\n\t\t\t\tSaleOfHomeContingencyDueDate\n\t\t\t\tSaleOfHomeContingencyRemoved\n\t\t\t\tSaleOfHomeContingencyRemovedAt\n\t\t\t}\n\t\t\tCounterOffer {\n\t\t\t\tCounterOfferId\n\t\t\t\tForms\n\t\t\t\tPosition\n\t\t\t}\n\t\t\tFirmInfo {\n\t\t\t\tCompanyEmail\n\t\t\t\tCompanyPhone\n\t\t\t\tCompanyname\n\t\t\t\tDreNumber\n\t\t\t}\n\t\t\tFunding {\n\t\t\t\tDownPayment\n\t\t\t\tFicoScore\n\t\t\t\tLoanType\n\t\t\t\tPreapprovedForLoan\n\t\t\t\tPurchaseType\n\t\t\t}\n\t\t\tOffer {\n\t\t\t\tClosingPeriod\n\t\t\t\tFinanceContingency\n\t\t\t\tFurniture\n\t\t\t\tInspectionContingency\n\t\t\t\tOfferPrice\n\t\t\t\tSaleOfHomeContingency\n\t\t\t}\n\t\t\tOfferId\n\t\t\tOfferNo\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tStep {\n\t\t\t\tbuyer_can_submit_offer\n\t\t\t\tdisplay_on_advisor_portal\n\t\t\t\tdisplay_on_seller_dashboard\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\twaiting_seller_to_act\n\t\t\t}\n\t\t\tStepId\n\t\t}\n\t}\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n\tquery GetOfferDocPutUrls(\n\t\t$DocumentType: String!\n\t\t$Documents: [FileItemInput]!\n\t\t$OfferId: ID!\n\t) {\n\t\tgetOfferDocPutUrls(\n\t\t\tDocumentType: $DocumentType\n\t\t\tDocuments: $Documents\n\t\t\tOfferId: $OfferId\n\t\t) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getOfferStep = /* GraphQL */ `\n\tquery GetOfferStep($StepId: ID!) {\n\t\tgetOfferStep(StepId: $StepId) {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const getProperty = /* GraphQL */ `\n\tquery GetProperty($PropertyId: ID!) {\n\t\tgetProperty(PropertyId: $PropertyId) {\n\t\t\tCreatedAt\n\t\t\tListed\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tThumbnail {\n\t\t\t\tid\n\t\t\t\tkey\n\t\t\t\tname\n\t\t\t\tpresignedUrl\n\t\t\t\tsize\n\t\t\t\ttype\n\t\t\t}\n\t\t\tUpdatedAt\n\t\t}\n\t}\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n\tquery GetPropertyThumbnailPutUrl($Photos: [FileItemInput]!, $PropertyId: ID!) {\n\t\tgetPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getSellRequest = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tApprovedBy\n\t\t\tApprovedByAdvisor\n\t\t\tCreatedAt\n\t\t\tCreatedBy\n\t\t\tDTPropertyId\n\t\t\tPropertyData {\n\t\t\t\tBedrooms\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tFullBath\n\t\t\t\tLandUse\n\t\t\t\tLivingArea\n\t\t\t\tLotArea\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingOwnershipRight\n\t\t\t\tVestingTypeMapped\n\t\t\t\tVestingTypeOverride\n\t\t\t\tYearBuilt\n\t\t\t\tYearBuiltOverride\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyListPriceRange {\n\t\t\t\tMax\n\t\t\t\tMaxFormatted\n\t\t\t\tMin\n\t\t\t\tMinFormatted\n\t\t\t}\n\t\t\tRequestId\n\t\t\tSellerInfo {\n\t\t\t\tEmail\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tTaxReportTaxResourceMessage\n\t\t\tTaxReportTaxResourceStatus\n\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\tTaxReportTotalViewMessage\n\t\t\tTaxReportTotalViewStatus\n\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\tUpdatedAt\n\t\t\tUpdatedBy\n\t\t}\n\t}\n`;\nexport const searchDataTree = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!, $SearchText: String!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tDataTreeProperties(SearchText: $SearchText) {\n\t\t\t\tCount\n\t\t\t\tProperties {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tOwner\n\t\t\t\t\tPropertyId\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const listFormCategories = /* GraphQL */ `\n\tquery ListFormCategories {\n\t\tlistFormCategories {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const listForms = /* GraphQL */ `\n\tquery ListForms($limit: Int, $nextToken: String) {\n\t\tlistForms(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listOfferSteps = /* GraphQL */ `\n\tquery ListOfferSteps {\n\t\tlistOfferSteps {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const listOffers = /* GraphQL */ `\n\tquery ListOffers($limit: Int, $nextToken: String) {\n\t\tlistOffers(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tFunding {\n\t\t\t\t\tPurchaseType\n\t\t\t\t\tLoanType\n\t\t\t\t\tDownPayment\n\t\t\t\t}\n\t\t\t\tOfferNo\n\t\t\t\tOfferId\n\t\t\t\tPropertyData {\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t}\n\t\t\t\tCounterOffer {\n\t\t\t\t\tSellerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t\tBuyerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tStep {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listProperties = /* GraphQL */ `\n\tquery ListProperties($limit: Int, $nextToken: String) {\n\t\tlistProperties(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCreatedAt\n\t\t\t\tListed\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tUpdatedAt\n\t\t\t\tPropertyData {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSellRequests = /* GraphQL */ `\n\tquery ListSellRequests($limit: Int, $nextToken: String) {\n\t\tlistSellRequests(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tApprovedBy\n\t\t\t\tApprovedByAdvisor\n\t\t\t\tCreatedAt\n\t\t\t\tCreatedBy\n\t\t\t\tDTPropertyId\n\t\t\t\tPropertyId\n\t\t\t\tRequestId\n\t\t\t\tTaxReportTaxResourceMessage\n\t\t\t\tTaxReportTaxResourceStatus\n\t\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\t\tTaxReportTotalViewMessage\n\t\t\t\tTaxReportTotalViewStatus\n\t\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\t\tUpdatedAt\n\t\t\t\tUpdatedBy\n\t\t\t\tSellerInfo {\n\t\t\t\t\tEmail\n\t\t\t\t\tFirstName\n\t\t\t\t\tLastName\n\t\t\t\t\tPhone\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n\tquery ListSupportedVestingTypes {\n\t\tlistSupportedVestingTypes\n\t}\n`;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled }: Props) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t<IconChevronDown />\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n","import config from '../config';\n\nexport const formatDate = (date: string | null): string =>\n\t`${\n\t\tdate\n\t\t\t? new Intl.DateTimeFormat(config.locate.country, {\n\t\t\t\t\ttimeZone: config.locate.timezone,\n\t\t\t  }).format(new Date(date))\n\t\t\t: ''\n\t}`;\n"],"sourceRoot":""}