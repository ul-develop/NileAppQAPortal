{"version":3,"sources":["views/application/offer/OfferEdit.tsx","views/pages/offer/EditPage.tsx","graphql/queries.ts","ui-component/extended/AnimateButton.tsx","ui-component/cards/SubCard.tsx","helpers/currency.ts","views/application/components/TextRow/index.tsx","helpers/offer.ts"],"names":["useStyles","makeStyles","fileInput","background","width","marginBottom","fileContainer","padding","textAlign","borderRadius","cursor","verticalAlign","marginRight","uploadImage","position","overflow","minHeight","display","alignItems","justifyContent","opacity","zIndex","imageHover","left","top","height","transition","removeButton","margin","OfferEdit","id","useQuery","gql","getOffer","variables","OfferId","errorPolicy","loading","error","data","offer","_get","offerThumbnail","useState","images","setImages","theme","useTheme","classes","useEffect","presignedUrl","dataURL","file","Loader","_isEmpty","Alert","severity","sx","color","palette","main","onChange","imageList","CardContent","Grid","container","spacing","gridSpacing","item","lg","xs","SubCard","title","TableContainer","Table","borderBottom","size","TableBody","TextRow","source","label","getValue","getOfferPrice","direction","value","onImageUpload","onImageRemove","dragProps","Box","component","Button","type","className","clsx","onClick","InputLabel","map","image","index","md","alignContent","CardMedia","Fab","Divider","CardActions","Stack","AnimateButton","variant","EditPage","useParams","MainCard","content","getForm","getProperty","getSellRequest","searchDataTree","listFormCategories","listForms","listOffers","listProperties","listSellRequests","listSupportedVestingTypes","React","forwardRef","ref","offset1","offset2","children","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","whileHover","hover","whileTap","tap","defaultProps","contentClass","darkTitle","secondary","others","border","borderColor","mode","dark","light","primary","boxShadow","p","action","formatCurrency","Intl","NumberFormat","config","locate","country","style","currency","format","price","offerSteps","counteredBySeller"],"mappings":"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","file":"static/js/15.7ba00799.chunk.js","sourcesContent":["import {\n\tGrid,\n\tTable,\n\tTableBody,\n\tTableContainer,\n\tAlert,\n\tuseTheme,\n\tInputLabel,\n\tButton,\n\tBox,\n\tCardMedia,\n\tFab,\n\tStack,\n\tDivider,\n\tCardContent,\n\tCardActions,\n} from '@material-ui/core';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport { useQuery, gql } from '@apollo/client';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles } from '@material-ui/styles';\nimport ImageUploading, { ImageListType } from 'react-images-uploading';\nimport { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport AnimateButton from '../../../ui-component/extended/AnimateButton';\n\nimport SubCard from '../../../ui-component/cards/SubCard';\nimport { gridSpacing } from '../../../store/constant';\nimport { TOffer } from '../../../types';\nimport { getOffer } from '../../../graphql/queries';\nimport Loader from '../../../ui-component/Loader';\nimport { getOfferPrice } from '../../../helpers/offer';\nimport TextRow from '../components/TextRow';\n\nconst useStyles = makeStyles(() => ({\n\tfileInput: {\n\t\tbackground: '#fcfcfe',\n\t\twidth: '100%',\n\t\tmarginBottom: '24px',\n\t\t'&:dragover, &:dragenter': {\n\t\t\tbackground: '#333',\n\t\t},\n\t},\n\tfileContainer: {\n\t\tpadding: '30px 0',\n\t\ttextAlign: 'center',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t},\n\tuploadImage: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tborderRadius: '4px',\n\t\tcursor: 'pointer',\n\t\twidth: '100%',\n\t\tminHeight: '100px',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\t'& > svg': {\n\t\t\tverticalAlign: 'sub',\n\t\t\tmarginRight: '5px',\n\t\t},\n\t\t'&:hover $imageHover': {\n\t\t\topacity: 1,\n\t\t\tzIndex: 1,\n\t\t},\n\t},\n\timageHover: {\n\t\tposition: 'absolute',\n\t\topacity: 0,\n\t\tzIndex: -1,\n\t\tleft: '0',\n\t\ttop: '0',\n\t\tbackground: 'rgba(255, 255, 255, .8)',\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tdisplay: 'inline-flex',\n\t\ttransition: 'all 0.3s ease',\n\t},\n\tremoveButton: {\n\t\tmargin: 'auto',\n\t},\n}));\n\ntype Props = {\n\tid: string;\n};\n\nconst OfferEdit = ({ id }: Props) => {\n\tconst { loading, error, data } = useQuery(gql(getOffer), {\n\t\tvariables: { OfferId: id },\n\t\terrorPolicy: 'all',\n\t});\n\tconst offer = _get(data, 'getOffer', {});\n\tconst offerThumbnail = _get(offer, 'Thumbnail', null);\n\tconst [images, setImages] = useState<Array<{ dataURL: string; file: any }>>(\n\t\t[]\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\n\tuseEffect(() => {\n\t\tif (!offerThumbnail) return;\n\n\t\tconst { presignedUrl = '' } = offerThumbnail;\n\t\tconst thumbnail = {\n\t\t\tdataURL: presignedUrl,\n\t\t\tfile: null,\n\t\t};\n\t\tsetImages([thumbnail]);\n\t}, [offerThumbnail]);\n\n\tif (loading) return <Loader />;\n\n\tif (error && _isEmpty(offer)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tOffer not found\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst onChange = (imageList: ImageListType) => {\n\t\tsetImages(imageList as never[]);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={gridSpacing}>\n\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t<SubCard title='Offer Information'>\n\t\t\t\t\t\t\t<TableContainer>\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t'& td': {\n\t\t\t\t\t\t\t\t\t\t\tborderBottom: 'none',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer> data={offer} source='OfferNo' label='Offer No' />\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='PropertyData.FullAddress'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Property Address'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='PropertyData.OwnerNames'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Sellers'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tgetValue={getOfferPrice}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Offer Price'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.PurchaseType'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Funding'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.LoanType'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Loan Type'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer>\n\t\t\t\t\t\t\t\t\t\t\tdata={offer}\n\t\t\t\t\t\t\t\t\t\t\tsource='Funding.DownPayment'\n\t\t\t\t\t\t\t\t\t\t\tlabel='Down Payment'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<TextRow<TOffer> data={offer} source='Step.name' label='Status' />\n\t\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item lg={6} xs={12}>\n\t\t\t\t\t\t<Grid container direction='column' spacing={gridSpacing}>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<SubCard title='Signed Purchase Agreement'>\n\t\t\t\t\t\t\t\t\t<ImageUploading value={images} onChange={onChange}>\n\t\t\t\t\t\t\t\t\t\t{({ onImageUpload, onImageRemove, dragProps }) => (\n\t\t\t\t\t\t\t\t\t\t\t<Box component='div'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tid='file-upload'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.fileInput)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={onImageUpload}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...dragProps}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel className={classes.fileContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloudUploadIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDrop file here to upload\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{images.map((image, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignContent='center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.uploadImage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='img'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={image.dataURL}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='image'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeButton}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onImageRemove(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</ImageUploading>\n\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<SubCard title='SCAR'>\n\t\t\t\t\t\t\t\t\t<ImageUploading value={images} onChange={onChange}>\n\t\t\t\t\t\t\t\t\t\t{({ onImageUpload, onImageRemove, dragProps }) => (\n\t\t\t\t\t\t\t\t\t\t\t<Box component='div'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tid='file-upload'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={clsx(classes.fileInput)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={onImageUpload}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...dragProps}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel className={classes.fileContainer}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloudUploadIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tDrop file here to upload\n\t\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{images.map((image, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmd={6}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlg={4}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignContent='center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.uploadImage}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent='img'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\timage={image.dataURL}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle='image'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={classes.imageHover}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Fab\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.removeButton}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => onImageRemove(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Fab>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</ImageUploading>\n\t\t\t\t\t\t\t\t</SubCard>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<Stack direction='row' justifyContent='flex-end'>\n\t\t\t\t\t\t<AnimateButton>\n\t\t\t\t\t\t\t<Button color='primary' variant='contained' type='submit'>\n\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</AnimateButton>\n\t\t\t\t\t</Stack>\n\t\t\t\t</Grid>\n\t\t\t</CardActions>\n\t\t</>\n\t);\n};\n\nexport default OfferEdit;\n","import { useParams } from 'react-router-dom';\n\nimport MainCard from '../../../ui-component/cards/MainCard';\n\nimport OfferEdit from '../../application/offer/OfferEdit';\n\nconst EditPage = () => {\n\tconst { id } = useParams<{ id: string }>();\n\n\treturn (\n\t\t<MainCard title={`#${id}`} content={false}>\n\t\t\t<OfferEdit id={id} />\n\t\t</MainCard>\n\t);\n};\n\nexport default EditPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n\tquery GetForm($FormId: ID!) {\n\t\tgetForm(FormId: $FormId) {\n\t\t\tCategoryId\n\t\t\tCreatedBy\n\t\t\tCreatedDT\n\t\t\tFormId\n\t\t\tFormStatus\n\t\t\tFormTypeId\n\t\t\tTemplate\n\t\t\tTitle\n\t\t\tUpdatedBy\n\t\t\tUpdatedDT\n\t\t}\n\t}\n`;\nexport const getFormCategory = /* GraphQL */ `\n\tquery GetFormCategory($CategoryId: ID!) {\n\t\tgetFormCategory(CategoryId: $CategoryId) {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const getOffer = /* GraphQL */ `\n\tquery GetOffer($OfferId: ID!) {\n\t\tgetOffer(OfferId: $OfferId) {\n\t\t\tAgentInfo {\n\t\t\t\tAssistantEmail\n\t\t\t\tDreNumber\n\t\t\t\tEmail\n\t\t\t\tFirstname\n\t\t\t\tLastname\n\t\t\t\tMiddlename\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tBuyerInfo {\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tMiddleName\n\t\t\t\tTitleName\n\t\t\t}\n\t\t\tBuyerType\n\t\t\tContingencies {\n\t\t\t\tAllRemoved\n\t\t\t\tAnyAndAll\n\t\t\t\tFinanceContingency\n\t\t\t\tFinanceContingencyDueDate\n\t\t\t\tFinanceContingencyRemoved\n\t\t\t\tFinanceContingencyRemovedAt\n\t\t\t\tInspectionContingency\n\t\t\t\tInspectionContingencyDueDate\n\t\t\t\tInspectionContingencyRemoved\n\t\t\t\tInspectionContingencyRemovedAt\n\t\t\t\tSaleOfHomeContingency\n\t\t\t\tSaleOfHomeContingencyDueDate\n\t\t\t\tSaleOfHomeContingencyRemoved\n\t\t\t\tSaleOfHomeContingencyRemovedAt\n\t\t\t}\n\t\t\tCounterOffer {\n\t\t\t\tCounterOfferId\n\t\t\t\tForms\n\t\t\t\tPosition\n\t\t\t}\n\t\t\tFirmInfo {\n\t\t\t\tCompanyEmail\n\t\t\t\tCompanyPhone\n\t\t\t\tCompanyname\n\t\t\t\tDreNumber\n\t\t\t}\n\t\t\tFunding {\n\t\t\t\tDownPayment\n\t\t\t\tFicoScore\n\t\t\t\tLoanType\n\t\t\t\tPreapprovedForLoan\n\t\t\t\tPurchaseType\n\t\t\t}\n\t\t\tOffer {\n\t\t\t\tClosingPeriod\n\t\t\t\tFinanceContingency\n\t\t\t\tFurniture\n\t\t\t\tInspectionContingency\n\t\t\t\tOfferPrice\n\t\t\t\tSaleOfHomeContingency\n\t\t\t}\n\t\t\tOfferId\n\t\t\tOfferNo\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tStep {\n\t\t\t\tbuyer_can_submit_offer\n\t\t\t\tdisplay_on_advisor_portal\n\t\t\t\tdisplay_on_seller_dashboard\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\twaiting_seller_to_act\n\t\t\t}\n\t\t\tStepId\n\t\t}\n\t}\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n\tquery GetOfferDocPutUrls(\n\t\t$DocumentType: String!\n\t\t$Documents: [FileItemInput]!\n\t\t$OfferId: ID!\n\t) {\n\t\tgetOfferDocPutUrls(\n\t\t\tDocumentType: $DocumentType\n\t\t\tDocuments: $Documents\n\t\t\tOfferId: $OfferId\n\t\t) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getOfferStep = /* GraphQL */ `\n\tquery GetOfferStep($StepId: ID!) {\n\t\tgetOfferStep(StepId: $StepId) {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const getProperty = /* GraphQL */ `\n\tquery GetProperty($PropertyId: ID!) {\n\t\tgetProperty(PropertyId: $PropertyId) {\n\t\t\tCreatedAt\n\t\t\tListed\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tThumbnail {\n\t\t\t\tid\n\t\t\t\tkey\n\t\t\t\tname\n\t\t\t\tpresignedUrl\n\t\t\t\tsize\n\t\t\t\ttype\n\t\t\t}\n\t\t\tUpdatedAt\n\t\t}\n\t}\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n\tquery GetPropertyThumbnailPutUrl($Photos: [FileItemInput]!, $PropertyId: ID!) {\n\t\tgetPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getSellRequest = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tApprovedBy\n\t\t\tApprovedByAdvisor\n\t\t\tCreatedAt\n\t\t\tCreatedBy\n\t\t\tDTPropertyId\n\t\t\tPropertyData {\n\t\t\t\tBedrooms\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tFullBath\n\t\t\t\tLandUse\n\t\t\t\tLivingArea\n\t\t\t\tLotArea\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingOwnershipRight\n\t\t\t\tVestingTypeMapped\n\t\t\t\tVestingTypeOverride\n\t\t\t\tYearBuilt\n\t\t\t\tYearBuiltOverride\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyListPriceRange {\n\t\t\t\tMax\n\t\t\t\tMaxFormatted\n\t\t\t\tMin\n\t\t\t\tMinFormatted\n\t\t\t}\n\t\t\tRequestId\n\t\t\tSellerInfo {\n\t\t\t\tEmail\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tTaxReportTaxResourceMessage\n\t\t\tTaxReportTaxResourceStatus\n\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\tTaxReportTotalViewMessage\n\t\t\tTaxReportTotalViewStatus\n\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\tUpdatedAt\n\t\t\tUpdatedBy\n\t\t}\n\t}\n`;\nexport const searchDataTree = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!, $SearchText: String!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tDataTreeProperties(SearchText: $SearchText) {\n\t\t\t\tCount\n\t\t\t\tProperties {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tOwner\n\t\t\t\t\tPropertyId\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const listFormCategories = /* GraphQL */ `\n\tquery ListFormCategories {\n\t\tlistFormCategories {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const listForms = /* GraphQL */ `\n\tquery ListForms($limit: Int, $nextToken: String) {\n\t\tlistForms(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listOfferSteps = /* GraphQL */ `\n\tquery ListOfferSteps {\n\t\tlistOfferSteps {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const listOffers = /* GraphQL */ `\n\tquery ListOffers($limit: Int, $nextToken: String) {\n\t\tlistOffers(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tFunding {\n\t\t\t\t\tPurchaseType\n\t\t\t\t\tLoanType\n\t\t\t\t\tDownPayment\n\t\t\t\t}\n\t\t\t\tOfferNo\n\t\t\t\tOfferId\n\t\t\t\tPropertyData {\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t}\n\t\t\t\tCounterOffer {\n\t\t\t\t\tSellerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t\tBuyerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tStep {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listProperties = /* GraphQL */ `\n\tquery ListProperties($limit: Int, $nextToken: String) {\n\t\tlistProperties(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCreatedAt\n\t\t\t\tListed\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tUpdatedAt\n\t\t\t\tPropertyData {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSellRequests = /* GraphQL */ `\n\tquery ListSellRequests($limit: Int, $nextToken: String) {\n\t\tlistSellRequests(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tApprovedBy\n\t\t\t\tApprovedByAdvisor\n\t\t\t\tCreatedAt\n\t\t\t\tCreatedBy\n\t\t\t\tDTPropertyId\n\t\t\t\tPropertyId\n\t\t\t\tRequestId\n\t\t\t\tTaxReportTaxResourceMessage\n\t\t\t\tTaxReportTaxResourceStatus\n\t\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\t\tTaxReportTotalViewMessage\n\t\t\t\tTaxReportTotalViewStatus\n\t\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\t\tUpdatedAt\n\t\t\t\tUpdatedBy\n\t\t\t\tSellerInfo {\n\t\t\t\t\tEmail\n\t\t\t\t\tFirstName\n\t\t\t\t\tLastName\n\t\t\t\t\tPhone\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n\tquery ListSupportedVestingTypes {\n\t\tlistSupportedVestingTypes\n\t}\n`;\n","import React, { Ref } from 'react';\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\nexport type ScaleProps = {\n\thover: number | string | undefined;\n\ttap: number | string | undefined;\n};\n\nexport interface AnimateButtonProps {\n\tchildren?: React.ReactNode;\n\ttype?: 'slide' | 'scale' | 'rotate';\n\tdirection?: 'up' | 'down' | 'left' | 'right';\n\toffset?: number;\n\tscale?: ScaleProps;\n}\n\n// -----------------------|| ANIMATION BUTTON ||-----------------------//\n\nconst AnimateButton = React.forwardRef(\n\t(\n\t\t{ children, type, direction, offset, scale }: AnimateButtonProps,\n\t\tref: Ref<HTMLDivElement>\n\t) => {\n\t\tlet offset1;\n\t\tlet offset2;\n\t\tswitch (direction) {\n\t\t\tcase 'up':\n\t\t\tcase 'left':\n\t\t\t\toffset1 = offset;\n\t\t\t\toffset2 = 0;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\tcase 'down':\n\t\t\tdefault:\n\t\t\t\toffset1 = 0;\n\t\t\t\toffset2 = offset;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst [x, cycleX] = useCycle(offset1, offset2);\n\t\tconst [y, cycleY] = useCycle(offset1, offset2);\n\n\t\tswitch (type) {\n\t\t\tcase 'rotate':\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ rotate: 360 }}\n\t\t\t\t\t\ttransition={{\n\t\t\t\t\t\t\trepeat: Infinity,\n\t\t\t\t\t\t\trepeatType: 'loop',\n\t\t\t\t\t\t\tduration: 2,\n\t\t\t\t\t\t\trepeatDelay: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t\tcase 'slide':\n\t\t\t\tif (direction === 'up' || direction === 'down') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tanimate={{ y: y !== undefined ? y : '' }}\n\t\t\t\t\t\t\tonHoverEnd={() => cycleY()}\n\t\t\t\t\t\t\tonHoverStart={() => cycleY()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tanimate={{ x: x !== undefined ? x : '' }}\n\t\t\t\t\t\tonHoverEnd={() => cycleX()}\n\t\t\t\t\t\tonHoverStart={() => cycleX()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\n\t\t\tcase 'scale':\n\t\t\tdefault:\n\n\t\t\t\treturn (\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\twhileHover={{ scale: scale?.hover }}\n\t\t\t\t\t\twhileTap={{ scale: scale?.tap }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</motion.div>\n\t\t\t\t);\n\t\t}\n\t}\n);\n\nAnimateButton.defaultProps = {\n\ttype: 'scale',\n\toffset: 10,\n\tdirection: 'right',\n\tscale: {\n\t\thover: 1,\n\t\ttap: 0.9,\n\t},\n};\n\nexport default AnimateButton;\n","import { ReactNode } from 'react';\n\n// material-ui\nimport { useTheme } from '@material-ui/core/styles';\nimport {\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tDivider,\n\tTypography,\n} from '@material-ui/core';\n\nexport interface SubCardProps {\n\tchildren: ReactNode | string | null;\n\tcontent?: boolean;\n\tclassName?: string;\n\tcontentClass?: string;\n\tdarkTitle?: boolean;\n\tsecondary?: ReactNode | string | {};\n\tsx?: {};\n\ttitle?: ReactNode | string | {};\n}\n\n// -----------------------|| CUSTOM SUB CARD ||-----------------------//\n\nconst SubCard = ({\n\tchildren,\n\tcontent,\n\tcontentClass,\n\tdarkTitle,\n\tsecondary,\n\tsx = {},\n\ttitle,\n\t...others\n}: SubCardProps) => {\n\tconst theme = useTheme();\n\n\treturn (\n\t\t<Card\n\t\t\tsx={{\n\t\t\t\tborder: '1px solid',\n\t\t\t\tborderColor:\n\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t':hover': {\n\t\t\t\t\tboxShadow:\n\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t? '0 2px 14px 0 rgb(33 150 243 / 10%)'\n\t\t\t\t\t\t\t: '0 2px 14px 0 rgb(32 40 45 / 8%)',\n\t\t\t\t},\n\t\t\t\t...sx,\n\t\t\t}}\n\t\t\t{...others}\n\t\t>\n\t\t\t{/* card header and action */}\n\t\t\t{!darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h5'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{darkTitle && title && (\n\t\t\t\t<CardHeader\n\t\t\t\t\tsx={{ p: 2.5 }}\n\t\t\t\t\ttitle={<Typography variant='h4'>{title}</Typography>}\n\t\t\t\t\taction={secondary}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* content & header divider */}\n\t\t\t{title && (\n\t\t\t\t<Divider\n\t\t\t\t\tsx={{\n\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\ttheme.palette.mode === 'dark'\n\t\t\t\t\t\t\t\t? theme.palette.dark.light + 15\n\t\t\t\t\t\t\t\t: theme.palette.primary.light,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{/* card content */}\n\t\t\t{content && (\n\t\t\t\t<CardContent sx={{ p: 2.5 }} className={contentClass || ''}>\n\t\t\t\t\t{children}\n\t\t\t\t</CardContent>\n\t\t\t)}\n\t\t\t{!content && children}\n\t\t</Card>\n\t);\n};\n\nSubCard.defaultProps = {\n\tcontent: true,\n};\n\nexport default SubCard;\n","import config from '../config';\n\nexport const formatCurrency = (value: number | bigint): string => `${\n    value\n      ? new Intl.NumberFormat(config.locate.country, {\n          style: 'currency',\n          currency: config.locate.currency,\n        }).format(value)\n      : ''\n  }`;\n","import _get from 'lodash.get';\nimport { TableRow, TableCell } from '@material-ui/core';\n\ntype TextRowProps<T> = {\n\tdata: T;\n\tsource?: string;\n\tlabel: string;\n\tgetValue?: (d: T) => string;\n};\n\nfunction TextRow<T>({ data, source = '', label, getValue }: TextRowProps<T>) {\n\treturn (\n\t\t<TableRow>\n\t\t\t<TableCell variant='head'>{label}</TableCell>\n\t\t\t<TableCell>{getValue ? getValue(data) : _get(data, source, '')}</TableCell>\n\t\t</TableRow>\n\t);\n}\n\nexport default TextRow;\n","import _get from 'lodash.get';\nimport { TOffer } from '../types';\nimport config from '../config';\nimport { formatCurrency } from './currency';\n\nexport const getOfferPrice = (offer: TOffer): string => {\n\tlet price;\n\n\tif (+_get(offer, ['Step', 'id']) === config.offerSteps.counteredBySeller)\n\t\tprice = _get(offer, ['CounterOffer', 'SellerCounter', 'OfferPrice']);\n\telse\n\t\tprice = _get(offer, ['CounterOffer', 'BuyerCounter', 'OfferPrice']);\n\n\treturn price ? formatCurrency(price) : '';\n};\n"],"sourceRoot":""}