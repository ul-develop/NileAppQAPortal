{"version":3,"sources":["views/application/property/ListHeader.tsx","views/application/property/PropertyToolbar.tsx","views/application/property/PropertyList.tsx","views/pages/property/ListPage.tsx","graphql/queries.ts","utils/table.ts","views/application/components/LoadMore/index.tsx"],"names":["headCells","id","numeric","disablePadding","label","useStyles","makeStyles","sortSpan","visuallyHidden","ListHeader","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","sx","pl","Checkbox","color","indeterminate","checked","onChange","inputProps","map","headCell","align","sortDirection","undefined","TableSortLabel","active","direction","onClick","property","event","className","pr","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","display","highlight","backgroundColor","alpha","palette","primary","main","action","activatedOpacity","show","title","flex","PropertyToolbar","Toolbar","clsx","Typography","variant","component","table","minWidth","PropertyList","useQuery","gql","listProperties","variables","limit","config","pagination","fetchPolicy","notifyOnNetworkStatusChange","loading","error","data","fetchMore","rows","_get","nextToken","useTheme","history","useHistory","useOrder","handleRequestSort","useSelectRow","selected","isSelected","handleSelect","handleSelectAll","Loader","_isEmpty","Alert","severity","length","TableContainer","Table","size","target","TableBody","stableSort","getComparator","row","index","isItemSelected","PropertyId","labelId","hover","role","tabIndex","scope","PropertyData","StreetAddress","County","State","Zip","City","PropertyNo","IconButton","push","fontSize","LoadMore","onLoadMore","disabled","ListPage","MainCard","getForm","getOffer","getProperty","getSellRequest","searchDataTree","listFormCategories","listForms","listOffers","listSellRequests","listSupportedVestingTypes","descendingComparator","a","b","array","comparator","stabilizedThis","el","sort","LoadMoreButton","withStyles","borderRadius","Button","toolbar","container","justifyContent","type"],"mappings":"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","file":"static/js/21.c9c5be0c.chunk.js","sourcesContent":["import React from 'react';\nimport {\n\tCheckbox,\n\tTableCell,\n\tTableHead,\n\tTableSortLabel,\n\tTableRow,\n} from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { visuallyHidden } from '@material-ui/utils';\nimport { EnhancedTableHeadProps } from '../../../types';\n\nconst headCells = [\n\t{\n\t\tid: 'PropertyId',\n\t\tnumeric: false,\n\t\tdisablePadding: true,\n\t\tlabel: 'ID',\n\t},\n\t{\n\t\tid: 'PropertyData.StreetAddress',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Street Address',\n\t},\n\t{\n\t\tid: 'PropertyData.County',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'County',\n\t},\n\t{\n\t\tid: 'PropertyData.State',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'State',\n\t},\n\t{\n\t\tid: 'PropertyData.Zip',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Zip',\n\t},\n\t{\n\t\tid: 'PropertyData.City',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'City',\n\t},\n\t{\n\t\tid: 'PropertyNo',\n\t\tnumeric: false,\n\t\tdisablePadding: false,\n\t\tlabel: 'Property No',\n\t},\n];\n\nconst useStyles = makeStyles(() => ({\n\tsortSpan: { ...visuallyHidden },\n}));\n\nconst ListHeader = (props: EnhancedTableHeadProps) => {\n\tconst classes = useStyles();\n\tconst {\n\t\tonSelectAllClick,\n\t\torder,\n\t\torderBy,\n\t\tnumSelected,\n\t\trowCount,\n\t\tonRequestSort,\n\t} = props;\n\tconst createSortHandler =\n\t\t(property: string) => (event: React.SyntheticEvent) => {\n\t\t\tonRequestSort(event, property);\n\t\t};\n\n\treturn (\n\t\t<TableHead>\n\t\t\t<TableRow>\n\t\t\t\t<TableCell padding='checkbox' sx={{ pl: 3 }}>\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tindeterminate={numSelected > 0 && numSelected < rowCount}\n\t\t\t\t\t\tchecked={rowCount > 0 && numSelected === rowCount}\n\t\t\t\t\t\tonChange={onSelectAllClick}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t'aria-label': 'select all desserts',\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</TableCell>\n\t\t\t\t{headCells.map(headCell => (\n\t\t\t\t\t<TableCell\n\t\t\t\t\t\tkey={headCell.id}\n\t\t\t\t\t\talign={headCell.numeric ? 'right' : 'left'}\n\t\t\t\t\t\tpadding={headCell.disablePadding ? 'none' : 'normal'}\n\t\t\t\t\t\tsortDirection={orderBy === headCell.id ? order : undefined}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TableSortLabel\n\t\t\t\t\t\t\tactive={orderBy === headCell.id}\n\t\t\t\t\t\t\tdirection={orderBy === headCell.id ? order : 'asc'}\n\t\t\t\t\t\t\tonClick={createSortHandler(headCell.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{headCell.label}\n\t\t\t\t\t\t\t{orderBy === headCell.id ? (\n\t\t\t\t\t\t\t\t<span className={classes.sortSpan}>\n\t\t\t\t\t\t\t\t\t{order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</TableSortLabel>\n\t\t\t\t\t</TableCell>\n\t\t\t\t))}\n\t\t\t\t<TableCell sortDirection={false} align='center' sx={{ pr: 3 }}>\n\t\t\t\t\tAction\n\t\t\t\t</TableCell>\n\t\t\t</TableRow>\n\t\t</TableHead>\n\t);\n};\n\nexport default ListHeader;\n","import { alpha, makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Toolbar, Typography } from '@material-ui/core';\n\nconst useToolbarStyles = makeStyles(theme => ({\n\troot: {\n\t\tpaddingLeft: theme.spacing(2),\n\t\tpaddingRight: theme.spacing(1),\n\t\tdisplay: 'none',\n\t},\n\thighlight: {\n\t\tbackgroundColor: alpha(\n\t\t\ttheme.palette.primary.main,\n\t\t\ttheme.palette.action.activatedOpacity\n\t\t),\n\t},\n\tshow: {\n\t\tdisplay: 'flex',\n\t},\n\ttitle: {\n\t\tflex: '1 1 100%',\n\t},\n}));\n\nconst PropertyToolbar = (props: { numSelected: number }) => {\n\tconst classes = useToolbarStyles();\n\tconst { numSelected } = props;\n\n\treturn (\n\t\t<Toolbar\n\t\t\tclassName={clsx(classes.root, {\n\t\t\t\t[classes.highlight]: numSelected > 0,\n\t\t\t\t[classes.show]: numSelected > 0,\n\t\t\t})}\n\t\t>\n\t\t\t{numSelected > 0 && (\n\t\t\t\t<Typography\n\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\tcolor='inherit'\n\t\t\t\t\tvariant='subtitle1'\n\t\t\t\t\tcomponent='div'\n\t\t\t\t>\n\t\t\t\t\t{numSelected} selected\n\t\t\t\t</Typography>\n\t\t\t)}\n\t\t</Toolbar>\n\t);\n};\n\nexport default PropertyToolbar;\n","import React from 'react';\nimport _get from 'lodash.get';\nimport _isEmpty from 'lodash.isempty';\nimport {\n\tCheckbox,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableRow,\n\tAlert,\n\tuseTheme,\n\tIconButton,\n} from '@material-ui/core';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery, gql } from '@apollo/client';\nimport { useHistory } from 'react-router';\nimport { TProperty } from '../../../types';\nimport { listProperties } from '../../../graphql/queries';\n\nimport { getComparator, stableSort } from '../../../utils/table';\nimport Loader from '../../../ui-component/Loader';\nimport Header from './ListHeader';\nimport LoadMore from '../components/LoadMore';\nimport config from '../../../config';\nimport { useOrder, useSelectRow } from '../../../hooks';\nimport PropertyToolbar from './PropertyToolbar';\n\nconst useStyles = makeStyles(() => ({\n\ttable: {\n\t\tminWidth: '750px',\n\t},\n}));\n\nconst PropertyList = () => {\n\tconst { loading, error, data, fetchMore } = useQuery(gql(listProperties), {\n\t\tvariables: { limit: config.pagination.limit },\n\t\tfetchPolicy: 'cache-first',\n\t\tnotifyOnNetworkStatusChange: true,\n\t});\n\n\tconst rows: TProperty[] = _get(data, 'listProperties.items', []);\n\tconst nextToken: string | null | undefined = _get(\n\t\tdata,\n\t\t'listProperties.nextToken',\n\t\tundefined\n\t);\n\tconst theme = useTheme();\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { order, orderBy, handleRequestSort } = useOrder('PropertyId');\n\tconst { selected, isSelected, handleSelect, handleSelectAll } =\n\t\tuseSelectRow('PropertyId');\n\n\tif (loading && !data) return <Loader />;\n\tif (error || _isEmpty(data)) {\n\t\treturn (\n\t\t\t<Alert severity='error' sx={{ color: theme.palette.error.main }}>\n\t\t\t\tSomething went wrong!\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst loadMore = () => {\n\t\tfetchMore({\n\t\t\tvariables: { limit: config.pagination.limit, nextToken },\n\t\t});\n\t};\n\n\tconst handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\thandleSelectAll(event.target.checked, rows);\n\t};\n\n\tconst editProperty = (id: string) => {\n\t\thistory.push(`/property/${id}`);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PropertyToolbar numSelected={selected.length} />\n\t\t\t<TableContainer>\n\t\t\t\t<Table className={classes.table} aria-labelledby='tableTitle' size='small'>\n\t\t\t\t\t<Header\n\t\t\t\t\t\tnumSelected={selected.length}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderBy={orderBy}\n\t\t\t\t\t\tonSelectAllClick={handleSelectAllClick}\n\t\t\t\t\t\tonRequestSort={handleRequestSort}\n\t\t\t\t\t\trowCount={rows.length}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{stableSort<TProperty>(rows, getComparator(order, orderBy)).map(\n\t\t\t\t\t\t\t(row, index) => {\n\t\t\t\t\t\t\t\tif (typeof row === 'number') return null;\n\t\t\t\t\t\t\t\tconst isItemSelected = isSelected(row.PropertyId);\n\t\t\t\t\t\t\t\tconst labelId = `enhanced-table-checkbox-${index}`;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleSelect(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\trole='checkbox'\n\t\t\t\t\t\t\t\t\t\taria-checked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\t\t\t\t\tkey={row.PropertyId}\n\t\t\t\t\t\t\t\t\t\tselected={isItemSelected}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pl: 3 }} padding='checkbox'>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isItemSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t'aria-labelledby': labelId,\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell component='th' id={labelId} scope='row' padding='none'>\n\t\t\t\t\t\t\t\t\t\t\t{row.PropertyId}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.PropertyData.StreetAddress}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.PropertyData.County}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.PropertyData.State}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.PropertyData.Zip}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='left'>{row.PropertyData.City}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell sx={{ pr: 3 }} align='left'>\n\t\t\t\t\t\t\t\t\t\t\t{row.PropertyNo}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell align='center' sx={{ pr: 3 }}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => editProperty(row.PropertyId)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<LoadMore onLoadMore={loadMore} disabled={!nextToken} loading={loading} />\n\t\t</>\n\t);\n};\n\nexport default PropertyList;\n","// material-ui\nimport MainCard from '../../../ui-component/cards/MainCard';\n\n// project imports\nimport PropertyList from '../../application/property/PropertyList';\n\nconst ListPage = () => (\n\t<MainCard title='Properties List'>\n\t\t<PropertyList />\n\t</MainCard>\n);\n\nexport default ListPage;\n","/* tslint:disable */\n/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getForm = /* GraphQL */ `\n\tquery GetForm($FormId: ID!) {\n\t\tgetForm(FormId: $FormId) {\n\t\t\tCategoryId\n\t\t\tCreatedBy\n\t\t\tCreatedDT\n\t\t\tFormId\n\t\t\tFormStatus\n\t\t\tFormTypeId\n\t\t\tTemplate\n\t\t\tTitle\n\t\t\tUpdatedBy\n\t\t\tUpdatedDT\n\t\t}\n\t}\n`;\nexport const getFormCategory = /* GraphQL */ `\n\tquery GetFormCategory($CategoryId: ID!) {\n\t\tgetFormCategory(CategoryId: $CategoryId) {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const getOffer = /* GraphQL */ `\n\tquery GetOffer($OfferId: ID!) {\n\t\tgetOffer(OfferId: $OfferId) {\n\t\t\tAgentInfo {\n\t\t\t\tAssistantEmail\n\t\t\t\tDreNumber\n\t\t\t\tEmail\n\t\t\t\tFirstname\n\t\t\t\tLastname\n\t\t\t\tMiddlename\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tBuyerInfo {\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tMiddleName\n\t\t\t\tTitleName\n\t\t\t}\n\t\t\tBuyerType\n\t\t\tContingencies {\n\t\t\t\tAllRemoved\n\t\t\t\tAnyAndAll\n\t\t\t\tFinanceContingency\n\t\t\t\tFinanceContingencyDueDate\n\t\t\t\tFinanceContingencyRemoved\n\t\t\t\tFinanceContingencyRemovedAt\n\t\t\t\tInspectionContingency\n\t\t\t\tInspectionContingencyDueDate\n\t\t\t\tInspectionContingencyRemoved\n\t\t\t\tInspectionContingencyRemovedAt\n\t\t\t\tSaleOfHomeContingency\n\t\t\t\tSaleOfHomeContingencyDueDate\n\t\t\t\tSaleOfHomeContingencyRemoved\n\t\t\t\tSaleOfHomeContingencyRemovedAt\n\t\t\t}\n\t\t\tCounterOffer {\n\t\t\t\tCounterOfferId\n\t\t\t\tForms\n\t\t\t\tPosition\n\t\t\t}\n\t\t\tFirmInfo {\n\t\t\t\tCompanyEmail\n\t\t\t\tCompanyPhone\n\t\t\t\tCompanyname\n\t\t\t\tDreNumber\n\t\t\t}\n\t\t\tFunding {\n\t\t\t\tDownPayment\n\t\t\t\tFicoScore\n\t\t\t\tLoanType\n\t\t\t\tPreapprovedForLoan\n\t\t\t\tPurchaseType\n\t\t\t}\n\t\t\tOffer {\n\t\t\t\tClosingPeriod\n\t\t\t\tFinanceContingency\n\t\t\t\tFurniture\n\t\t\t\tInspectionContingency\n\t\t\t\tOfferPrice\n\t\t\t\tSaleOfHomeContingency\n\t\t\t}\n\t\t\tOfferId\n\t\t\tOfferNo\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tStep {\n\t\t\t\tbuyer_can_submit_offer\n\t\t\t\tdisplay_on_advisor_portal\n\t\t\t\tdisplay_on_seller_dashboard\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\twaiting_seller_to_act\n\t\t\t}\n\t\t\tStepId\n\t\t}\n\t}\n`;\nexport const getOfferDocPutUrls = /* GraphQL */ `\n\tquery GetOfferDocPutUrls(\n\t\t$DocumentType: String!\n\t\t$Documents: [FileItemInput]!\n\t\t$OfferId: ID!\n\t) {\n\t\tgetOfferDocPutUrls(\n\t\t\tDocumentType: $DocumentType\n\t\t\tDocuments: $Documents\n\t\t\tOfferId: $OfferId\n\t\t) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getOfferStep = /* GraphQL */ `\n\tquery GetOfferStep($StepId: ID!) {\n\t\tgetOfferStep(StepId: $StepId) {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const getProperty = /* GraphQL */ `\n\tquery GetProperty($PropertyId: ID!) {\n\t\tgetProperty(PropertyId: $PropertyId) {\n\t\t\tCreatedAt\n\t\t\tListed\n\t\t\tPropertyData {\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingType\n\t\t\t\tYearBuilt\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyNo\n\t\t\tThumbnail {\n\t\t\t\tid\n\t\t\t\tkey\n\t\t\t\tname\n\t\t\t\tpresignedUrl\n\t\t\t\tsize\n\t\t\t\ttype\n\t\t\t}\n\t\t\tUpdatedAt\n\t\t}\n\t}\n`;\nexport const getPropertyThumbnailPutUrl = /* GraphQL */ `\n\tquery GetPropertyThumbnailPutUrl($Photos: [FileItemInput]!, $PropertyId: ID!) {\n\t\tgetPropertyThumbnailPutUrl(Photos: $Photos, PropertyId: $PropertyId) {\n\t\t\tid\n\t\t\turl\n\t\t}\n\t}\n`;\nexport const getSellRequest = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tApprovedBy\n\t\t\tApprovedByAdvisor\n\t\t\tCreatedAt\n\t\t\tCreatedBy\n\t\t\tDTPropertyId\n\t\t\tPropertyData {\n\t\t\t\tBedrooms\n\t\t\t\tCity\n\t\t\t\tCounty\n\t\t\t\tFullAddress\n\t\t\t\tFullBath\n\t\t\t\tLandUse\n\t\t\t\tLivingArea\n\t\t\t\tLotArea\n\t\t\t\tOwnerNames\n\t\t\t\tState\n\t\t\t\tStreetAddress\n\t\t\t\tVestingOwnershipRight\n\t\t\t\tVestingTypeMapped\n\t\t\t\tVestingTypeOverride\n\t\t\t\tYearBuilt\n\t\t\t\tYearBuiltOverride\n\t\t\t\tZip\n\t\t\t}\n\t\t\tPropertyId\n\t\t\tPropertyListPriceRange {\n\t\t\t\tMax\n\t\t\t\tMaxFormatted\n\t\t\t\tMin\n\t\t\t\tMinFormatted\n\t\t\t}\n\t\t\tRequestId\n\t\t\tSellerInfo {\n\t\t\t\tEmail\n\t\t\t\tFirstName\n\t\t\t\tLastName\n\t\t\t\tPhone\n\t\t\t}\n\t\t\tTaxReportTaxResourceMessage\n\t\t\tTaxReportTaxResourceStatus\n\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\tTaxReportTotalViewMessage\n\t\t\tTaxReportTotalViewStatus\n\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\tUpdatedAt\n\t\t\tUpdatedBy\n\t\t}\n\t}\n`;\nexport const searchDataTree = /* GraphQL */ `\n\tquery GetSellRequest($RequestId: ID!, $SearchText: String!) {\n\t\tgetSellRequest(RequestId: $RequestId) {\n\t\t\tDataTreeProperties(SearchText: $SearchText) {\n\t\t\t\tCount\n\t\t\t\tProperties {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tOwner\n\t\t\t\t\tPropertyId\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\nexport const listFormCategories = /* GraphQL */ `\n\tquery ListFormCategories {\n\t\tlistFormCategories {\n\t\t\tActive\n\t\t\tFormTypes {\n\t\t\t\tActive\n\t\t\t\tName\n\t\t\t\tOrder\n\t\t\t\tid\n\t\t\t}\n\t\t\tForms {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tItemType\n\t\t\tTitle\n\t\t\tid\n\t\t}\n\t}\n`;\nexport const listForms = /* GraphQL */ `\n\tquery ListForms($limit: Int, $nextToken: String) {\n\t\tlistForms(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCategoryId\n\t\t\t\tCreatedBy\n\t\t\t\tCreatedDT\n\t\t\t\tFormId\n\t\t\t\tFormStatus\n\t\t\t\tFormTypeId\n\t\t\t\tTemplate\n\t\t\t\tTitle\n\t\t\t\tUpdatedBy\n\t\t\t\tUpdatedDT\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listOfferSteps = /* GraphQL */ `\n\tquery ListOfferSteps {\n\t\tlistOfferSteps {\n\t\t\tallowed_actions {\n\t\t\t\taction\n\t\t\t\tform_action\n\t\t\t\tnext_step_id\n\t\t\t}\n\t\t\tbuyer_can_submit_offer\n\t\t\tdisplay_on_advisor_portal\n\t\t\tdisplay_on_seller_dashboard\n\t\t\tid\n\t\t\tmessages {\n\t\t\t\tadvisor\n\t\t\t\tbuyer\n\t\t\t\tseller\n\t\t\t}\n\t\t\tname\n\t\t\twaiting_seller_to_act\n\t\t}\n\t}\n`;\nexport const listOffers = /* GraphQL */ `\n\tquery ListOffers($limit: Int, $nextToken: String) {\n\t\tlistOffers(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tFunding {\n\t\t\t\t\tPurchaseType\n\t\t\t\t\tLoanType\n\t\t\t\t\tDownPayment\n\t\t\t\t}\n\t\t\t\tOfferNo\n\t\t\t\tOfferId\n\t\t\t\tPropertyData {\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t}\n\t\t\t\tCounterOffer {\n\t\t\t\t\tSellerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t\tBuyerCounter {\n\t\t\t\t\t\tOfferPrice\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tStep {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listProperties = /* GraphQL */ `\n\tquery ListProperties($limit: Int, $nextToken: String) {\n\t\tlistProperties(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tCreatedAt\n\t\t\t\tListed\n\t\t\t\tPropertyId\n\t\t\t\tPropertyNo\n\t\t\t\tUpdatedAt\n\t\t\t\tPropertyData {\n\t\t\t\t\tCity\n\t\t\t\t\tCounty\n\t\t\t\t\tFullAddress\n\t\t\t\t\tOwnerNames\n\t\t\t\t\tState\n\t\t\t\t\tStreetAddress\n\t\t\t\t\tZip\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSellRequests = /* GraphQL */ `\n\tquery ListSellRequests($limit: Int, $nextToken: String) {\n\t\tlistSellRequests(limit: $limit, nextToken: $nextToken) {\n\t\t\titems {\n\t\t\t\tApprovedBy\n\t\t\t\tApprovedByAdvisor\n\t\t\t\tCreatedAt\n\t\t\t\tCreatedBy\n\t\t\t\tDTPropertyId\n\t\t\t\tPropertyId\n\t\t\t\tRequestId\n\t\t\t\tTaxReportTaxResourceMessage\n\t\t\t\tTaxReportTaxResourceStatus\n\t\t\t\tTaxReportTaxResourceStatusUpdatedAt\n\t\t\t\tTaxReportTotalViewMessage\n\t\t\t\tTaxReportTotalViewStatus\n\t\t\t\tTaxReportTotalViewUpdatedAt\n\t\t\t\tUpdatedAt\n\t\t\t\tUpdatedBy\n\t\t\t\tSellerInfo {\n\t\t\t\t\tEmail\n\t\t\t\t\tFirstName\n\t\t\t\t\tLastName\n\t\t\t\t\tPhone\n\t\t\t\t}\n\t\t\t}\n\t\t\tnextToken\n\t\t}\n\t}\n`;\nexport const listSupportedVestingTypes = /* GraphQL */ `\n\tquery ListSupportedVestingTypes {\n\t\tlistSupportedVestingTypes\n\t}\n`;\n","import _get from 'lodash.get';\nimport { KeyedObject, ArrangementOrder } from '../types';\n\nconst descendingComparator = (\n\ta: KeyedObject,\n\tb: KeyedObject,\n\torderBy: string\n) => {\n\tif (_get(b, orderBy) < _get(a, orderBy)) {\n\t\treturn -1;\n\t}\n\tif (_get(b, orderBy) > _get(a, orderBy)) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\n\nconst getComparator = (order: ArrangementOrder, orderBy: string) =>\n\torder === 'desc'\n\t\t? (a: KeyedObject, b: KeyedObject) => descendingComparator(a, b, orderBy)\n\t\t: (a: KeyedObject, b: KeyedObject) => -descendingComparator(a, b, orderBy);\n\nconst stableSort = <T>(\n\tarray: T[],\n\tcomparator: (a: KeyedObject, b: KeyedObject) => number\n) => {\n\tconst stabilizedThis = array.map((el, index) => [el, index]);\n\tstabilizedThis.sort((a, b) => {\n\t\tconst order = comparator(a[0] as T, b[0] as T);\n\t\tif (order !== 0) return order;\n\t\treturn (a[1] as number) - (b[1] as number);\n\t});\n\treturn stabilizedThis.map(el => el[0]);\n};\n\nexport { descendingComparator, getComparator, stableSort };\n","import { Grid, Button, CircularProgress } from '@material-ui/core';\nimport { IconChevronDown } from '@tabler/icons';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nconst LoadMoreButton = withStyles({\n\troot: {\n\t\tborderRadius: '50%',\n\t\tminWidth: '0',\n\t\tpadding: '12px',\n\t},\n})(Button);\n\ntype Props = {\n\tonLoadMore: Function;\n\tloading: boolean;\n\tdisabled: boolean;\n};\n\nconst useStyles = makeStyles(() => ({\n\ttoolbar: {\n\t\tpadding: '24px 16px 2px',\n\t},\n}));\n\nconst LoadMore = ({ onLoadMore, disabled, loading }: Props) => {\n\tconst classes = useStyles();\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t\t<CircularProgress />\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Grid container className={classes.toolbar} justifyContent='center'>\n\t\t\t<LoadMoreButton\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => onLoadMore()}\n\t\t\t\tdisabled={disabled}\n\t\t\t>\n\t\t\t\t<IconChevronDown />\n\t\t\t</LoadMoreButton>\n\t\t</Grid>\n\t);\n};\n\nexport default LoadMore;\n"],"sourceRoot":""}