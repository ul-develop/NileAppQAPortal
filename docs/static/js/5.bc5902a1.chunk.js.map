{"version":3,"sources":["views/pages/authentication/login/AWSLogin.tsx","views/pages/authentication/login/index.tsx","views/pages/authentication/AuthWrapper.tsx","views/pages/authentication/AuthCardWrapper.tsx","ui-component/extended/AnimateButton.tsx"],"names":["useStyles","makeStyles","theme","loginInput","typography","customInput","AWSLogin","props","others","classes","login","useAuth","React","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","initialValues","username","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","error","Boolean","className","variant","InputLabel","htmlFor","OutlinedInput","id","type","value","name","onBlur","onChange","label","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Box","mt","AnimateButton","Button","disableElevation","disabled","size","color","Login","AuthWrapper","Grid","container","direction","justifyContent","sx","minHeight","item","xs","alignItems","m","sm","mb","AuthCardWrapper","spacing","to","Logo","styled","backgroundColor","palette","mode","background","default","primary","light","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","children","other","contentClass","forwardRef","ref","offset1","offset2","offset","scale","useCycle","x","cycleX","y","cycleY","div","animate","rotate","transition","repeat","Infinity","repeatType","duration","repeatDelay","undefined","onHoverEnd","onHoverStart","hover","tap","whileHover","whileTap","defaultProps"],"mappings":"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","file":"static/js/5.bc5902a1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles(theme => ({\r\n  loginInput: {\r\n    ...theme.typography.customInput,\r\n  },\r\n}));\r\n\r\nconst AWSLogin = (props: { login?: number }, { ...others }) => {\r\n  const classes = useStyles();\r\n  const { login } = useAuth();\r\n\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Formik\r\n        initialValues={{\r\n          username: '',\r\n          password: '',\r\n          submit: null,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          password: Yup.string().max(255).required('Password is required'),\r\n        })}\r\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n          try {\r\n            await login(values);\r\n          } catch (err: any) {\r\n            setStatus({ success: false });\r\n            setErrors({ submit: err.message });\r\n            setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        {({\r\n          errors,\r\n          handleBlur,\r\n          handleChange,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          touched,\r\n          values,\r\n        }) => (\r\n          <form noValidate onSubmit={handleSubmit} {...others}>\r\n            <FormControl\r\n              fullWidth\r\n              error={Boolean(touched.username && errors.username)}\r\n              className={classes.loginInput}\r\n              variant=\"outlined\"\r\n            >\r\n              <InputLabel htmlFor=\"outlined-adornment-username-login\">\r\n                Username\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-username-login\"\r\n                type=\"text\"\r\n                value={values.username}\r\n                name=\"username\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                label=\"Username\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.username && errors.username && (\r\n                <FormHelperText\r\n                  error\r\n                  id=\"standard-weight-helper-text-username-login\"\r\n                >\r\n                  {' '}\r\n                  {errors.username}{' '}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n\r\n            <FormControl\r\n              fullWidth\r\n              error={Boolean(touched.password && errors.password)}\r\n              className={classes.loginInput}\r\n              variant=\"outlined\"\r\n            >\r\n              <InputLabel htmlFor=\"outlined-adornment-password-login\">\r\n                Password\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password-login\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={values.password}\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                label=\"Password\"\r\n                inputProps={{}}\r\n              />\r\n              {touched.password && errors.password && (\r\n                <FormHelperText\r\n                  error\r\n                  id=\"standard-weight-helper-text-password-login\"\r\n                >\r\n                  {' '}\r\n                  {errors.password}{' '}\r\n                </FormHelperText>\r\n              )}\r\n            </FormControl>\r\n            {errors.submit && (\r\n              <Box mt={3}>\r\n                <FormHelperText error>{errors.submit}</FormHelperText>\r\n              </Box>\r\n            )}\r\n\r\n            <Box mt={2}>\r\n              <AnimateButton>\r\n                <Button\r\n                  disableElevation\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </AnimateButton>\r\n            </Box>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AWSLogin;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper from '../AuthWrapper';\r\nimport Logo from './../../../../ui-component/Logo';\r\nimport AuthCardWrapper from './../AuthCardWrapper';\r\nimport AWSLogin from './AWSLogin';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <AuthWrapper>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"flex-end\"\r\n        sx={{ minHeight: '100vh' }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            sx={{ minHeight: '100vh' }}\r\n          >\r\n            <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n              <AuthCardWrapper>\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Grid item>\r\n                    <RouterLink to=\"#\">\r\n                      <Logo />\r\n                    </RouterLink>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <AWSLogin />\r\n                  </Grid>\r\n                </Grid>\r\n              </AuthCardWrapper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// material-ui\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\n\r\nconst AuthWrapper = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper;\r\n","// material-ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// project import\r\nimport MainCard, { MainCardProps } from './../../../ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: theme.spacing(5) + ' !important',\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: theme.spacing(3) + ' !important'\r\n        }\r\n    }\r\n}));\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }: MainCardProps) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import React, { Ref } from 'react';\r\n// third-party\r\nimport { motion, useCycle } from 'framer-motion';\r\n\r\nexport type ScaleProps = {\r\n    hover: number | string | undefined;\r\n    tap: number | string | undefined;\r\n};\r\n\r\nexport interface AnimateButtonProps {\r\n    children?: React.ReactNode;\r\n    type?: 'slide' | 'scale' | 'rotate';\r\n    direction?: 'up' | 'down' | 'left' | 'right';\r\n    offset?: number;\r\n    scale?: ScaleProps;\r\n}\r\n\r\n//-----------------------|| ANIMATION BUTTON ||-----------------------//\r\n\r\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }: AnimateButtonProps, ref: Ref<HTMLDivElement>) => {\r\n    let offset1;\r\n    let offset2;\r\n    switch (direction) {\r\n        case 'up':\r\n        case 'left':\r\n            offset1 = offset;\r\n            offset2 = 0;\r\n            break;\r\n        case 'right':\r\n        case 'down':\r\n        default:\r\n            offset1 = 0;\r\n            offset2 = offset;\r\n            break;\r\n    }\r\n\r\n    const [x, cycleX] = useCycle(offset1, offset2);\r\n    const [y, cycleY] = useCycle(offset1, offset2);\r\n\r\n    switch (type) {\r\n        case 'rotate':\r\n            return (\r\n                <motion.div\r\n                    ref={ref}\r\n                    animate={{ rotate: 360 }}\r\n                    transition={{\r\n                        repeat: Infinity,\r\n                        repeatType: 'loop',\r\n                        duration: 2,\r\n                        repeatDelay: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n        case 'slide':\r\n            if (direction === 'up' || direction === 'down') {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ y: y !== undefined ? y : '' }}\r\n                        onHoverEnd={() => cycleY()}\r\n                        onHoverStart={() => cycleY()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <motion.div\r\n                        ref={ref}\r\n                        animate={{ x: x !== undefined ? x : '' }}\r\n                        onHoverEnd={() => cycleX()}\r\n                        onHoverStart={() => cycleX()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                );\r\n            }\r\n        case 'scale':\r\n        default:\r\n            if (typeof scale === 'number') {\r\n                scale = {\r\n                    hover: scale,\r\n                    tap: scale\r\n                };\r\n            }\r\n            return (\r\n                <motion.div ref={ref} whileHover={{ scale: scale?.hover }} whileTap={{ scale: scale?.tap }}>\r\n                    {children}\r\n                </motion.div>\r\n            );\r\n    }\r\n});\r\n\r\nAnimateButton.defaultProps = {\r\n    type: 'scale',\r\n    offset: 10,\r\n    direction: 'right',\r\n    scale: {\r\n        hover: 1,\r\n        tap: 0.9\r\n    }\r\n};\r\n\r\nexport default AnimateButton;\r\n"],"sourceRoot":""}